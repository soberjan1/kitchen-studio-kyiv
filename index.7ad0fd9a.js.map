{"mappings":"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","sources":["<anon>","src/index.js","src/js/header.js","src/js/hero.js","node_modules/swiper/swiper-bundle.js","node_modules/node_modules/ssr-window/ssr-window.esm.js","node_modules/node_modules/dom7/dom7.esm.js","node_modules/src/utils/dom.js","node_modules/src/utils/utils.js","node_modules/src/utils/get-support.js","node_modules/src/utils/get-device.js","node_modules/src/utils/get-browser.js","node_modules/src/modules/resize/resize.js","node_modules/src/modules/observer/observer.js","node_modules/src/components/core/modular.js","node_modules/src/components/core/events-emitter.js","node_modules/src/components/core/update/updateSize.js","node_modules/src/components/core/update/updateSlides.js","node_modules/src/components/core/update/updateAutoHeight.js","node_modules/src/components/core/update/updateSlidesOffset.js","node_modules/src/components/core/update/updateSlidesProgress.js","node_modules/src/components/core/update/updateProgress.js","node_modules/src/components/core/update/updateSlidesClasses.js","node_modules/src/components/core/update/updateActiveIndex.js","node_modules/src/components/core/update/updateClickedSlide.js","node_modules/src/components/core/update/index.js","node_modules/src/components/core/translate/getTranslate.js","node_modules/src/components/core/translate/setTranslate.js","node_modules/src/components/core/translate/minTranslate.js","node_modules/src/components/core/translate/maxTranslate.js","node_modules/src/components/core/translate/translateTo.js","node_modules/src/components/core/translate/index.js","node_modules/src/components/core/transition/setTransition.js","node_modules/src/components/core/transition/transitionStart.js","node_modules/src/components/core/transition/transitionEnd.js","node_modules/src/components/core/transition/index.js","node_modules/src/components/core/slide/slideTo.js","node_modules/src/components/core/slide/slideToLoop.js","node_modules/src/components/core/slide/slideNext.js","node_modules/src/components/core/slide/slidePrev.js","node_modules/src/components/core/slide/slideReset.js","node_modules/src/components/core/slide/slideToClosest.js","node_modules/src/components/core/slide/slideToClickedSlide.js","node_modules/src/components/core/slide/index.js","node_modules/src/components/core/loop/loopCreate.js","node_modules/src/components/core/loop/loopFix.js","node_modules/src/components/core/loop/loopDestroy.js","node_modules/src/components/core/loop/index.js","node_modules/src/components/core/grab-cursor/setGrabCursor.js","node_modules/src/components/core/grab-cursor/unsetGrabCursor.js","node_modules/src/components/core/grab-cursor/index.js","node_modules/src/components/core/manipulation/appendSlide.js","node_modules/src/components/core/manipulation/prependSlide.js","node_modules/src/components/core/manipulation/addSlide.js","node_modules/src/components/core/manipulation/removeSlide.js","node_modules/src/components/core/manipulation/removeAllSlides.js","node_modules/src/components/core/manipulation/index.js","node_modules/src/components/core/events/onTouchStart.js","node_modules/src/components/core/events/onTouchMove.js","node_modules/src/components/core/events/onTouchEnd.js","node_modules/src/components/core/events/onResize.js","node_modules/src/components/core/events/onClick.js","node_modules/src/components/core/events/onScroll.js","node_modules/src/components/core/events/index.js","node_modules/src/components/core/breakpoints/setBreakpoint.js","node_modules/src/components/core/breakpoints/getBreakpoint.js","node_modules/src/components/core/breakpoints/index.js","node_modules/src/components/core/classes/addClasses.js","node_modules/src/components/core/classes/removeClasses.js","node_modules/src/components/core/classes/index.js","node_modules/src/components/core/images/loadImage.js","node_modules/src/components/core/images/preloadImages.js","node_modules/src/components/core/images/index.js","node_modules/src/components/core/check-overflow/index.js","node_modules/src/components/core/defaults.js","node_modules/src/components/core/core-class.js","node_modules/src/components/virtual/virtual.js","node_modules/src/components/keyboard/keyboard.js","node_modules/src/components/mousewheel/mousewheel.js","node_modules/src/components/navigation/navigation.js","node_modules/src/components/pagination/pagination.js","node_modules/src/components/scrollbar/scrollbar.js","node_modules/src/components/parallax/parallax.js","node_modules/src/components/zoom/zoom.js","node_modules/src/components/lazy/lazy.js","node_modules/src/components/controller/controller.js","node_modules/src/components/a11y/a11y.js","node_modules/src/components/history/history.js","node_modules/src/components/hash-navigation/hash-navigation.js","node_modules/src/components/autoplay/autoplay.js","node_modules/src/components/effect-fade/effect-fade.js","node_modules/src/components/effect-cube/effect-cube.js","node_modules/src/components/effect-flip/effect-flip.js","node_modules/src/components/effect-coverflow/effect-coverflow.js","node_modules/src/components/thumbs/thumbs.js","node_modules/src/swiper.js"],"sourcesContent":["(function () {\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nwindow.onscroll = $d35165bd5db5382a$var$changeHeaderBackground;\nfunction $d35165bd5db5382a$var$changeHeaderBackground() {\n    const header = document.querySelector(\"[data-header]\");\n    const headerOffsetTrigger = header.offsetHeight;\n    const pageOffset = window.pageYOffset;\n    if (pageOffset > headerOffsetTrigger) header.classList.add(\"no-transparency\");\n    else header.classList.remove(\"no-transparency\");\n}\n(()=>{\n    const mobileMenu = document.querySelector(\".js-menu-container\");\n    const openMenuBtn = document.querySelector(\".js-open-menu\");\n    const closeMenuBtn = document.querySelector(\".js-close-menu\");\n    const toggleMenu = ()=>{\n        const isMenuOpen = openMenuBtn.getAttribute(\"aria-expanded\") === \"true\" || false;\n        openMenuBtn.setAttribute(\"aria-expanded\", !isMenuOpen);\n        mobileMenu.classList.toggle(\"is-open\");\n        const scrollLockMethod = !isMenuOpen ? \"disableBodyScroll\" : \"enableBodyScroll\";\n        bodyScrollLock[scrollLockMethod](document.body);\n    };\n    openMenuBtn.addEventListener(\"click\", toggleMenu);\n    closeMenuBtn.addEventListener(\"click\", toggleMenu);\n    // Close the mobile menu on wider screens if the device orientation changes\n    window.matchMedia(\"(min-width: 768px)\").addEventListener(\"change\", (e)=>{\n        if (!e.matches) return;\n        mobileMenu.classList.remove(\"is-open\");\n        openMenuBtn.setAttribute(\"aria-expanded\", false);\n        bodyScrollLock.enableBodyScroll(document.body);\n    });\n})();\n\n\nvar $a43b7d65e6bbcaac$exports = {};\n/**\n * Swiper 6.8.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2021 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: August 23, 2021\n */ (function(global, factory) {\n    $a43b7d65e6bbcaac$exports = factory();\n})($a43b7d65e6bbcaac$exports, function() {\n    \"use strict\";\n    function _defineProperties(target, props) {\n        for(var i = 0; i < props.length; i++){\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n    }\n    function _extends() {\n        _extends = Object.assign || function(target) {\n            for(var i = 1; i < arguments.length; i++){\n                var source = arguments[i];\n                for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];\n            }\n            return target;\n        };\n        return _extends.apply(this, arguments);\n    }\n    /**\n   * SSR Window 3.0.0\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2020, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: November 9, 2020\n   */ /* eslint-disable no-param-reassign */ function isObject$1(obj) {\n        return obj !== null && typeof obj === \"object\" && \"constructor\" in obj && obj.constructor === Object;\n    }\n    function extend$1(target, src) {\n        if (target === void 0) target = {};\n        if (src === void 0) src = {};\n        Object.keys(src).forEach(function(key) {\n            if (typeof target[key] === \"undefined\") target[key] = src[key];\n            else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) extend$1(target[key], src[key]);\n        });\n    }\n    var ssrDocument = {\n        body: {},\n        addEventListener: function addEventListener() {},\n        removeEventListener: function removeEventListener() {},\n        activeElement: {\n            blur: function blur() {},\n            nodeName: \"\"\n        },\n        querySelector: function querySelector() {\n            return null;\n        },\n        querySelectorAll: function querySelectorAll() {\n            return [];\n        },\n        getElementById: function getElementById() {\n            return null;\n        },\n        createEvent: function createEvent() {\n            return {\n                initEvent: function initEvent() {}\n            };\n        },\n        createElement: function createElement() {\n            return {\n                children: [],\n                childNodes: [],\n                style: {},\n                setAttribute: function setAttribute() {},\n                getElementsByTagName: function getElementsByTagName() {\n                    return [];\n                }\n            };\n        },\n        createElementNS: function createElementNS() {\n            return {};\n        },\n        importNode: function importNode() {\n            return null;\n        },\n        location: {\n            hash: \"\",\n            host: \"\",\n            hostname: \"\",\n            href: \"\",\n            origin: \"\",\n            pathname: \"\",\n            protocol: \"\",\n            search: \"\"\n        }\n    };\n    function getDocument() {\n        var doc = typeof document !== \"undefined\" ? document : {};\n        extend$1(doc, ssrDocument);\n        return doc;\n    }\n    var ssrWindow = {\n        document: ssrDocument,\n        navigator: {\n            userAgent: \"\"\n        },\n        location: {\n            hash: \"\",\n            host: \"\",\n            hostname: \"\",\n            href: \"\",\n            origin: \"\",\n            pathname: \"\",\n            protocol: \"\",\n            search: \"\"\n        },\n        history: {\n            replaceState: function replaceState() {},\n            pushState: function pushState() {},\n            go: function go() {},\n            back: function back() {}\n        },\n        CustomEvent: function CustomEvent() {\n            return this;\n        },\n        addEventListener: function addEventListener() {},\n        removeEventListener: function removeEventListener() {},\n        getComputedStyle: function getComputedStyle1() {\n            return {\n                getPropertyValue: function getPropertyValue() {\n                    return \"\";\n                }\n            };\n        },\n        Image: function Image() {},\n        Date: function Date1() {},\n        screen: {},\n        setTimeout: function setTimeout1() {},\n        clearTimeout: function clearTimeout1() {},\n        matchMedia: function matchMedia() {\n            return {};\n        },\n        requestAnimationFrame: function requestAnimationFrame(callback) {\n            if (typeof setTimeout === \"undefined\") {\n                callback();\n                return null;\n            }\n            return setTimeout(callback, 0);\n        },\n        cancelAnimationFrame: function cancelAnimationFrame(id) {\n            if (typeof setTimeout === \"undefined\") return;\n            clearTimeout(id);\n        }\n    };\n    function getWindow() {\n        var win = typeof window !== \"undefined\" ? window : {};\n        extend$1(win, ssrWindow);\n        return win;\n    }\n    /**\n   * Dom7 3.0.0\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * https://framework7.io/docs/dom7.html\n   *\n   * Copyright 2020, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: November 9, 2020\n   */ function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n        subClass.__proto__ = superClass;\n    }\n    function _getPrototypeOf(o) {\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n            return o.__proto__ || Object.getPrototypeOf(o);\n        };\n        return _getPrototypeOf(o);\n    }\n    function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n            o.__proto__ = p;\n            return o;\n        };\n        return _setPrototypeOf(o, p);\n    }\n    function _isNativeReflectConstruct() {\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n        if (Reflect.construct.sham) return false;\n        if (typeof Proxy === \"function\") return true;\n        try {\n            Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n    function _construct(Parent, args, Class) {\n        if (_isNativeReflectConstruct()) _construct = Reflect.construct;\n        else _construct = function _construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) _setPrototypeOf(instance, Class.prototype);\n            return instance;\n        };\n        return _construct.apply(null, arguments);\n    }\n    function _isNativeFunction(fn) {\n        return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n    }\n    function _wrapNativeSuper(Class) {\n        var _cache = typeof Map === \"function\" ? new Map() : undefined;\n        _wrapNativeSuper = function _wrapNativeSuper(Class) {\n            if (Class === null || !_isNativeFunction(Class)) return Class;\n            if (typeof Class !== \"function\") throw new TypeError(\"Super expression must either be null or a function\");\n            if (typeof _cache !== \"undefined\") {\n                if (_cache.has(Class)) return _cache.get(Class);\n                _cache.set(Class, Wrapper);\n            }\n            function Wrapper() {\n                return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n            }\n            Wrapper.prototype = Object.create(Class.prototype, {\n                constructor: {\n                    value: Wrapper,\n                    enumerable: false,\n                    writable: true,\n                    configurable: true\n                }\n            });\n            return _setPrototypeOf(Wrapper, Class);\n        };\n        return _wrapNativeSuper(Class);\n    }\n    function _assertThisInitialized(self) {\n        if (self === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        return self;\n    }\n    /* eslint-disable no-proto */ function makeReactive(obj) {\n        var proto = obj.__proto__;\n        Object.defineProperty(obj, \"__proto__\", {\n            get: function get() {\n                return proto;\n            },\n            set: function set(value) {\n                proto.__proto__ = value;\n            }\n        });\n    }\n    var Dom7 = /*#__PURE__*/ function(_Array) {\n        _inheritsLoose(Dom7, _Array);\n        function Dom7(items) {\n            var _this;\n            _this = _Array.call.apply(_Array, [\n                this\n            ].concat(items)) || this;\n            makeReactive(_assertThisInitialized(_this));\n            return _this;\n        }\n        return Dom7;\n    }(/*#__PURE__*/ _wrapNativeSuper(Array));\n    function arrayFlat(arr) {\n        if (arr === void 0) arr = [];\n        var res = [];\n        arr.forEach(function(el) {\n            if (Array.isArray(el)) res.push.apply(res, arrayFlat(el));\n            else res.push(el);\n        });\n        return res;\n    }\n    function arrayFilter(arr, callback) {\n        return Array.prototype.filter.call(arr, callback);\n    }\n    function arrayUnique(arr) {\n        var uniqueArray = [];\n        for(var i = 0; i < arr.length; i += 1)if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n        return uniqueArray;\n    }\n    function qsa(selector, context) {\n        if (typeof selector !== \"string\") return [\n            selector\n        ];\n        var a = [];\n        var res = context.querySelectorAll(selector);\n        for(var i = 0; i < res.length; i += 1)a.push(res[i]);\n        return a;\n    }\n    function $(selector, context) {\n        var window1 = getWindow();\n        var document1 = getDocument();\n        var arr = [];\n        if (!context && selector instanceof Dom7) return selector;\n        if (!selector) return new Dom7(arr);\n        if (typeof selector === \"string\") {\n            var html = selector.trim();\n            if (html.indexOf(\"<\") >= 0 && html.indexOf(\">\") >= 0) {\n                var toCreate = \"div\";\n                if (html.indexOf(\"<li\") === 0) toCreate = \"ul\";\n                if (html.indexOf(\"<tr\") === 0) toCreate = \"tbody\";\n                if (html.indexOf(\"<td\") === 0 || html.indexOf(\"<th\") === 0) toCreate = \"tr\";\n                if (html.indexOf(\"<tbody\") === 0) toCreate = \"table\";\n                if (html.indexOf(\"<option\") === 0) toCreate = \"select\";\n                var tempParent = document1.createElement(toCreate);\n                tempParent.innerHTML = html;\n                for(var i = 0; i < tempParent.childNodes.length; i += 1)arr.push(tempParent.childNodes[i]);\n            } else arr = qsa(selector.trim(), context || document1);\n             // arr = qsa(selector, document);\n        } else if (selector.nodeType || selector === window1 || selector === document1) arr.push(selector);\n        else if (Array.isArray(selector)) {\n            if (selector instanceof Dom7) return selector;\n            arr = selector;\n        }\n        return new Dom7(arrayUnique(arr));\n    }\n    $.fn = Dom7.prototype;\n    function addClass() {\n        for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++)classes[_key] = arguments[_key];\n        var classNames = arrayFlat(classes.map(function(c) {\n            return c.split(\" \");\n        }));\n        this.forEach(function(el) {\n            var _el$classList;\n            (_el$classList = el.classList).add.apply(_el$classList, classNames);\n        });\n        return this;\n    }\n    function removeClass() {\n        for(var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)classes[_key2] = arguments[_key2];\n        var classNames = arrayFlat(classes.map(function(c) {\n            return c.split(\" \");\n        }));\n        this.forEach(function(el) {\n            var _el$classList2;\n            (_el$classList2 = el.classList).remove.apply(_el$classList2, classNames);\n        });\n        return this;\n    }\n    function toggleClass() {\n        for(var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)classes[_key3] = arguments[_key3];\n        var classNames = arrayFlat(classes.map(function(c) {\n            return c.split(\" \");\n        }));\n        this.forEach(function(el) {\n            classNames.forEach(function(className) {\n                el.classList.toggle(className);\n            });\n        });\n    }\n    function hasClass() {\n        for(var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++)classes[_key4] = arguments[_key4];\n        var classNames = arrayFlat(classes.map(function(c) {\n            return c.split(\" \");\n        }));\n        return arrayFilter(this, function(el) {\n            return classNames.filter(function(className) {\n                return el.classList.contains(className);\n            }).length > 0;\n        }).length > 0;\n    }\n    function attr(attrs, value) {\n        if (arguments.length === 1 && typeof attrs === \"string\") {\n            // Get attr\n            if (this[0]) return this[0].getAttribute(attrs);\n            return undefined;\n        } // Set attrs\n        for(var i = 0; i < this.length; i += 1){\n            if (arguments.length === 2) // String\n            this[i].setAttribute(attrs, value);\n            else // Object\n            for(var attrName in attrs){\n                this[i][attrName] = attrs[attrName];\n                this[i].setAttribute(attrName, attrs[attrName]);\n            }\n        }\n        return this;\n    }\n    function removeAttr(attr) {\n        for(var i = 0; i < this.length; i += 1)this[i].removeAttribute(attr);\n        return this;\n    }\n    function transform(transform) {\n        for(var i = 0; i < this.length; i += 1)this[i].style.transform = transform;\n        return this;\n    }\n    function transition$1(duration) {\n        for(var i = 0; i < this.length; i += 1)this[i].style.transitionDuration = typeof duration !== \"string\" ? duration + \"ms\" : duration;\n        return this;\n    }\n    function on() {\n        for(var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++)args[_key5] = arguments[_key5];\n        var eventType = args[0], targetSelector = args[1], listener = args[2], capture = args[3];\n        if (typeof args[1] === \"function\") {\n            eventType = args[0];\n            listener = args[1];\n            capture = args[2];\n            targetSelector = undefined;\n        }\n        if (!capture) capture = false;\n        function handleLiveEvent(e) {\n            var target = e.target;\n            if (!target) return;\n            var eventData = e.target.dom7EventData || [];\n            if (eventData.indexOf(e) < 0) eventData.unshift(e);\n            if ($(target).is(targetSelector)) listener.apply(target, eventData);\n            else {\n                var _parents = $(target).parents(); // eslint-disable-line\n                for(var k = 0; k < _parents.length; k += 1)if ($(_parents[k]).is(targetSelector)) listener.apply(_parents[k], eventData);\n            }\n        }\n        function handleEvent(e) {\n            var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n            if (eventData.indexOf(e) < 0) eventData.unshift(e);\n            listener.apply(this, eventData);\n        }\n        var events = eventType.split(\" \");\n        var j;\n        for(var i = 0; i < this.length; i += 1){\n            var el = this[i];\n            if (!targetSelector) for(j = 0; j < events.length; j += 1){\n                var event = events[j];\n                if (!el.dom7Listeners) el.dom7Listeners = {};\n                if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n                el.dom7Listeners[event].push({\n                    listener: listener,\n                    proxyListener: handleEvent\n                });\n                el.addEventListener(event, handleEvent, capture);\n            }\n            else // Live events\n            for(j = 0; j < events.length; j += 1){\n                var _event = events[j];\n                if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n                if (!el.dom7LiveListeners[_event]) el.dom7LiveListeners[_event] = [];\n                el.dom7LiveListeners[_event].push({\n                    listener: listener,\n                    proxyListener: handleLiveEvent\n                });\n                el.addEventListener(_event, handleLiveEvent, capture);\n            }\n        }\n        return this;\n    }\n    function off() {\n        for(var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++)args[_key6] = arguments[_key6];\n        var eventType = args[0], targetSelector = args[1], listener = args[2], capture = args[3];\n        if (typeof args[1] === \"function\") {\n            eventType = args[0];\n            listener = args[1];\n            capture = args[2];\n            targetSelector = undefined;\n        }\n        if (!capture) capture = false;\n        var events = eventType.split(\" \");\n        for(var i = 0; i < events.length; i += 1){\n            var event = events[i];\n            for(var j = 0; j < this.length; j += 1){\n                var el = this[j];\n                var handlers = void 0;\n                if (!targetSelector && el.dom7Listeners) handlers = el.dom7Listeners[event];\n                else if (targetSelector && el.dom7LiveListeners) handlers = el.dom7LiveListeners[event];\n                if (handlers && handlers.length) for(var k = handlers.length - 1; k >= 0; k -= 1){\n                    var handler = handlers[k];\n                    if (listener && handler.listener === listener) {\n                        el.removeEventListener(event, handler.proxyListener, capture);\n                        handlers.splice(k, 1);\n                    } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n                        el.removeEventListener(event, handler.proxyListener, capture);\n                        handlers.splice(k, 1);\n                    } else if (!listener) {\n                        el.removeEventListener(event, handler.proxyListener, capture);\n                        handlers.splice(k, 1);\n                    }\n                }\n            }\n        }\n        return this;\n    }\n    function trigger() {\n        var window1 = getWindow();\n        for(var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++)args[_key9] = arguments[_key9];\n        var events = args[0].split(\" \");\n        var eventData = args[1];\n        for(var i = 0; i < events.length; i += 1){\n            var event = events[i];\n            for(var j = 0; j < this.length; j += 1){\n                var el = this[j];\n                if (window1.CustomEvent) {\n                    var evt = new window1.CustomEvent(event, {\n                        detail: eventData,\n                        bubbles: true,\n                        cancelable: true\n                    });\n                    el.dom7EventData = args.filter(function(data, dataIndex) {\n                        return dataIndex > 0;\n                    });\n                    el.dispatchEvent(evt);\n                    el.dom7EventData = [];\n                    delete el.dom7EventData;\n                }\n            }\n        }\n        return this;\n    }\n    function transitionEnd$1(callback) {\n        var dom = this;\n        function fireCallBack(e) {\n            if (e.target !== this) return;\n            callback.call(this, e);\n            dom.off(\"transitionend\", fireCallBack);\n        }\n        if (callback) dom.on(\"transitionend\", fireCallBack);\n        return this;\n    }\n    function outerWidth(includeMargins) {\n        if (this.length > 0) {\n            if (includeMargins) {\n                var _styles = this.styles();\n                return this[0].offsetWidth + parseFloat(_styles.getPropertyValue(\"margin-right\")) + parseFloat(_styles.getPropertyValue(\"margin-left\"));\n            }\n            return this[0].offsetWidth;\n        }\n        return null;\n    }\n    function outerHeight(includeMargins) {\n        if (this.length > 0) {\n            if (includeMargins) {\n                var _styles2 = this.styles();\n                return this[0].offsetHeight + parseFloat(_styles2.getPropertyValue(\"margin-top\")) + parseFloat(_styles2.getPropertyValue(\"margin-bottom\"));\n            }\n            return this[0].offsetHeight;\n        }\n        return null;\n    }\n    function offset() {\n        if (this.length > 0) {\n            var window1 = getWindow();\n            var document1 = getDocument();\n            var el = this[0];\n            var box = el.getBoundingClientRect();\n            var body = document1.body;\n            var clientTop = el.clientTop || body.clientTop || 0;\n            var clientLeft = el.clientLeft || body.clientLeft || 0;\n            var scrollTop = el === window1 ? window1.scrollY : el.scrollTop;\n            var scrollLeft = el === window1 ? window1.scrollX : el.scrollLeft;\n            return {\n                top: box.top + scrollTop - clientTop,\n                left: box.left + scrollLeft - clientLeft\n            };\n        }\n        return null;\n    }\n    function styles() {\n        var window1 = getWindow();\n        if (this[0]) return window1.getComputedStyle(this[0], null);\n        return {};\n    }\n    function css(props, value) {\n        var window1 = getWindow();\n        var i;\n        if (arguments.length === 1) {\n            if (typeof props === \"string\") {\n                // .css('width')\n                if (this[0]) return window1.getComputedStyle(this[0], null).getPropertyValue(props);\n            } else {\n                // .css({ width: '100px' })\n                for(i = 0; i < this.length; i += 1)for(var _prop in props)this[i].style[_prop] = props[_prop];\n                return this;\n            }\n        }\n        if (arguments.length === 2 && typeof props === \"string\") {\n            // .css('width', '100px')\n            for(i = 0; i < this.length; i += 1)this[i].style[props] = value;\n            return this;\n        }\n        return this;\n    }\n    function each(callback) {\n        if (!callback) return this;\n        this.forEach(function(el, index) {\n            callback.apply(el, [\n                el,\n                index\n            ]);\n        });\n        return this;\n    }\n    function filter(callback) {\n        var result = arrayFilter(this, callback);\n        return $(result);\n    }\n    function html(html) {\n        if (typeof html === \"undefined\") return this[0] ? this[0].innerHTML : null;\n        for(var i = 0; i < this.length; i += 1)this[i].innerHTML = html;\n        return this;\n    }\n    function text(text) {\n        if (typeof text === \"undefined\") return this[0] ? this[0].textContent.trim() : null;\n        for(var i = 0; i < this.length; i += 1)this[i].textContent = text;\n        return this;\n    }\n    function is(selector) {\n        var window1 = getWindow();\n        var document1 = getDocument();\n        var el = this[0];\n        var compareWith;\n        var i;\n        if (!el || typeof selector === \"undefined\") return false;\n        if (typeof selector === \"string\") {\n            if (el.matches) return el.matches(selector);\n            if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n            if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n            compareWith = $(selector);\n            for(i = 0; i < compareWith.length; i += 1){\n                if (compareWith[i] === el) return true;\n            }\n            return false;\n        }\n        if (selector === document1) return el === document1;\n        if (selector === window1) return el === window1;\n        if (selector.nodeType || selector instanceof Dom7) {\n            compareWith = selector.nodeType ? [\n                selector\n            ] : selector;\n            for(i = 0; i < compareWith.length; i += 1){\n                if (compareWith[i] === el) return true;\n            }\n            return false;\n        }\n        return false;\n    }\n    function index() {\n        var child = this[0];\n        var i;\n        if (child) {\n            i = 0; // eslint-disable-next-line\n            while((child = child.previousSibling) !== null)if (child.nodeType === 1) i += 1;\n            return i;\n        }\n        return undefined;\n    }\n    function eq(index) {\n        if (typeof index === \"undefined\") return this;\n        var length = this.length;\n        if (index > length - 1) return $([]);\n        if (index < 0) {\n            var returnIndex = length + index;\n            if (returnIndex < 0) return $([]);\n            return $([\n                this[returnIndex]\n            ]);\n        }\n        return $([\n            this[index]\n        ]);\n    }\n    function append() {\n        var newChild;\n        var document1 = getDocument();\n        for(var k = 0; k < arguments.length; k += 1){\n            newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];\n            for(var i = 0; i < this.length; i += 1){\n                if (typeof newChild === \"string\") {\n                    var tempDiv = document1.createElement(\"div\");\n                    tempDiv.innerHTML = newChild;\n                    while(tempDiv.firstChild)this[i].appendChild(tempDiv.firstChild);\n                } else if (newChild instanceof Dom7) for(var j = 0; j < newChild.length; j += 1)this[i].appendChild(newChild[j]);\n                else this[i].appendChild(newChild);\n            }\n        }\n        return this;\n    }\n    function prepend(newChild) {\n        var document1 = getDocument();\n        var i;\n        var j;\n        for(i = 0; i < this.length; i += 1){\n            if (typeof newChild === \"string\") {\n                var tempDiv = document1.createElement(\"div\");\n                tempDiv.innerHTML = newChild;\n                for(j = tempDiv.childNodes.length - 1; j >= 0; j -= 1)this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n            } else if (newChild instanceof Dom7) for(j = 0; j < newChild.length; j += 1)this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n            else this[i].insertBefore(newChild, this[i].childNodes[0]);\n        }\n        return this;\n    }\n    function next(selector) {\n        if (this.length > 0) {\n            if (selector) {\n                if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return $([\n                    this[0].nextElementSibling\n                ]);\n                return $([]);\n            }\n            if (this[0].nextElementSibling) return $([\n                this[0].nextElementSibling\n            ]);\n            return $([]);\n        }\n        return $([]);\n    }\n    function nextAll(selector) {\n        var nextEls = [];\n        var el = this[0];\n        if (!el) return $([]);\n        while(el.nextElementSibling){\n            var _next = el.nextElementSibling; // eslint-disable-line\n            if (selector) {\n                if ($(_next).is(selector)) nextEls.push(_next);\n            } else nextEls.push(_next);\n            el = _next;\n        }\n        return $(nextEls);\n    }\n    function prev(selector) {\n        if (this.length > 0) {\n            var el = this[0];\n            if (selector) {\n                if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) return $([\n                    el.previousElementSibling\n                ]);\n                return $([]);\n            }\n            if (el.previousElementSibling) return $([\n                el.previousElementSibling\n            ]);\n            return $([]);\n        }\n        return $([]);\n    }\n    function prevAll(selector) {\n        var prevEls = [];\n        var el = this[0];\n        if (!el) return $([]);\n        while(el.previousElementSibling){\n            var _prev = el.previousElementSibling; // eslint-disable-line\n            if (selector) {\n                if ($(_prev).is(selector)) prevEls.push(_prev);\n            } else prevEls.push(_prev);\n            el = _prev;\n        }\n        return $(prevEls);\n    }\n    function parent(selector) {\n        var parents = []; // eslint-disable-line\n        for(var i = 0; i < this.length; i += 1)if (this[i].parentNode !== null) {\n            if (selector) {\n                if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n            } else parents.push(this[i].parentNode);\n        }\n        return $(parents);\n    }\n    function parents(selector) {\n        var parents = []; // eslint-disable-line\n        for(var i = 0; i < this.length; i += 1){\n            var _parent = this[i].parentNode; // eslint-disable-line\n            while(_parent){\n                if (selector) {\n                    if ($(_parent).is(selector)) parents.push(_parent);\n                } else parents.push(_parent);\n                _parent = _parent.parentNode;\n            }\n        }\n        return $(parents);\n    }\n    function closest(selector) {\n        var closest = this; // eslint-disable-line\n        if (typeof selector === \"undefined\") return $([]);\n        if (!closest.is(selector)) closest = closest.parents(selector).eq(0);\n        return closest;\n    }\n    function find(selector) {\n        var foundElements = [];\n        for(var i = 0; i < this.length; i += 1){\n            var found = this[i].querySelectorAll(selector);\n            for(var j = 0; j < found.length; j += 1)foundElements.push(found[j]);\n        }\n        return $(foundElements);\n    }\n    function children(selector) {\n        var children = []; // eslint-disable-line\n        for(var i = 0; i < this.length; i += 1){\n            var childNodes = this[i].children;\n            for(var j = 0; j < childNodes.length; j += 1)if (!selector || $(childNodes[j]).is(selector)) children.push(childNodes[j]);\n        }\n        return $(children);\n    }\n    function remove() {\n        for(var i = 0; i < this.length; i += 1)if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n        return this;\n    }\n    var Methods = {\n        addClass: addClass,\n        removeClass: removeClass,\n        hasClass: hasClass,\n        toggleClass: toggleClass,\n        attr: attr,\n        removeAttr: removeAttr,\n        transform: transform,\n        transition: transition$1,\n        on: on,\n        off: off,\n        trigger: trigger,\n        transitionEnd: transitionEnd$1,\n        outerWidth: outerWidth,\n        outerHeight: outerHeight,\n        styles: styles,\n        offset: offset,\n        css: css,\n        each: each,\n        html: html,\n        text: text,\n        is: is,\n        index: index,\n        eq: eq,\n        append: append,\n        prepend: prepend,\n        next: next,\n        nextAll: nextAll,\n        prev: prev,\n        prevAll: prevAll,\n        parent: parent,\n        parents: parents,\n        closest: closest,\n        find: find,\n        children: children,\n        filter: filter,\n        remove: remove\n    };\n    Object.keys(Methods).forEach(function(methodName) {\n        Object.defineProperty($.fn, methodName, {\n            value: Methods[methodName],\n            writable: true\n        });\n    });\n    function deleteProps(obj) {\n        var object = obj;\n        Object.keys(object).forEach(function(key) {\n            try {\n                object[key] = null;\n            } catch (e) {}\n            try {\n                delete object[key];\n            } catch (e) {}\n        });\n    }\n    function nextTick(callback, delay) {\n        if (delay === void 0) delay = 0;\n        return setTimeout(callback, delay);\n    }\n    function now() {\n        return Date.now();\n    }\n    function getComputedStyle$1(el) {\n        var window1 = getWindow();\n        var style;\n        if (window1.getComputedStyle) style = window1.getComputedStyle(el, null);\n        if (!style && el.currentStyle) style = el.currentStyle;\n        if (!style) style = el.style;\n        return style;\n    }\n    function getTranslate(el, axis) {\n        if (axis === void 0) axis = \"x\";\n        var window1 = getWindow();\n        var matrix;\n        var curTransform;\n        var transformMatrix;\n        var curStyle = getComputedStyle$1(el);\n        if (window1.WebKitCSSMatrix) {\n            curTransform = curStyle.transform || curStyle.webkitTransform;\n            if (curTransform.split(\",\").length > 6) curTransform = curTransform.split(\", \").map(function(a) {\n                return a.replace(\",\", \".\");\n            }).join(\", \");\n             // Some old versions of Webkit choke when 'none' is passed; pass\n            // empty string instead in this case\n            transformMatrix = new window1.WebKitCSSMatrix(curTransform === \"none\" ? \"\" : curTransform);\n        } else {\n            transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue(\"transform\").replace(\"translate(\", \"matrix(1, 0, 0, 1,\");\n            matrix = transformMatrix.toString().split(\",\");\n        }\n        if (axis === \"x\") {\n            // Latest Chrome and webkits Fix\n            if (window1.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n            else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n            else curTransform = parseFloat(matrix[4]);\n        }\n        if (axis === \"y\") {\n            // Latest Chrome and webkits Fix\n            if (window1.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n            else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n            else curTransform = parseFloat(matrix[5]);\n        }\n        return curTransform || 0;\n    }\n    function isObject(o) {\n        return typeof o === \"object\" && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === \"Object\";\n    }\n    function isNode(node) {\n        // eslint-disable-next-line\n        if (typeof window !== \"undefined\" && typeof window.HTMLElement !== \"undefined\") return node instanceof HTMLElement;\n        return node && (node.nodeType === 1 || node.nodeType === 11);\n    }\n    function extend() {\n        var to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n        var noExtend = [\n            \"__proto__\",\n            \"constructor\",\n            \"prototype\"\n        ];\n        for(var i = 1; i < arguments.length; i += 1){\n            var nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n            if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n                var keysArray = Object.keys(Object(nextSource)).filter(function(key) {\n                    return noExtend.indexOf(key) < 0;\n                });\n                for(var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1){\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                    if (desc !== undefined && desc.enumerable) {\n                        if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n                            if (nextSource[nextKey].__swiper__) to[nextKey] = nextSource[nextKey];\n                            else extend(to[nextKey], nextSource[nextKey]);\n                        } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n                            to[nextKey] = {};\n                            if (nextSource[nextKey].__swiper__) to[nextKey] = nextSource[nextKey];\n                            else extend(to[nextKey], nextSource[nextKey]);\n                        } else to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n        }\n        return to;\n    }\n    function bindModuleMethods(instance, obj) {\n        Object.keys(obj).forEach(function(key) {\n            if (isObject(obj[key])) Object.keys(obj[key]).forEach(function(subKey) {\n                if (typeof obj[key][subKey] === \"function\") obj[key][subKey] = obj[key][subKey].bind(instance);\n            });\n            instance[key] = obj[key];\n        });\n    }\n    function classesToSelector(classes) {\n        if (classes === void 0) classes = \"\";\n        return \".\" + classes.trim().replace(/([\\.:!\\/])/g, \"\\\\$1\") // eslint-disable-line\n        .replace(/ /g, \".\");\n    }\n    function createElementIfNotDefined($container, params, createElements, checkProps) {\n        var document1 = getDocument();\n        if (createElements) Object.keys(checkProps).forEach(function(key) {\n            if (!params[key] && params.auto === true) {\n                var element = document1.createElement(\"div\");\n                element.className = checkProps[key];\n                $container.append(element);\n                params[key] = element;\n            }\n        });\n        return params;\n    }\n    var support;\n    function calcSupport() {\n        var window1 = getWindow();\n        var document1 = getDocument();\n        return {\n            touch: !!(\"ontouchstart\" in window1 || window1.DocumentTouch && document1 instanceof window1.DocumentTouch),\n            pointerEvents: !!window1.PointerEvent && \"maxTouchPoints\" in window1.navigator && window1.navigator.maxTouchPoints >= 0,\n            observer: function checkObserver() {\n                return \"MutationObserver\" in window1 || \"WebkitMutationObserver\" in window1;\n            }(),\n            passiveListener: function checkPassiveListener() {\n                var supportsPassive = false;\n                try {\n                    var opts = Object.defineProperty({}, \"passive\", {\n                        // eslint-disable-next-line\n                        get: function get() {\n                            supportsPassive = true;\n                        }\n                    });\n                    window1.addEventListener(\"testPassiveListener\", null, opts);\n                } catch (e) {}\n                return supportsPassive;\n            }(),\n            gestures: function checkGestures() {\n                return \"ongesturestart\" in window1;\n            }()\n        };\n    }\n    function getSupport() {\n        if (!support) support = calcSupport();\n        return support;\n    }\n    var device;\n    function calcDevice(_temp) {\n        var _ref = _temp === void 0 ? {} : _temp, userAgent = _ref.userAgent;\n        var support = getSupport();\n        var window1 = getWindow();\n        var platform = window1.navigator.platform;\n        var ua = userAgent || window1.navigator.userAgent;\n        var device = {\n            ios: false,\n            android: false\n        };\n        var screenWidth = window1.screen.width;\n        var screenHeight = window1.screen.height;\n        var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n        var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n        var windows = platform === \"Win32\";\n        var macos = platform === \"MacIntel\"; // iPadOs 13 fix\n        var iPadScreens = [\n            \"1024x1366\",\n            \"1366x1024\",\n            \"834x1194\",\n            \"1194x834\",\n            \"834x1112\",\n            \"1112x834\",\n            \"768x1024\",\n            \"1024x768\",\n            \"820x1180\",\n            \"1180x820\",\n            \"810x1080\",\n            \"1080x810\"\n        ];\n        if (!ipad && macos && support.touch && iPadScreens.indexOf(screenWidth + \"x\" + screenHeight) >= 0) {\n            ipad = ua.match(/(Version)\\/([\\d.]+)/);\n            if (!ipad) ipad = [\n                0,\n                1,\n                \"13_0_0\"\n            ];\n            macos = false;\n        } // Android\n        if (android && !windows) {\n            device.os = \"android\";\n            device.android = true;\n        }\n        if (ipad || iphone || ipod) {\n            device.os = \"ios\";\n            device.ios = true;\n        } // Export object\n        return device;\n    }\n    function getDevice(overrides) {\n        if (overrides === void 0) overrides = {};\n        if (!device) device = calcDevice(overrides);\n        return device;\n    }\n    var browser;\n    function calcBrowser() {\n        var window1 = getWindow();\n        function isSafari() {\n            var ua = window1.navigator.userAgent.toLowerCase();\n            return ua.indexOf(\"safari\") >= 0 && ua.indexOf(\"chrome\") < 0 && ua.indexOf(\"android\") < 0;\n        }\n        return {\n            isEdge: !!window1.navigator.userAgent.match(/Edge/g),\n            isSafari: isSafari(),\n            isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window1.navigator.userAgent)\n        };\n    }\n    function getBrowser() {\n        if (!browser) browser = calcBrowser();\n        return browser;\n    }\n    var supportsResizeObserver = function supportsResizeObserver() {\n        var window1 = getWindow();\n        return typeof window1.ResizeObserver !== \"undefined\";\n    };\n    var Resize = {\n        name: \"resize\",\n        create: function create() {\n            var swiper = this;\n            extend(swiper, {\n                resize: {\n                    observer: null,\n                    createObserver: function createObserver() {\n                        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n                        swiper.resize.observer = new ResizeObserver(function(entries) {\n                            var width = swiper.width, height = swiper.height;\n                            var newWidth = width;\n                            var newHeight = height;\n                            entries.forEach(function(_ref) {\n                                var contentBoxSize = _ref.contentBoxSize, contentRect = _ref.contentRect, target = _ref.target;\n                                if (target && target !== swiper.el) return;\n                                newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n                                newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n                            });\n                            if (newWidth !== width || newHeight !== height) swiper.resize.resizeHandler();\n                        });\n                        swiper.resize.observer.observe(swiper.el);\n                    },\n                    removeObserver: function removeObserver() {\n                        if (swiper.resize.observer && swiper.resize.observer.unobserve && swiper.el) {\n                            swiper.resize.observer.unobserve(swiper.el);\n                            swiper.resize.observer = null;\n                        }\n                    },\n                    resizeHandler: function resizeHandler() {\n                        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n                        swiper.emit(\"beforeResize\");\n                        swiper.emit(\"resize\");\n                    },\n                    orientationChangeHandler: function orientationChangeHandler() {\n                        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n                        swiper.emit(\"orientationchange\");\n                    }\n                }\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                var window1 = getWindow();\n                if (swiper.params.resizeObserver && supportsResizeObserver()) {\n                    swiper.resize.createObserver();\n                    return;\n                } // Emit resize\n                window1.addEventListener(\"resize\", swiper.resize.resizeHandler); // Emit orientationchange\n                window1.addEventListener(\"orientationchange\", swiper.resize.orientationChangeHandler);\n            },\n            destroy: function destroy(swiper) {\n                var window1 = getWindow();\n                swiper.resize.removeObserver();\n                window1.removeEventListener(\"resize\", swiper.resize.resizeHandler);\n                window1.removeEventListener(\"orientationchange\", swiper.resize.orientationChangeHandler);\n            }\n        }\n    };\n    var Observer = {\n        attach: function attach(target, options) {\n            if (options === void 0) options = {};\n            var window1 = getWindow();\n            var swiper = this;\n            var ObserverFunc = window1.MutationObserver || window1.WebkitMutationObserver;\n            var observer = new ObserverFunc(function(mutations) {\n                // The observerUpdate event should only be triggered\n                // once despite the number of mutations.  Additional\n                // triggers are redundant and are very costly\n                if (mutations.length === 1) {\n                    swiper.emit(\"observerUpdate\", mutations[0]);\n                    return;\n                }\n                var observerUpdate = function observerUpdate() {\n                    swiper.emit(\"observerUpdate\", mutations[0]);\n                };\n                if (window1.requestAnimationFrame) window1.requestAnimationFrame(observerUpdate);\n                else window1.setTimeout(observerUpdate, 0);\n            });\n            observer.observe(target, {\n                attributes: typeof options.attributes === \"undefined\" ? true : options.attributes,\n                childList: typeof options.childList === \"undefined\" ? true : options.childList,\n                characterData: typeof options.characterData === \"undefined\" ? true : options.characterData\n            });\n            swiper.observer.observers.push(observer);\n        },\n        init: function init() {\n            var swiper = this;\n            if (!swiper.support.observer || !swiper.params.observer) return;\n            if (swiper.params.observeParents) {\n                var containerParents = swiper.$el.parents();\n                for(var i = 0; i < containerParents.length; i += 1)swiper.observer.attach(containerParents[i]);\n            } // Observe container\n            swiper.observer.attach(swiper.$el[0], {\n                childList: swiper.params.observeSlideChildren\n            }); // Observe wrapper\n            swiper.observer.attach(swiper.$wrapperEl[0], {\n                attributes: false\n            });\n        },\n        destroy: function destroy() {\n            var swiper = this;\n            swiper.observer.observers.forEach(function(observer) {\n                observer.disconnect();\n            });\n            swiper.observer.observers = [];\n        }\n    };\n    var Observer$1 = {\n        name: \"observer\",\n        params: {\n            observer: false,\n            observeParents: false,\n            observeSlideChildren: false\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                observer: _extends({}, Observer, {\n                    observers: []\n                })\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                swiper.observer.init();\n            },\n            destroy: function destroy(swiper) {\n                swiper.observer.destroy();\n            }\n        }\n    };\n    var modular = {\n        useParams: function useParams(instanceParams) {\n            var instance = this;\n            if (!instance.modules) return;\n            Object.keys(instance.modules).forEach(function(moduleName) {\n                var module1 = instance.modules[moduleName]; // Extend params\n                if (module1.params) extend(instanceParams, module1.params);\n            });\n        },\n        useModules: function useModules(modulesParams) {\n            if (modulesParams === void 0) modulesParams = {};\n            var instance = this;\n            if (!instance.modules) return;\n            Object.keys(instance.modules).forEach(function(moduleName) {\n                var module1 = instance.modules[moduleName];\n                var moduleParams = modulesParams[moduleName] || {}; // Add event listeners\n                if (module1.on && instance.on) Object.keys(module1.on).forEach(function(moduleEventName) {\n                    instance.on(moduleEventName, module1.on[moduleEventName]);\n                });\n                 // Module create callback\n                if (module1.create) module1.create.bind(instance)(moduleParams);\n            });\n        }\n    };\n    /* eslint-disable no-underscore-dangle */ var eventsEmitter = {\n        on: function on(events, handler, priority) {\n            var self = this;\n            if (typeof handler !== \"function\") return self;\n            var method = priority ? \"unshift\" : \"push\";\n            events.split(\" \").forEach(function(event) {\n                if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n                self.eventsListeners[event][method](handler);\n            });\n            return self;\n        },\n        once: function once(events, handler, priority) {\n            var self = this;\n            if (typeof handler !== \"function\") return self;\n            function onceHandler() {\n                self.off(events, onceHandler);\n                if (onceHandler.__emitterProxy) delete onceHandler.__emitterProxy;\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n                handler.apply(self, args);\n            }\n            onceHandler.__emitterProxy = handler;\n            return self.on(events, onceHandler, priority);\n        },\n        onAny: function onAny(handler, priority) {\n            var self = this;\n            if (typeof handler !== \"function\") return self;\n            var method = priority ? \"unshift\" : \"push\";\n            if (self.eventsAnyListeners.indexOf(handler) < 0) self.eventsAnyListeners[method](handler);\n            return self;\n        },\n        offAny: function offAny(handler) {\n            var self = this;\n            if (!self.eventsAnyListeners) return self;\n            var index = self.eventsAnyListeners.indexOf(handler);\n            if (index >= 0) self.eventsAnyListeners.splice(index, 1);\n            return self;\n        },\n        off: function off(events, handler) {\n            var self = this;\n            if (!self.eventsListeners) return self;\n            events.split(\" \").forEach(function(event) {\n                if (typeof handler === \"undefined\") self.eventsListeners[event] = [];\n                else if (self.eventsListeners[event]) self.eventsListeners[event].forEach(function(eventHandler, index) {\n                    if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) self.eventsListeners[event].splice(index, 1);\n                });\n            });\n            return self;\n        },\n        emit: function emit() {\n            var self = this;\n            if (!self.eventsListeners) return self;\n            var events;\n            var data;\n            var context;\n            for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];\n            if (typeof args[0] === \"string\" || Array.isArray(args[0])) {\n                events = args[0];\n                data = args.slice(1, args.length);\n                context = self;\n            } else {\n                events = args[0].events;\n                data = args[0].data;\n                context = args[0].context || self;\n            }\n            data.unshift(context);\n            var eventsArray = Array.isArray(events) ? events : events.split(\" \");\n            eventsArray.forEach(function(event) {\n                if (self.eventsAnyListeners && self.eventsAnyListeners.length) self.eventsAnyListeners.forEach(function(eventHandler) {\n                    eventHandler.apply(context, [\n                        event\n                    ].concat(data));\n                });\n                if (self.eventsListeners && self.eventsListeners[event]) self.eventsListeners[event].forEach(function(eventHandler) {\n                    eventHandler.apply(context, data);\n                });\n            });\n            return self;\n        }\n    };\n    function updateSize() {\n        var swiper = this;\n        var width;\n        var height;\n        var $el = swiper.$el;\n        if (typeof swiper.params.width !== \"undefined\" && swiper.params.width !== null) width = swiper.params.width;\n        else width = $el[0].clientWidth;\n        if (typeof swiper.params.height !== \"undefined\" && swiper.params.height !== null) height = swiper.params.height;\n        else height = $el[0].clientHeight;\n        if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) return;\n         // Subtract paddings\n        width = width - parseInt($el.css(\"padding-left\") || 0, 10) - parseInt($el.css(\"padding-right\") || 0, 10);\n        height = height - parseInt($el.css(\"padding-top\") || 0, 10) - parseInt($el.css(\"padding-bottom\") || 0, 10);\n        if (Number.isNaN(width)) width = 0;\n        if (Number.isNaN(height)) height = 0;\n        extend(swiper, {\n            width: width,\n            height: height,\n            size: swiper.isHorizontal() ? width : height\n        });\n    }\n    function updateSlides() {\n        var swiper = this;\n        function getDirectionLabel(property) {\n            if (swiper.isHorizontal()) return property;\n             // prettier-ignore\n            return ({\n                \"width\": \"height\",\n                \"margin-top\": \"margin-left\",\n                \"margin-bottom \": \"margin-right\",\n                \"margin-left\": \"margin-top\",\n                \"margin-right\": \"margin-bottom\",\n                \"padding-left\": \"padding-top\",\n                \"padding-right\": \"padding-bottom\",\n                \"marginRight\": \"marginBottom\"\n            })[property];\n        }\n        function getDirectionPropertyValue(node, label) {\n            return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n        }\n        var params = swiper.params;\n        var $wrapperEl = swiper.$wrapperEl, swiperSize = swiper.size, rtl = swiper.rtlTranslate, wrongRTL = swiper.wrongRTL;\n        var isVirtual = swiper.virtual && params.virtual.enabled;\n        var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n        var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n        var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n        var snapGrid = [];\n        var slidesGrid = [];\n        var slidesSizesGrid = [];\n        var offsetBefore = params.slidesOffsetBefore;\n        if (typeof offsetBefore === \"function\") offsetBefore = params.slidesOffsetBefore.call(swiper);\n        var offsetAfter = params.slidesOffsetAfter;\n        if (typeof offsetAfter === \"function\") offsetAfter = params.slidesOffsetAfter.call(swiper);\n        var previousSnapGridLength = swiper.snapGrid.length;\n        var previousSlidesGridLength = swiper.slidesGrid.length;\n        var spaceBetween = params.spaceBetween;\n        var slidePosition = -offsetBefore;\n        var prevSlideSize = 0;\n        var index = 0;\n        if (typeof swiperSize === \"undefined\") return;\n        if (typeof spaceBetween === \"string\" && spaceBetween.indexOf(\"%\") >= 0) spaceBetween = parseFloat(spaceBetween.replace(\"%\", \"\")) / 100 * swiperSize;\n        swiper.virtualSize = -spaceBetween; // reset margins\n        if (rtl) slides.css({\n            marginLeft: \"\",\n            marginBottom: \"\",\n            marginTop: \"\"\n        });\n        else slides.css({\n            marginRight: \"\",\n            marginBottom: \"\",\n            marginTop: \"\"\n        });\n        var slidesNumberEvenToRows;\n        if (params.slidesPerColumn > 1) {\n            if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) slidesNumberEvenToRows = slidesLength;\n            else slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n            if (params.slidesPerView !== \"auto\" && params.slidesPerColumnFill === \"row\") slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n        } // Calc slides\n        var slideSize;\n        var slidesPerColumn = params.slidesPerColumn;\n        var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n        var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n        for(var i = 0; i < slidesLength; i += 1){\n            slideSize = 0;\n            var slide = slides.eq(i);\n            if (params.slidesPerColumn > 1) {\n                // Set slides order\n                var newSlideOrderIndex = void 0;\n                var column = void 0;\n                var row = void 0;\n                if (params.slidesPerColumnFill === \"row\" && params.slidesPerGroup > 1) {\n                    var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n                    var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n                    var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n                    row = Math.floor(slideIndexInGroup / columnsInGroup);\n                    column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n                    newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n                    slide.css({\n                        \"-webkit-box-ordinal-group\": newSlideOrderIndex,\n                        \"-moz-box-ordinal-group\": newSlideOrderIndex,\n                        \"-ms-flex-order\": newSlideOrderIndex,\n                        \"-webkit-order\": newSlideOrderIndex,\n                        order: newSlideOrderIndex\n                    });\n                } else if (params.slidesPerColumnFill === \"column\") {\n                    column = Math.floor(i / slidesPerColumn);\n                    row = i - column * slidesPerColumn;\n                    if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n                        row += 1;\n                        if (row >= slidesPerColumn) {\n                            row = 0;\n                            column += 1;\n                        }\n                    }\n                } else {\n                    row = Math.floor(i / slidesPerRow);\n                    column = i - row * slidesPerRow;\n                }\n                slide.css(getDirectionLabel(\"margin-top\"), row !== 0 ? params.spaceBetween && params.spaceBetween + \"px\" : \"\");\n            }\n            if (slide.css(\"display\") === \"none\") continue; // eslint-disable-line\n            if (params.slidesPerView === \"auto\") {\n                var slideStyles = getComputedStyle(slide[0]);\n                var currentTransform = slide[0].style.transform;\n                var currentWebKitTransform = slide[0].style.webkitTransform;\n                if (currentTransform) slide[0].style.transform = \"none\";\n                if (currentWebKitTransform) slide[0].style.webkitTransform = \"none\";\n                if (params.roundLengths) slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n                else {\n                    // eslint-disable-next-line\n                    var width = getDirectionPropertyValue(slideStyles, \"width\");\n                    var paddingLeft = getDirectionPropertyValue(slideStyles, \"padding-left\");\n                    var paddingRight = getDirectionPropertyValue(slideStyles, \"padding-right\");\n                    var marginLeft = getDirectionPropertyValue(slideStyles, \"margin-left\");\n                    var marginRight = getDirectionPropertyValue(slideStyles, \"margin-right\");\n                    var boxSizing = slideStyles.getPropertyValue(\"box-sizing\");\n                    if (boxSizing && boxSizing === \"border-box\") slideSize = width + marginLeft + marginRight;\n                    else {\n                        var _slide$ = slide[0], clientWidth = _slide$.clientWidth, offsetWidth = _slide$.offsetWidth;\n                        slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n                    }\n                }\n                if (currentTransform) slide[0].style.transform = currentTransform;\n                if (currentWebKitTransform) slide[0].style.webkitTransform = currentWebKitTransform;\n                if (params.roundLengths) slideSize = Math.floor(slideSize);\n            } else {\n                slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n                if (params.roundLengths) slideSize = Math.floor(slideSize);\n                if (slides[i]) slides[i].style[getDirectionLabel(\"width\")] = slideSize + \"px\";\n            }\n            if (slides[i]) slides[i].swiperSlideSize = slideSize;\n            slidesSizesGrid.push(slideSize);\n            if (params.centeredSlides) {\n                slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n                if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n                if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n                if (Math.abs(slidePosition) < 0.001) slidePosition = 0;\n                if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n                if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n                slidesGrid.push(slidePosition);\n            } else {\n                if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n                if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n                slidesGrid.push(slidePosition);\n                slidePosition = slidePosition + slideSize + spaceBetween;\n            }\n            swiper.virtualSize += slideSize + spaceBetween;\n            prevSlideSize = slideSize;\n            index += 1;\n        }\n        swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n        var newSlidesGrid;\n        if (rtl && wrongRTL && (params.effect === \"slide\" || params.effect === \"coverflow\")) $wrapperEl.css({\n            width: swiper.virtualSize + params.spaceBetween + \"px\"\n        });\n        if (params.setWrapperSize) {\n            var _$wrapperEl$css;\n            $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel(\"width\")] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css));\n        }\n        if (params.slidesPerColumn > 1) {\n            var _$wrapperEl$css2;\n            swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n            swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n            $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel(\"width\")] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css2));\n            if (params.centeredSlides) {\n                newSlidesGrid = [];\n                for(var _i = 0; _i < snapGrid.length; _i += 1){\n                    var slidesGridItem = snapGrid[_i];\n                    if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n                    if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n                }\n                snapGrid = newSlidesGrid;\n            }\n        } // Remove last grid elements depending on width\n        if (!params.centeredSlides) {\n            newSlidesGrid = [];\n            for(var _i2 = 0; _i2 < snapGrid.length; _i2 += 1){\n                var _slidesGridItem = snapGrid[_i2];\n                if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n                if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) newSlidesGrid.push(_slidesGridItem);\n            }\n            snapGrid = newSlidesGrid;\n            if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) snapGrid.push(swiper.virtualSize - swiperSize);\n        }\n        if (snapGrid.length === 0) snapGrid = [\n            0\n        ];\n        if (params.spaceBetween !== 0) {\n            var _slides$filter$css;\n            var key = swiper.isHorizontal() && rtl ? \"marginLeft\" : getDirectionLabel(\"marginRight\");\n            slides.filter(function(_, slideIndex) {\n                if (!params.cssMode) return true;\n                if (slideIndex === slides.length - 1) return false;\n                return true;\n            }).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + \"px\", _slides$filter$css));\n        }\n        if (params.centeredSlides && params.centeredSlidesBounds) {\n            var allSlidesSize = 0;\n            slidesSizesGrid.forEach(function(slideSizeValue) {\n                allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n            });\n            allSlidesSize -= params.spaceBetween;\n            var maxSnap = allSlidesSize - swiperSize;\n            snapGrid = snapGrid.map(function(snap) {\n                if (snap < 0) return -offsetBefore;\n                if (snap > maxSnap) return maxSnap + offsetAfter;\n                return snap;\n            });\n        }\n        if (params.centerInsufficientSlides) {\n            var _allSlidesSize = 0;\n            slidesSizesGrid.forEach(function(slideSizeValue) {\n                _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n            });\n            _allSlidesSize -= params.spaceBetween;\n            if (_allSlidesSize < swiperSize) {\n                var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n                snapGrid.forEach(function(snap, snapIndex) {\n                    snapGrid[snapIndex] = snap - allSlidesOffset;\n                });\n                slidesGrid.forEach(function(snap, snapIndex) {\n                    slidesGrid[snapIndex] = snap + allSlidesOffset;\n                });\n            }\n        }\n        extend(swiper, {\n            slides: slides,\n            snapGrid: snapGrid,\n            slidesGrid: slidesGrid,\n            slidesSizesGrid: slidesSizesGrid\n        });\n        if (slidesLength !== previousSlidesLength) swiper.emit(\"slidesLengthChange\");\n        if (snapGrid.length !== previousSnapGridLength) {\n            if (swiper.params.watchOverflow) swiper.checkOverflow();\n            swiper.emit(\"snapGridLengthChange\");\n        }\n        if (slidesGrid.length !== previousSlidesGridLength) swiper.emit(\"slidesGridLengthChange\");\n        if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesOffset();\n    }\n    function updateAutoHeight(speed) {\n        var swiper = this;\n        var activeSlides = [];\n        var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        var newHeight = 0;\n        var i;\n        if (typeof speed === \"number\") swiper.setTransition(speed);\n        else if (speed === true) swiper.setTransition(swiper.params.speed);\n        var getSlideByIndex = function getSlideByIndex(index) {\n            if (isVirtual) return swiper.slides.filter(function(el) {\n                return parseInt(el.getAttribute(\"data-swiper-slide-index\"), 10) === index;\n            })[0];\n            return swiper.slides.eq(index)[0];\n        }; // Find slides currently in view\n        if (swiper.params.slidesPerView !== \"auto\" && swiper.params.slidesPerView > 1) {\n            if (swiper.params.centeredSlides) swiper.visibleSlides.each(function(slide) {\n                activeSlides.push(slide);\n            });\n            else for(i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1){\n                var index = swiper.activeIndex + i;\n                if (index > swiper.slides.length && !isVirtual) break;\n                activeSlides.push(getSlideByIndex(index));\n            }\n        } else activeSlides.push(getSlideByIndex(swiper.activeIndex));\n         // Find new height from highest slide in view\n        for(i = 0; i < activeSlides.length; i += 1)if (typeof activeSlides[i] !== \"undefined\") {\n            var height = activeSlides[i].offsetHeight;\n            newHeight = height > newHeight ? height : newHeight;\n        }\n         // Update Height\n        if (newHeight) swiper.$wrapperEl.css(\"height\", newHeight + \"px\");\n    }\n    function updateSlidesOffset() {\n        var swiper = this;\n        var slides = swiper.slides;\n        for(var i = 0; i < slides.length; i += 1)slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n    function updateSlidesProgress(translate) {\n        if (translate === void 0) translate = this && this.translate || 0;\n        var swiper = this;\n        var params = swiper.params;\n        var slides = swiper.slides, rtl = swiper.rtlTranslate;\n        if (slides.length === 0) return;\n        if (typeof slides[0].swiperSlideOffset === \"undefined\") swiper.updateSlidesOffset();\n        var offsetCenter = -translate;\n        if (rtl) offsetCenter = translate; // Visible Slides\n        slides.removeClass(params.slideVisibleClass);\n        swiper.visibleSlidesIndexes = [];\n        swiper.visibleSlides = [];\n        for(var i = 0; i < slides.length; i += 1){\n            var slide = slides[i];\n            var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n            if (params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n                var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n                var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n                var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n                if (isVisible) {\n                    swiper.visibleSlides.push(slide);\n                    swiper.visibleSlidesIndexes.push(i);\n                    slides.eq(i).addClass(params.slideVisibleClass);\n                }\n            }\n            slide.progress = rtl ? -slideProgress : slideProgress;\n        }\n        swiper.visibleSlides = $(swiper.visibleSlides);\n    }\n    function updateProgress(translate) {\n        var swiper = this;\n        if (typeof translate === \"undefined\") {\n            var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n            translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n        }\n        var params = swiper.params;\n        var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n        var progress = swiper.progress, isBeginning = swiper.isBeginning, isEnd = swiper.isEnd;\n        var wasBeginning = isBeginning;\n        var wasEnd = isEnd;\n        if (translatesDiff === 0) {\n            progress = 0;\n            isBeginning = true;\n            isEnd = true;\n        } else {\n            progress = (translate - swiper.minTranslate()) / translatesDiff;\n            isBeginning = progress <= 0;\n            isEnd = progress >= 1;\n        }\n        extend(swiper, {\n            progress: progress,\n            isBeginning: isBeginning,\n            isEnd: isEnd\n        });\n        if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n        if (isBeginning && !wasBeginning) swiper.emit(\"reachBeginning toEdge\");\n        if (isEnd && !wasEnd) swiper.emit(\"reachEnd toEdge\");\n        if (wasBeginning && !isBeginning || wasEnd && !isEnd) swiper.emit(\"fromEdge\");\n        swiper.emit(\"progress\", progress);\n    }\n    function updateSlidesClasses() {\n        var swiper = this;\n        var slides = swiper.slides, params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex, realIndex = swiper.realIndex;\n        var isVirtual = swiper.virtual && params.virtual.enabled;\n        slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\n        var activeSlide;\n        if (isVirtual) activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + '[data-swiper-slide-index=\"' + activeIndex + '\"]');\n        else activeSlide = slides.eq(activeIndex);\n         // Active classes\n        activeSlide.addClass(params.slideActiveClass);\n        if (params.loop) {\n            // Duplicate to all looped slides\n            if (activeSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + realIndex + '\"]').addClass(params.slideDuplicateActiveClass);\n            else $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + '[data-swiper-slide-index=\"' + realIndex + '\"]').addClass(params.slideDuplicateActiveClass);\n        } // Next Slide\n        var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\n        if (params.loop && nextSlide.length === 0) {\n            nextSlide = slides.eq(0);\n            nextSlide.addClass(params.slideNextClass);\n        } // Prev Slide\n        var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\n        if (params.loop && prevSlide.length === 0) {\n            prevSlide = slides.eq(-1);\n            prevSlide.addClass(params.slidePrevClass);\n        }\n        if (params.loop) {\n            // Duplicate to all looped slides\n            if (nextSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + nextSlide.attr(\"data-swiper-slide-index\") + '\"]').addClass(params.slideDuplicateNextClass);\n            else $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + '[data-swiper-slide-index=\"' + nextSlide.attr(\"data-swiper-slide-index\") + '\"]').addClass(params.slideDuplicateNextClass);\n            if (prevSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + prevSlide.attr(\"data-swiper-slide-index\") + '\"]').addClass(params.slideDuplicatePrevClass);\n            else $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + '[data-swiper-slide-index=\"' + prevSlide.attr(\"data-swiper-slide-index\") + '\"]').addClass(params.slideDuplicatePrevClass);\n        }\n        swiper.emitSlidesClasses();\n    }\n    function updateActiveIndex(newActiveIndex) {\n        var swiper = this;\n        var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n        var slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid, params = swiper.params, previousIndex = swiper.activeIndex, previousRealIndex = swiper.realIndex, previousSnapIndex = swiper.snapIndex;\n        var activeIndex = newActiveIndex;\n        var snapIndex;\n        if (typeof activeIndex === \"undefined\") {\n            for(var i = 0; i < slidesGrid.length; i += 1){\n                if (typeof slidesGrid[i + 1] !== \"undefined\") {\n                    if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) activeIndex = i;\n                    else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) activeIndex = i + 1;\n                } else if (translate >= slidesGrid[i]) activeIndex = i;\n            } // Normalize slideIndex\n            if (params.normalizeSlideIndex) {\n                if (activeIndex < 0 || typeof activeIndex === \"undefined\") activeIndex = 0;\n            }\n        }\n        if (snapGrid.indexOf(translate) >= 0) snapIndex = snapGrid.indexOf(translate);\n        else {\n            var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n            snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n        }\n        if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n        if (activeIndex === previousIndex) {\n            if (snapIndex !== previousSnapIndex) {\n                swiper.snapIndex = snapIndex;\n                swiper.emit(\"snapIndexChange\");\n            }\n            return;\n        } // Get real index\n        var realIndex = parseInt(swiper.slides.eq(activeIndex).attr(\"data-swiper-slide-index\") || activeIndex, 10);\n        extend(swiper, {\n            snapIndex: snapIndex,\n            realIndex: realIndex,\n            previousIndex: previousIndex,\n            activeIndex: activeIndex\n        });\n        swiper.emit(\"activeIndexChange\");\n        swiper.emit(\"snapIndexChange\");\n        if (previousRealIndex !== realIndex) swiper.emit(\"realIndexChange\");\n        if (swiper.initialized || swiper.params.runCallbacksOnInit) swiper.emit(\"slideChange\");\n    }\n    function updateClickedSlide(e) {\n        var swiper = this;\n        var params = swiper.params;\n        var slide = $(e.target).closest(\".\" + params.slideClass)[0];\n        var slideFound = false;\n        var slideIndex;\n        if (slide) {\n            for(var i = 0; i < swiper.slides.length; i += 1)if (swiper.slides[i] === slide) {\n                slideFound = true;\n                slideIndex = i;\n                break;\n            }\n        }\n        if (slide && slideFound) {\n            swiper.clickedSlide = slide;\n            if (swiper.virtual && swiper.params.virtual.enabled) swiper.clickedIndex = parseInt($(slide).attr(\"data-swiper-slide-index\"), 10);\n            else swiper.clickedIndex = slideIndex;\n        } else {\n            swiper.clickedSlide = undefined;\n            swiper.clickedIndex = undefined;\n            return;\n        }\n        if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) swiper.slideToClickedSlide();\n    }\n    var update = {\n        updateSize: updateSize,\n        updateSlides: updateSlides,\n        updateAutoHeight: updateAutoHeight,\n        updateSlidesOffset: updateSlidesOffset,\n        updateSlidesProgress: updateSlidesProgress,\n        updateProgress: updateProgress,\n        updateSlidesClasses: updateSlidesClasses,\n        updateActiveIndex: updateActiveIndex,\n        updateClickedSlide: updateClickedSlide\n    };\n    function getSwiperTranslate(axis) {\n        if (axis === void 0) axis = this.isHorizontal() ? \"x\" : \"y\";\n        var swiper = this;\n        var params = swiper.params, rtl = swiper.rtlTranslate, translate = swiper.translate, $wrapperEl = swiper.$wrapperEl;\n        if (params.virtualTranslate) return rtl ? -translate : translate;\n        if (params.cssMode) return translate;\n        var currentTranslate = getTranslate($wrapperEl[0], axis);\n        if (rtl) currentTranslate = -currentTranslate;\n        return currentTranslate || 0;\n    }\n    function setTranslate(translate, byController) {\n        var swiper = this;\n        var rtl = swiper.rtlTranslate, params = swiper.params, $wrapperEl = swiper.$wrapperEl, wrapperEl = swiper.wrapperEl, progress = swiper.progress;\n        var x = 0;\n        var y = 0;\n        var z = 0;\n        if (swiper.isHorizontal()) x = rtl ? -translate : translate;\n        else y = translate;\n        if (params.roundLengths) {\n            x = Math.floor(x);\n            y = Math.floor(y);\n        }\n        if (params.cssMode) wrapperEl[swiper.isHorizontal() ? \"scrollLeft\" : \"scrollTop\"] = swiper.isHorizontal() ? -x : -y;\n        else if (!params.virtualTranslate) $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\n        swiper.previousTranslate = swiper.translate;\n        swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n        var newProgress;\n        var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n        if (translatesDiff === 0) newProgress = 0;\n        else newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n        if (newProgress !== progress) swiper.updateProgress(translate);\n        swiper.emit(\"setTranslate\", swiper.translate, byController);\n    }\n    function minTranslate() {\n        return -this.snapGrid[0];\n    }\n    function maxTranslate() {\n        return -this.snapGrid[this.snapGrid.length - 1];\n    }\n    function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n        if (translate === void 0) translate = 0;\n        if (speed === void 0) speed = this.params.speed;\n        if (runCallbacks === void 0) runCallbacks = true;\n        if (translateBounds === void 0) translateBounds = true;\n        var swiper = this;\n        var params = swiper.params, wrapperEl = swiper.wrapperEl;\n        if (swiper.animating && params.preventInteractionOnTransition) return false;\n        var minTranslate = swiper.minTranslate();\n        var maxTranslate = swiper.maxTranslate();\n        var newTranslate;\n        if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n        else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n        else newTranslate = translate; // Update progress\n        swiper.updateProgress(newTranslate);\n        if (params.cssMode) {\n            var isH = swiper.isHorizontal();\n            if (speed === 0) wrapperEl[isH ? \"scrollLeft\" : \"scrollTop\"] = -newTranslate;\n            else // eslint-disable-next-line\n            if (wrapperEl.scrollTo) {\n                var _wrapperEl$scrollTo;\n                wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? \"left\" : \"top\"] = -newTranslate, _wrapperEl$scrollTo.behavior = \"smooth\", _wrapperEl$scrollTo));\n            } else wrapperEl[isH ? \"scrollLeft\" : \"scrollTop\"] = -newTranslate;\n            return true;\n        }\n        if (speed === 0) {\n            swiper.setTransition(0);\n            swiper.setTranslate(newTranslate);\n            if (runCallbacks) {\n                swiper.emit(\"beforeTransitionStart\", speed, internal);\n                swiper.emit(\"transitionEnd\");\n            }\n        } else {\n            swiper.setTransition(speed);\n            swiper.setTranslate(newTranslate);\n            if (runCallbacks) {\n                swiper.emit(\"beforeTransitionStart\", speed, internal);\n                swiper.emit(\"transitionStart\");\n            }\n            if (!swiper.animating) {\n                swiper.animating = true;\n                if (!swiper.onTranslateToWrapperTransitionEnd) swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n                    if (!swiper || swiper.destroyed) return;\n                    if (e.target !== this) return;\n                    swiper.$wrapperEl[0].removeEventListener(\"transitionend\", swiper.onTranslateToWrapperTransitionEnd);\n                    swiper.$wrapperEl[0].removeEventListener(\"webkitTransitionEnd\", swiper.onTranslateToWrapperTransitionEnd);\n                    swiper.onTranslateToWrapperTransitionEnd = null;\n                    delete swiper.onTranslateToWrapperTransitionEnd;\n                    if (runCallbacks) swiper.emit(\"transitionEnd\");\n                };\n                swiper.$wrapperEl[0].addEventListener(\"transitionend\", swiper.onTranslateToWrapperTransitionEnd);\n                swiper.$wrapperEl[0].addEventListener(\"webkitTransitionEnd\", swiper.onTranslateToWrapperTransitionEnd);\n            }\n        }\n        return true;\n    }\n    var translate = {\n        getTranslate: getSwiperTranslate,\n        setTranslate: setTranslate,\n        minTranslate: minTranslate,\n        maxTranslate: maxTranslate,\n        translateTo: translateTo\n    };\n    function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.params.cssMode) swiper.$wrapperEl.transition(duration);\n        swiper.emit(\"setTransition\", duration, byController);\n    }\n    function transitionStart(runCallbacks, direction) {\n        if (runCallbacks === void 0) runCallbacks = true;\n        var swiper = this;\n        var activeIndex = swiper.activeIndex, params = swiper.params, previousIndex = swiper.previousIndex;\n        if (params.cssMode) return;\n        if (params.autoHeight) swiper.updateAutoHeight();\n        var dir = direction;\n        if (!dir) {\n            if (activeIndex > previousIndex) dir = \"next\";\n            else if (activeIndex < previousIndex) dir = \"prev\";\n            else dir = \"reset\";\n        }\n        swiper.emit(\"transitionStart\");\n        if (runCallbacks && activeIndex !== previousIndex) {\n            if (dir === \"reset\") {\n                swiper.emit(\"slideResetTransitionStart\");\n                return;\n            }\n            swiper.emit(\"slideChangeTransitionStart\");\n            if (dir === \"next\") swiper.emit(\"slideNextTransitionStart\");\n            else swiper.emit(\"slidePrevTransitionStart\");\n        }\n    }\n    function transitionEnd(runCallbacks, direction) {\n        if (runCallbacks === void 0) runCallbacks = true;\n        var swiper = this;\n        var activeIndex = swiper.activeIndex, previousIndex = swiper.previousIndex, params = swiper.params;\n        swiper.animating = false;\n        if (params.cssMode) return;\n        swiper.setTransition(0);\n        var dir = direction;\n        if (!dir) {\n            if (activeIndex > previousIndex) dir = \"next\";\n            else if (activeIndex < previousIndex) dir = \"prev\";\n            else dir = \"reset\";\n        }\n        swiper.emit(\"transitionEnd\");\n        if (runCallbacks && activeIndex !== previousIndex) {\n            if (dir === \"reset\") {\n                swiper.emit(\"slideResetTransitionEnd\");\n                return;\n            }\n            swiper.emit(\"slideChangeTransitionEnd\");\n            if (dir === \"next\") swiper.emit(\"slideNextTransitionEnd\");\n            else swiper.emit(\"slidePrevTransitionEnd\");\n        }\n    }\n    var transition = {\n        setTransition: setTransition,\n        transitionStart: transitionStart,\n        transitionEnd: transitionEnd\n    };\n    function slideTo(index, speed, runCallbacks, internal, initial) {\n        if (index === void 0) index = 0;\n        if (speed === void 0) speed = this.params.speed;\n        if (runCallbacks === void 0) runCallbacks = true;\n        if (typeof index !== \"number\" && typeof index !== \"string\") throw new Error(\"The 'index' argument cannot have type other than 'number' or 'string'. [\" + typeof index + \"] given.\");\n        if (typeof index === \"string\") {\n            /**\n       * The `index` argument converted from `string` to `number`.\n       * @type {number}\n       */ var indexAsNumber = parseInt(index, 10);\n            /**\n       * Determines whether the `index` argument is a valid `number`\n       * after being converted from the `string` type.\n       * @type {boolean}\n       */ var isValidNumber = isFinite(indexAsNumber);\n            if (!isValidNumber) throw new Error(\"The passed-in 'index' (string) couldn't be converted to 'number'. [\" + index + \"] given.\");\n             // Knowing that the converted `index` is a valid number,\n            // we can update the original argument's value.\n            index = indexAsNumber;\n        }\n        var swiper = this;\n        var slideIndex = index;\n        if (slideIndex < 0) slideIndex = 0;\n        var params = swiper.params, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, previousIndex = swiper.previousIndex, activeIndex = swiper.activeIndex, rtl = swiper.rtlTranslate, wrapperEl = swiper.wrapperEl, enabled = swiper.enabled;\n        if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) return false;\n        var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n        var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n        if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n        if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) swiper.emit(\"beforeSlideChangeStart\");\n        var translate = -snapGrid[snapIndex]; // Update progress\n        swiper.updateProgress(translate); // Normalize slideIndex\n        if (params.normalizeSlideIndex) for(var i = 0; i < slidesGrid.length; i += 1){\n            var normalizedTranslate = -Math.floor(translate * 100);\n            var normalizedGird = Math.floor(slidesGrid[i] * 100);\n            var normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n            if (typeof slidesGrid[i + 1] !== \"undefined\") {\n                if (normalizedTranslate >= normalizedGird && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGird) / 2) slideIndex = i;\n                else if (normalizedTranslate >= normalizedGird && normalizedTranslate < normalizedGridNext) slideIndex = i + 1;\n            } else if (normalizedTranslate >= normalizedGird) slideIndex = i;\n        }\n         // Directions locks\n        if (swiper.initialized && slideIndex !== activeIndex) {\n            if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) return false;\n            if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n                if ((activeIndex || 0) !== slideIndex) return false;\n            }\n        }\n        var direction;\n        if (slideIndex > activeIndex) direction = \"next\";\n        else if (slideIndex < activeIndex) direction = \"prev\";\n        else direction = \"reset\"; // Update Index\n        if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n            swiper.updateActiveIndex(slideIndex); // Update Height\n            if (params.autoHeight) swiper.updateAutoHeight();\n            swiper.updateSlidesClasses();\n            if (params.effect !== \"slide\") swiper.setTranslate(translate);\n            if (direction !== \"reset\") {\n                swiper.transitionStart(runCallbacks, direction);\n                swiper.transitionEnd(runCallbacks, direction);\n            }\n            return false;\n        }\n        if (params.cssMode) {\n            var isH = swiper.isHorizontal();\n            var t = -translate;\n            if (rtl) t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\n            if (speed === 0) wrapperEl[isH ? \"scrollLeft\" : \"scrollTop\"] = t;\n            else // eslint-disable-next-line\n            if (wrapperEl.scrollTo) {\n                var _wrapperEl$scrollTo;\n                wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? \"left\" : \"top\"] = t, _wrapperEl$scrollTo.behavior = \"smooth\", _wrapperEl$scrollTo));\n            } else wrapperEl[isH ? \"scrollLeft\" : \"scrollTop\"] = t;\n            return true;\n        }\n        if (speed === 0) {\n            swiper.setTransition(0);\n            swiper.setTranslate(translate);\n            swiper.updateActiveIndex(slideIndex);\n            swiper.updateSlidesClasses();\n            swiper.emit(\"beforeTransitionStart\", speed, internal);\n            swiper.transitionStart(runCallbacks, direction);\n            swiper.transitionEnd(runCallbacks, direction);\n        } else {\n            swiper.setTransition(speed);\n            swiper.setTranslate(translate);\n            swiper.updateActiveIndex(slideIndex);\n            swiper.updateSlidesClasses();\n            swiper.emit(\"beforeTransitionStart\", speed, internal);\n            swiper.transitionStart(runCallbacks, direction);\n            if (!swiper.animating) {\n                swiper.animating = true;\n                if (!swiper.onSlideToWrapperTransitionEnd) swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n                    if (!swiper || swiper.destroyed) return;\n                    if (e.target !== this) return;\n                    swiper.$wrapperEl[0].removeEventListener(\"transitionend\", swiper.onSlideToWrapperTransitionEnd);\n                    swiper.$wrapperEl[0].removeEventListener(\"webkitTransitionEnd\", swiper.onSlideToWrapperTransitionEnd);\n                    swiper.onSlideToWrapperTransitionEnd = null;\n                    delete swiper.onSlideToWrapperTransitionEnd;\n                    swiper.transitionEnd(runCallbacks, direction);\n                };\n                swiper.$wrapperEl[0].addEventListener(\"transitionend\", swiper.onSlideToWrapperTransitionEnd);\n                swiper.$wrapperEl[0].addEventListener(\"webkitTransitionEnd\", swiper.onSlideToWrapperTransitionEnd);\n            }\n        }\n        return true;\n    }\n    function slideToLoop(index, speed, runCallbacks, internal) {\n        if (index === void 0) index = 0;\n        if (speed === void 0) speed = this.params.speed;\n        if (runCallbacks === void 0) runCallbacks = true;\n        var swiper = this;\n        var newIndex = index;\n        if (swiper.params.loop) newIndex += swiper.loopedSlides;\n        return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n    }\n    /* eslint no-unused-vars: \"off\" */ function slideNext(speed, runCallbacks, internal) {\n        if (speed === void 0) speed = this.params.speed;\n        if (runCallbacks === void 0) runCallbacks = true;\n        var swiper = this;\n        var params = swiper.params, animating = swiper.animating, enabled = swiper.enabled;\n        if (!enabled) return swiper;\n        var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n        if (params.loop) {\n            if (animating && params.loopPreventsSlide) return false;\n            swiper.loopFix(); // eslint-disable-next-line\n            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        }\n        return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n    }\n    /* eslint no-unused-vars: \"off\" */ function slidePrev(speed, runCallbacks, internal) {\n        if (speed === void 0) speed = this.params.speed;\n        if (runCallbacks === void 0) runCallbacks = true;\n        var swiper = this;\n        var params = swiper.params, animating = swiper.animating, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, rtlTranslate = swiper.rtlTranslate, enabled = swiper.enabled;\n        if (!enabled) return swiper;\n        if (params.loop) {\n            if (animating && params.loopPreventsSlide) return false;\n            swiper.loopFix(); // eslint-disable-next-line\n            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        }\n        var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n        function normalize(val) {\n            if (val < 0) return -Math.floor(Math.abs(val));\n            return Math.floor(val);\n        }\n        var normalizedTranslate = normalize(translate);\n        var normalizedSnapGrid = snapGrid.map(function(val) {\n            return normalize(val);\n        });\n        var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n        if (typeof prevSnap === \"undefined\" && params.cssMode) snapGrid.forEach(function(snap) {\n            if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n        });\n        var prevIndex;\n        if (typeof prevSnap !== \"undefined\") {\n            prevIndex = slidesGrid.indexOf(prevSnap);\n            if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n        }\n        return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    }\n    /* eslint no-unused-vars: \"off\" */ function slideReset(speed, runCallbacks, internal) {\n        if (speed === void 0) speed = this.params.speed;\n        if (runCallbacks === void 0) runCallbacks = true;\n        var swiper = this;\n        return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n    }\n    /* eslint no-unused-vars: \"off\" */ function slideToClosest(speed, runCallbacks, internal, threshold) {\n        if (speed === void 0) speed = this.params.speed;\n        if (runCallbacks === void 0) runCallbacks = true;\n        if (threshold === void 0) threshold = 0.5;\n        var swiper = this;\n        var index = swiper.activeIndex;\n        var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n        var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n        var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n        if (translate >= swiper.snapGrid[snapIndex]) {\n            // The current translate is on or after the current snap index, so the choice\n            // is between the current index and the one after it.\n            var currentSnap = swiper.snapGrid[snapIndex];\n            var nextSnap = swiper.snapGrid[snapIndex + 1];\n            if (translate - currentSnap > (nextSnap - currentSnap) * threshold) index += swiper.params.slidesPerGroup;\n        } else {\n            // The current translate is before the current snap index, so the choice\n            // is between the current index and the one before it.\n            var prevSnap = swiper.snapGrid[snapIndex - 1];\n            var _currentSnap = swiper.snapGrid[snapIndex];\n            if (translate - prevSnap <= (_currentSnap - prevSnap) * threshold) index -= swiper.params.slidesPerGroup;\n        }\n        index = Math.max(index, 0);\n        index = Math.min(index, swiper.slidesGrid.length - 1);\n        return swiper.slideTo(index, speed, runCallbacks, internal);\n    }\n    function slideToClickedSlide() {\n        var swiper = this;\n        var params = swiper.params, $wrapperEl = swiper.$wrapperEl;\n        var slidesPerView = params.slidesPerView === \"auto\" ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n        var slideToIndex = swiper.clickedIndex;\n        var realIndex;\n        if (params.loop) {\n            if (swiper.animating) return;\n            realIndex = parseInt($(swiper.clickedSlide).attr(\"data-swiper-slide-index\"), 10);\n            if (params.centeredSlides) {\n                if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n                    swiper.loopFix();\n                    slideToIndex = $wrapperEl.children(\".\" + params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.' + params.slideDuplicateClass + \")\").eq(0).index();\n                    nextTick(function() {\n                        swiper.slideTo(slideToIndex);\n                    });\n                } else swiper.slideTo(slideToIndex);\n            } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n                swiper.loopFix();\n                slideToIndex = $wrapperEl.children(\".\" + params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.' + params.slideDuplicateClass + \")\").eq(0).index();\n                nextTick(function() {\n                    swiper.slideTo(slideToIndex);\n                });\n            } else swiper.slideTo(slideToIndex);\n        } else swiper.slideTo(slideToIndex);\n    }\n    var slide = {\n        slideTo: slideTo,\n        slideToLoop: slideToLoop,\n        slideNext: slideNext,\n        slidePrev: slidePrev,\n        slideReset: slideReset,\n        slideToClosest: slideToClosest,\n        slideToClickedSlide: slideToClickedSlide\n    };\n    function loopCreate() {\n        var swiper = this;\n        var document1 = getDocument();\n        var params = swiper.params, $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\n        var slides = $wrapperEl.children(\".\" + params.slideClass);\n        if (params.loopFillGroupWithBlank) {\n            var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n            if (blankSlidesNum !== params.slidesPerGroup) {\n                for(var i = 0; i < blankSlidesNum; i += 1){\n                    var blankNode = $(document1.createElement(\"div\")).addClass(params.slideClass + \" \" + params.slideBlankClass);\n                    $wrapperEl.append(blankNode);\n                }\n                slides = $wrapperEl.children(\".\" + params.slideClass);\n            }\n        }\n        if (params.slidesPerView === \"auto\" && !params.loopedSlides) params.loopedSlides = slides.length;\n        swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n        swiper.loopedSlides += params.loopAdditionalSlides;\n        if (swiper.loopedSlides > slides.length) swiper.loopedSlides = slides.length;\n        var prependSlides = [];\n        var appendSlides = [];\n        slides.each(function(el, index) {\n            var slide = $(el);\n            if (index < swiper.loopedSlides) appendSlides.push(el);\n            if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n            slide.attr(\"data-swiper-slide-index\", index);\n        });\n        for(var _i = 0; _i < appendSlides.length; _i += 1)$wrapperEl.append($(appendSlides[_i].cloneNode(true)).addClass(params.slideDuplicateClass));\n        for(var _i2 = prependSlides.length - 1; _i2 >= 0; _i2 -= 1)$wrapperEl.prepend($(prependSlides[_i2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    function loopFix() {\n        var swiper = this;\n        swiper.emit(\"beforeLoopFix\");\n        var activeIndex = swiper.activeIndex, slides = swiper.slides, loopedSlides = swiper.loopedSlides, allowSlidePrev = swiper.allowSlidePrev, allowSlideNext = swiper.allowSlideNext, snapGrid = swiper.snapGrid, rtl = swiper.rtlTranslate;\n        var newIndex;\n        swiper.allowSlidePrev = true;\n        swiper.allowSlideNext = true;\n        var snapTranslate = -snapGrid[activeIndex];\n        var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n        if (activeIndex < loopedSlides) {\n            newIndex = slides.length - loopedSlides * 3 + activeIndex;\n            newIndex += loopedSlides;\n            var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n            if (slideChanged && diff !== 0) swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        } else if (activeIndex >= slides.length - loopedSlides) {\n            // Fix For Positive Oversliding\n            newIndex = -slides.length + activeIndex + loopedSlides;\n            newIndex += loopedSlides;\n            var _slideChanged = swiper.slideTo(newIndex, 0, false, true);\n            if (_slideChanged && diff !== 0) swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n        swiper.allowSlidePrev = allowSlidePrev;\n        swiper.allowSlideNext = allowSlideNext;\n        swiper.emit(\"loopFix\");\n    }\n    function loopDestroy() {\n        var swiper = this;\n        var $wrapperEl = swiper.$wrapperEl, params = swiper.params, slides = swiper.slides;\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \",.\" + params.slideClass + \".\" + params.slideBlankClass).remove();\n        slides.removeAttr(\"data-swiper-slide-index\");\n    }\n    var loop = {\n        loopCreate: loopCreate,\n        loopFix: loopFix,\n        loopDestroy: loopDestroy\n    };\n    function setGrabCursor(moving) {\n        var swiper = this;\n        if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n        var el = swiper.el;\n        el.style.cursor = \"move\";\n        el.style.cursor = moving ? \"-webkit-grabbing\" : \"-webkit-grab\";\n        el.style.cursor = moving ? \"-moz-grabbin\" : \"-moz-grab\";\n        el.style.cursor = moving ? \"grabbing\" : \"grab\";\n    }\n    function unsetGrabCursor() {\n        var swiper = this;\n        if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n        swiper.el.style.cursor = \"\";\n    }\n    var grabCursor = {\n        setGrabCursor: setGrabCursor,\n        unsetGrabCursor: unsetGrabCursor\n    };\n    function appendSlide(slides) {\n        var swiper = this;\n        var $wrapperEl = swiper.$wrapperEl, params = swiper.params;\n        if (params.loop) swiper.loopDestroy();\n        if (typeof slides === \"object\" && \"length\" in slides) {\n            for(var i = 0; i < slides.length; i += 1)if (slides[i]) $wrapperEl.append(slides[i]);\n        } else $wrapperEl.append(slides);\n        if (params.loop) swiper.loopCreate();\n        if (!(params.observer && swiper.support.observer)) swiper.update();\n    }\n    function prependSlide(slides) {\n        var swiper = this;\n        var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;\n        if (params.loop) swiper.loopDestroy();\n        var newActiveIndex = activeIndex + 1;\n        if (typeof slides === \"object\" && \"length\" in slides) {\n            for(var i = 0; i < slides.length; i += 1)if (slides[i]) $wrapperEl.prepend(slides[i]);\n            newActiveIndex = activeIndex + slides.length;\n        } else $wrapperEl.prepend(slides);\n        if (params.loop) swiper.loopCreate();\n        if (!(params.observer && swiper.support.observer)) swiper.update();\n        swiper.slideTo(newActiveIndex, 0, false);\n    }\n    function addSlide(index, slides) {\n        var swiper = this;\n        var $wrapperEl = swiper.$wrapperEl, params = swiper.params, activeIndex = swiper.activeIndex;\n        var activeIndexBuffer = activeIndex;\n        if (params.loop) {\n            activeIndexBuffer -= swiper.loopedSlides;\n            swiper.loopDestroy();\n            swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n        }\n        var baseLength = swiper.slides.length;\n        if (index <= 0) {\n            swiper.prependSlide(slides);\n            return;\n        }\n        if (index >= baseLength) {\n            swiper.appendSlide(slides);\n            return;\n        }\n        var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n        var slidesBuffer = [];\n        for(var i = baseLength - 1; i >= index; i -= 1){\n            var currentSlide = swiper.slides.eq(i);\n            currentSlide.remove();\n            slidesBuffer.unshift(currentSlide);\n        }\n        if (typeof slides === \"object\" && \"length\" in slides) {\n            for(var _i = 0; _i < slides.length; _i += 1)if (slides[_i]) $wrapperEl.append(slides[_i]);\n            newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n        } else $wrapperEl.append(slides);\n        for(var _i2 = 0; _i2 < slidesBuffer.length; _i2 += 1)$wrapperEl.append(slidesBuffer[_i2]);\n        if (params.loop) swiper.loopCreate();\n        if (!(params.observer && swiper.support.observer)) swiper.update();\n        if (params.loop) swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n        else swiper.slideTo(newActiveIndex, 0, false);\n    }\n    function removeSlide(slidesIndexes) {\n        var swiper = this;\n        var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;\n        var activeIndexBuffer = activeIndex;\n        if (params.loop) {\n            activeIndexBuffer -= swiper.loopedSlides;\n            swiper.loopDestroy();\n            swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n        }\n        var newActiveIndex = activeIndexBuffer;\n        var indexToRemove;\n        if (typeof slidesIndexes === \"object\" && \"length\" in slidesIndexes) {\n            for(var i = 0; i < slidesIndexes.length; i += 1){\n                indexToRemove = slidesIndexes[i];\n                if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n                if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n            }\n            newActiveIndex = Math.max(newActiveIndex, 0);\n        } else {\n            indexToRemove = slidesIndexes;\n            if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n            if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n            newActiveIndex = Math.max(newActiveIndex, 0);\n        }\n        if (params.loop) swiper.loopCreate();\n        if (!(params.observer && swiper.support.observer)) swiper.update();\n        if (params.loop) swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n        else swiper.slideTo(newActiveIndex, 0, false);\n    }\n    function removeAllSlides() {\n        var swiper = this;\n        var slidesIndexes = [];\n        for(var i = 0; i < swiper.slides.length; i += 1)slidesIndexes.push(i);\n        swiper.removeSlide(slidesIndexes);\n    }\n    var manipulation = {\n        appendSlide: appendSlide,\n        prependSlide: prependSlide,\n        addSlide: addSlide,\n        removeSlide: removeSlide,\n        removeAllSlides: removeAllSlides\n    };\n    function closestElement(selector, base) {\n        if (base === void 0) base = this;\n        function __closestFrom(el) {\n            if (!el || el === getDocument() || el === getWindow()) return null;\n            if (el.assignedSlot) el = el.assignedSlot;\n            var found = el.closest(selector);\n            return found || __closestFrom(el.getRootNode().host);\n        }\n        return __closestFrom(base);\n    }\n    function onTouchStart(event) {\n        var swiper = this;\n        var document1 = getDocument();\n        var window1 = getWindow();\n        var data = swiper.touchEventsData;\n        var params = swiper.params, touches = swiper.touches, enabled = swiper.enabled;\n        if (!enabled) return;\n        if (swiper.animating && params.preventInteractionOnTransition) return;\n        var e = event;\n        if (e.originalEvent) e = e.originalEvent;\n        var $targetEl = $(e.target);\n        if (params.touchEventsTarget === \"wrapper\") {\n            if (!$targetEl.closest(swiper.wrapperEl).length) return;\n        }\n        data.isTouchEvent = e.type === \"touchstart\";\n        if (!data.isTouchEvent && \"which\" in e && e.which === 3) return;\n        if (!data.isTouchEvent && \"button\" in e && e.button > 0) return;\n        if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n        var swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== \"\";\n        if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) $targetEl = $(event.path[0]);\n        var noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass;\n        var isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n        if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, e.target) : $targetEl.closest(noSwipingSelector)[0])) {\n            swiper.allowClick = true;\n            return;\n        }\n        if (params.swipeHandler) {\n            if (!$targetEl.closest(params.swipeHandler)[0]) return;\n        }\n        touches.currentX = e.type === \"touchstart\" ? e.targetTouches[0].pageX : e.pageX;\n        touches.currentY = e.type === \"touchstart\" ? e.targetTouches[0].pageY : e.pageY;\n        var startX = touches.currentX;\n        var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n        var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n        var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n        if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window1.innerWidth - edgeSwipeThreshold)) {\n            if (edgeSwipeDetection === \"prevent\") event.preventDefault();\n            else return;\n        }\n        extend(data, {\n            isTouched: true,\n            isMoved: false,\n            allowTouchCallbacks: true,\n            isScrolling: undefined,\n            startMoving: undefined\n        });\n        touches.startX = startX;\n        touches.startY = startY;\n        data.touchStartTime = now();\n        swiper.allowClick = true;\n        swiper.updateSize();\n        swiper.swipeDirection = undefined;\n        if (params.threshold > 0) data.allowThresholdMove = false;\n        if (e.type !== \"touchstart\") {\n            var preventDefault = true;\n            if ($targetEl.is(data.focusableElements)) preventDefault = false;\n            if (document1.activeElement && $(document1.activeElement).is(data.focusableElements) && document1.activeElement !== $targetEl[0]) document1.activeElement.blur();\n            var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n            if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) e.preventDefault();\n        }\n        swiper.emit(\"touchStart\", e);\n    }\n    function onTouchMove(event) {\n        var document1 = getDocument();\n        var swiper = this;\n        var data = swiper.touchEventsData;\n        var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, enabled = swiper.enabled;\n        if (!enabled) return;\n        var e = event;\n        if (e.originalEvent) e = e.originalEvent;\n        if (!data.isTouched) {\n            if (data.startMoving && data.isScrolling) swiper.emit(\"touchMoveOpposite\", e);\n            return;\n        }\n        if (data.isTouchEvent && e.type !== \"touchmove\") return;\n        var targetTouch = e.type === \"touchmove\" && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n        var pageX = e.type === \"touchmove\" ? targetTouch.pageX : e.pageX;\n        var pageY = e.type === \"touchmove\" ? targetTouch.pageY : e.pageY;\n        if (e.preventedByNestedSwiper) {\n            touches.startX = pageX;\n            touches.startY = pageY;\n            return;\n        }\n        if (!swiper.allowTouchMove) {\n            // isMoved = true;\n            swiper.allowClick = false;\n            if (data.isTouched) {\n                extend(touches, {\n                    startX: pageX,\n                    startY: pageY,\n                    currentX: pageX,\n                    currentY: pageY\n                });\n                data.touchStartTime = now();\n            }\n            return;\n        }\n        if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n            if (swiper.isVertical()) // Vertical\n            {\n                if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n                    data.isTouched = false;\n                    data.isMoved = false;\n                    return;\n                }\n            } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) return;\n        }\n        if (data.isTouchEvent && document1.activeElement) {\n            if (e.target === document1.activeElement && $(e.target).is(data.focusableElements)) {\n                data.isMoved = true;\n                swiper.allowClick = false;\n                return;\n            }\n        }\n        if (data.allowTouchCallbacks) swiper.emit(\"touchMove\", e);\n        if (e.targetTouches && e.targetTouches.length > 1) return;\n        touches.currentX = pageX;\n        touches.currentY = pageY;\n        var diffX = touches.currentX - touches.startX;\n        var diffY = touches.currentY - touches.startY;\n        if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) return;\n        if (typeof data.isScrolling === \"undefined\") {\n            var touchAngle;\n            if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) data.isScrolling = false;\n            else // eslint-disable-next-line\n            if (diffX * diffX + diffY * diffY >= 25) {\n                touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n                data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n            }\n        }\n        if (data.isScrolling) swiper.emit(\"touchMoveOpposite\", e);\n        if (typeof data.startMoving === \"undefined\") {\n            if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) data.startMoving = true;\n        }\n        if (data.isScrolling) {\n            data.isTouched = false;\n            return;\n        }\n        if (!data.startMoving) return;\n        swiper.allowClick = false;\n        if (!params.cssMode && e.cancelable) e.preventDefault();\n        if (params.touchMoveStopPropagation && !params.nested) e.stopPropagation();\n        if (!data.isMoved) {\n            if (params.loop) swiper.loopFix();\n            data.startTranslate = swiper.getTranslate();\n            swiper.setTransition(0);\n            if (swiper.animating) swiper.$wrapperEl.trigger(\"webkitTransitionEnd transitionend\");\n            data.allowMomentumBounce = false; // Grab Cursor\n            if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) swiper.setGrabCursor(true);\n            swiper.emit(\"sliderFirstMove\", e);\n        }\n        swiper.emit(\"sliderMove\", e);\n        data.isMoved = true;\n        var diff = swiper.isHorizontal() ? diffX : diffY;\n        touches.diff = diff;\n        diff *= params.touchRatio;\n        if (rtl) diff = -diff;\n        swiper.swipeDirection = diff > 0 ? \"prev\" : \"next\";\n        data.currentTranslate = diff + data.startTranslate;\n        var disableParentSwiper = true;\n        var resistanceRatio = params.resistanceRatio;\n        if (params.touchReleaseOnEdges) resistanceRatio = 0;\n        if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n            disableParentSwiper = false;\n            if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);\n        } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n            disableParentSwiper = false;\n            if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);\n        }\n        if (disableParentSwiper) e.preventedByNestedSwiper = true;\n         // Directions locks\n        if (!swiper.allowSlideNext && swiper.swipeDirection === \"next\" && data.currentTranslate < data.startTranslate) data.currentTranslate = data.startTranslate;\n        if (!swiper.allowSlidePrev && swiper.swipeDirection === \"prev\" && data.currentTranslate > data.startTranslate) data.currentTranslate = data.startTranslate;\n        if (!swiper.allowSlidePrev && !swiper.allowSlideNext) data.currentTranslate = data.startTranslate;\n         // Threshold\n        if (params.threshold > 0) {\n            if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n                if (!data.allowThresholdMove) {\n                    data.allowThresholdMove = true;\n                    touches.startX = touches.currentX;\n                    touches.startY = touches.currentY;\n                    data.currentTranslate = data.startTranslate;\n                    touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n                    return;\n                }\n            } else {\n                data.currentTranslate = data.startTranslate;\n                return;\n            }\n        }\n        if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n        if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        }\n        if (params.freeMode) {\n            // Velocity\n            if (data.velocities.length === 0) data.velocities.push({\n                position: touches[swiper.isHorizontal() ? \"startX\" : \"startY\"],\n                time: data.touchStartTime\n            });\n            data.velocities.push({\n                position: touches[swiper.isHorizontal() ? \"currentX\" : \"currentY\"],\n                time: now()\n            });\n        } // Update progress\n        swiper.updateProgress(data.currentTranslate); // Update translate\n        swiper.setTranslate(data.currentTranslate);\n    }\n    function onTouchEnd(event) {\n        var swiper = this;\n        var data = swiper.touchEventsData;\n        var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, $wrapperEl = swiper.$wrapperEl, slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid, enabled = swiper.enabled;\n        if (!enabled) return;\n        var e = event;\n        if (e.originalEvent) e = e.originalEvent;\n        if (data.allowTouchCallbacks) swiper.emit(\"touchEnd\", e);\n        data.allowTouchCallbacks = false;\n        if (!data.isTouched) {\n            if (data.isMoved && params.grabCursor) swiper.setGrabCursor(false);\n            data.isMoved = false;\n            data.startMoving = false;\n            return;\n        } // Return Grab Cursor\n        if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) swiper.setGrabCursor(false);\n         // Time diff\n        var touchEndTime = now();\n        var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n        if (swiper.allowClick) {\n            swiper.updateClickedSlide(e);\n            swiper.emit(\"tap click\", e);\n            if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) swiper.emit(\"doubleTap doubleClick\", e);\n        }\n        data.lastClickTime = now();\n        nextTick(function() {\n            if (!swiper.destroyed) swiper.allowClick = true;\n        });\n        if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n            data.isTouched = false;\n            data.isMoved = false;\n            data.startMoving = false;\n            return;\n        }\n        data.isTouched = false;\n        data.isMoved = false;\n        data.startMoving = false;\n        var currentPos;\n        if (params.followFinger) currentPos = rtl ? swiper.translate : -swiper.translate;\n        else currentPos = -data.currentTranslate;\n        if (params.cssMode) return;\n        if (params.freeMode) {\n            if (currentPos < -swiper.minTranslate()) {\n                swiper.slideTo(swiper.activeIndex);\n                return;\n            }\n            if (currentPos > -swiper.maxTranslate()) {\n                if (swiper.slides.length < snapGrid.length) swiper.slideTo(snapGrid.length - 1);\n                else swiper.slideTo(swiper.slides.length - 1);\n                return;\n            }\n            if (params.freeModeMomentum) {\n                if (data.velocities.length > 1) {\n                    var lastMoveEvent = data.velocities.pop();\n                    var velocityEvent = data.velocities.pop();\n                    var distance = lastMoveEvent.position - velocityEvent.position;\n                    var time = lastMoveEvent.time - velocityEvent.time;\n                    swiper.velocity = distance / time;\n                    swiper.velocity /= 2;\n                    if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) swiper.velocity = 0;\n                     // this implies that the user stopped moving a finger then released.\n                    // There would be no events with distance zero, so the last event is stale.\n                    if (time > 150 || now() - lastMoveEvent.time > 300) swiper.velocity = 0;\n                } else swiper.velocity = 0;\n                swiper.velocity *= params.freeModeMomentumVelocityRatio;\n                data.velocities.length = 0;\n                var momentumDuration = 1000 * params.freeModeMomentumRatio;\n                var momentumDistance = swiper.velocity * momentumDuration;\n                var newPosition = swiper.translate + momentumDistance;\n                if (rtl) newPosition = -newPosition;\n                var doBounce = false;\n                var afterBouncePosition;\n                var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n                var needsLoopFix;\n                if (newPosition < swiper.maxTranslate()) {\n                    if (params.freeModeMomentumBounce) {\n                        if (newPosition + swiper.maxTranslate() < -bounceAmount) newPosition = swiper.maxTranslate() - bounceAmount;\n                        afterBouncePosition = swiper.maxTranslate();\n                        doBounce = true;\n                        data.allowMomentumBounce = true;\n                    } else newPosition = swiper.maxTranslate();\n                    if (params.loop && params.centeredSlides) needsLoopFix = true;\n                } else if (newPosition > swiper.minTranslate()) {\n                    if (params.freeModeMomentumBounce) {\n                        if (newPosition - swiper.minTranslate() > bounceAmount) newPosition = swiper.minTranslate() + bounceAmount;\n                        afterBouncePosition = swiper.minTranslate();\n                        doBounce = true;\n                        data.allowMomentumBounce = true;\n                    } else newPosition = swiper.minTranslate();\n                    if (params.loop && params.centeredSlides) needsLoopFix = true;\n                } else if (params.freeModeSticky) {\n                    var nextSlide;\n                    for(var j = 0; j < snapGrid.length; j += 1)if (snapGrid[j] > -newPosition) {\n                        nextSlide = j;\n                        break;\n                    }\n                    if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === \"next\") newPosition = snapGrid[nextSlide];\n                    else newPosition = snapGrid[nextSlide - 1];\n                    newPosition = -newPosition;\n                }\n                if (needsLoopFix) swiper.once(\"transitionEnd\", function() {\n                    swiper.loopFix();\n                });\n                 // Fix duration\n                if (swiper.velocity !== 0) {\n                    if (rtl) momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n                    else momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n                    if (params.freeModeSticky) {\n                        // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n                        // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n                        // It's easy to see this when simulating touch with mouse events. To fix this,\n                        // limit single-slide swipes to the default slide duration. This also has the\n                        // nice side effect of matching slide speed if the user stopped moving before\n                        // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n                        // For faster swipes, also apply limits (albeit higher ones).\n                        var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n                        var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n                        if (moveDistance < currentSlideSize) momentumDuration = params.speed;\n                        else if (moveDistance < 2 * currentSlideSize) momentumDuration = params.speed * 1.5;\n                        else momentumDuration = params.speed * 2.5;\n                    }\n                } else if (params.freeModeSticky) {\n                    swiper.slideToClosest();\n                    return;\n                }\n                if (params.freeModeMomentumBounce && doBounce) {\n                    swiper.updateProgress(afterBouncePosition);\n                    swiper.setTransition(momentumDuration);\n                    swiper.setTranslate(newPosition);\n                    swiper.transitionStart(true, swiper.swipeDirection);\n                    swiper.animating = true;\n                    $wrapperEl.transitionEnd(function() {\n                        if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n                        swiper.emit(\"momentumBounce\");\n                        swiper.setTransition(params.speed);\n                        setTimeout(function() {\n                            swiper.setTranslate(afterBouncePosition);\n                            $wrapperEl.transitionEnd(function() {\n                                if (!swiper || swiper.destroyed) return;\n                                swiper.transitionEnd();\n                            });\n                        }, 0);\n                    });\n                } else if (swiper.velocity) {\n                    swiper.updateProgress(newPosition);\n                    swiper.setTransition(momentumDuration);\n                    swiper.setTranslate(newPosition);\n                    swiper.transitionStart(true, swiper.swipeDirection);\n                    if (!swiper.animating) {\n                        swiper.animating = true;\n                        $wrapperEl.transitionEnd(function() {\n                            if (!swiper || swiper.destroyed) return;\n                            swiper.transitionEnd();\n                        });\n                    }\n                } else {\n                    swiper.emit(\"_freeModeNoMomentumRelease\");\n                    swiper.updateProgress(newPosition);\n                }\n                swiper.updateActiveIndex();\n                swiper.updateSlidesClasses();\n            } else if (params.freeModeSticky) {\n                swiper.slideToClosest();\n                return;\n            } else if (params.freeMode) swiper.emit(\"_freeModeNoMomentumRelease\");\n            if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n                swiper.updateProgress();\n                swiper.updateActiveIndex();\n                swiper.updateSlidesClasses();\n            }\n            return;\n        } // Find current slide\n        var stopIndex = 0;\n        var groupSize = swiper.slidesSizesGrid[0];\n        for(var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup){\n            var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n            if (typeof slidesGrid[i + _increment] !== \"undefined\") {\n                if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {\n                    stopIndex = i;\n                    groupSize = slidesGrid[i + _increment] - slidesGrid[i];\n                }\n            } else if (currentPos >= slidesGrid[i]) {\n                stopIndex = i;\n                groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n            }\n        } // Find current slide size\n        var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n        var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n        if (timeDiff > params.longSwipesMs) {\n            // Long touches\n            if (!params.longSwipes) {\n                swiper.slideTo(swiper.activeIndex);\n                return;\n            }\n            if (swiper.swipeDirection === \"next\") {\n                if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n                else swiper.slideTo(stopIndex);\n            }\n            if (swiper.swipeDirection === \"prev\") {\n                if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n                else swiper.slideTo(stopIndex);\n            }\n        } else {\n            // Short swipes\n            if (!params.shortSwipes) {\n                swiper.slideTo(swiper.activeIndex);\n                return;\n            }\n            var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n            if (!isNavButtonTarget) {\n                if (swiper.swipeDirection === \"next\") swiper.slideTo(stopIndex + increment);\n                if (swiper.swipeDirection === \"prev\") swiper.slideTo(stopIndex);\n            } else if (e.target === swiper.navigation.nextEl) swiper.slideTo(stopIndex + increment);\n            else swiper.slideTo(stopIndex);\n        }\n    }\n    function onResize() {\n        var swiper = this;\n        var params = swiper.params, el = swiper.el;\n        if (el && el.offsetWidth === 0) return; // Breakpoints\n        if (params.breakpoints) swiper.setBreakpoint();\n         // Save locks\n        var allowSlideNext = swiper.allowSlideNext, allowSlidePrev = swiper.allowSlidePrev, snapGrid = swiper.snapGrid; // Disable locks on resize\n        swiper.allowSlideNext = true;\n        swiper.allowSlidePrev = true;\n        swiper.updateSize();\n        swiper.updateSlides();\n        swiper.updateSlidesClasses();\n        if ((params.slidesPerView === \"auto\" || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        else swiper.slideTo(swiper.activeIndex, 0, false, true);\n        if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) swiper.autoplay.run();\n         // Return locks after resize\n        swiper.allowSlidePrev = allowSlidePrev;\n        swiper.allowSlideNext = allowSlideNext;\n        if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) swiper.checkOverflow();\n    }\n    function onClick(e) {\n        var swiper = this;\n        if (!swiper.enabled) return;\n        if (!swiper.allowClick) {\n            if (swiper.params.preventClicks) e.preventDefault();\n            if (swiper.params.preventClicksPropagation && swiper.animating) {\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n            }\n        }\n    }\n    function onScroll() {\n        var swiper = this;\n        var wrapperEl = swiper.wrapperEl, rtlTranslate = swiper.rtlTranslate, enabled = swiper.enabled;\n        if (!enabled) return;\n        swiper.previousTranslate = swiper.translate;\n        if (swiper.isHorizontal()) {\n            if (rtlTranslate) swiper.translate = wrapperEl.scrollWidth - wrapperEl.offsetWidth - wrapperEl.scrollLeft;\n            else swiper.translate = -wrapperEl.scrollLeft;\n        } else swiper.translate = -wrapperEl.scrollTop;\n         // eslint-disable-next-line\n        if (swiper.translate === -0) swiper.translate = 0;\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        var newProgress;\n        var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n        if (translatesDiff === 0) newProgress = 0;\n        else newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n        if (newProgress !== swiper.progress) swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n        swiper.emit(\"setTranslate\", swiper.translate, false);\n    }\n    var dummyEventAttached = false;\n    function dummyEventListener() {}\n    function attachEvents() {\n        var swiper = this;\n        var document1 = getDocument();\n        var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl, device = swiper.device, support = swiper.support;\n        swiper.onTouchStart = onTouchStart.bind(swiper);\n        swiper.onTouchMove = onTouchMove.bind(swiper);\n        swiper.onTouchEnd = onTouchEnd.bind(swiper);\n        if (params.cssMode) swiper.onScroll = onScroll.bind(swiper);\n        swiper.onClick = onClick.bind(swiper);\n        var capture = !!params.nested; // Touch Events\n        if (!support.touch && support.pointerEvents) {\n            el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n            document1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n            document1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n        } else {\n            if (support.touch) {\n                var passiveListener = touchEvents.start === \"touchstart\" && support.passiveListener && params.passiveListeners ? {\n                    passive: true,\n                    capture: false\n                } : false;\n                el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n                el.addEventListener(touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n                    passive: false,\n                    capture: capture\n                } : capture);\n                el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n                if (touchEvents.cancel) el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n                if (!dummyEventAttached) {\n                    document1.addEventListener(\"touchstart\", dummyEventListener);\n                    dummyEventAttached = true;\n                }\n            }\n            if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {\n                el.addEventListener(\"mousedown\", swiper.onTouchStart, false);\n                document1.addEventListener(\"mousemove\", swiper.onTouchMove, capture);\n                document1.addEventListener(\"mouseup\", swiper.onTouchEnd, false);\n            }\n        } // Prevent Links Clicks\n        if (params.preventClicks || params.preventClicksPropagation) el.addEventListener(\"click\", swiper.onClick, true);\n        if (params.cssMode) wrapperEl.addEventListener(\"scroll\", swiper.onScroll);\n         // Resize handler\n        if (params.updateOnWindowResize) swiper.on(device.ios || device.android ? \"resize orientationchange observerUpdate\" : \"resize observerUpdate\", onResize, true);\n        else swiper.on(\"observerUpdate\", onResize, true);\n    }\n    function detachEvents() {\n        var swiper = this;\n        var document1 = getDocument();\n        var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl, device = swiper.device, support = swiper.support;\n        var capture = !!params.nested; // Touch Events\n        if (!support.touch && support.pointerEvents) {\n            el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n            document1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n            document1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n        } else {\n            if (support.touch) {\n                var passiveListener = touchEvents.start === \"onTouchStart\" && support.passiveListener && params.passiveListeners ? {\n                    passive: true,\n                    capture: false\n                } : false;\n                el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n                el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n                el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n                if (touchEvents.cancel) el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n            }\n            if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {\n                el.removeEventListener(\"mousedown\", swiper.onTouchStart, false);\n                document1.removeEventListener(\"mousemove\", swiper.onTouchMove, capture);\n                document1.removeEventListener(\"mouseup\", swiper.onTouchEnd, false);\n            }\n        } // Prevent Links Clicks\n        if (params.preventClicks || params.preventClicksPropagation) el.removeEventListener(\"click\", swiper.onClick, true);\n        if (params.cssMode) wrapperEl.removeEventListener(\"scroll\", swiper.onScroll);\n         // Resize handler\n        swiper.off(device.ios || device.android ? \"resize orientationchange observerUpdate\" : \"resize observerUpdate\", onResize);\n    }\n    var events = {\n        attachEvents: attachEvents,\n        detachEvents: detachEvents\n    };\n    function setBreakpoint() {\n        var swiper = this;\n        var activeIndex = swiper.activeIndex, initialized = swiper.initialized, _swiper$loopedSlides = swiper.loopedSlides, loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides, params = swiper.params, $el = swiper.$el;\n        var breakpoints = params.breakpoints;\n        if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n        var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n        if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n        var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n        if (breakpointOnlyParams) [\n            \"slidesPerView\",\n            \"spaceBetween\",\n            \"slidesPerGroup\",\n            \"slidesPerGroupSkip\",\n            \"slidesPerColumn\"\n        ].forEach(function(param) {\n            var paramValue = breakpointOnlyParams[param];\n            if (typeof paramValue === \"undefined\") return;\n            if (param === \"slidesPerView\" && (paramValue === \"AUTO\" || paramValue === \"auto\")) breakpointOnlyParams[param] = \"auto\";\n            else if (param === \"slidesPerView\") breakpointOnlyParams[param] = parseFloat(paramValue);\n            else breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        });\n        var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n        var wasMultiRow = params.slidesPerColumn > 1;\n        var isMultiRow = breakpointParams.slidesPerColumn > 1;\n        var wasEnabled = params.enabled;\n        if (wasMultiRow && !isMultiRow) {\n            $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n            swiper.emitContainerClasses();\n        } else if (!wasMultiRow && isMultiRow) {\n            $el.addClass(params.containerModifierClass + \"multirow\");\n            if (breakpointParams.slidesPerColumnFill && breakpointParams.slidesPerColumnFill === \"column\" || !breakpointParams.slidesPerColumnFill && params.slidesPerColumnFill === \"column\") $el.addClass(params.containerModifierClass + \"multirow-column\");\n            swiper.emitContainerClasses();\n        }\n        var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n        var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n        if (directionChanged && initialized) swiper.changeDirection();\n        extend(swiper.params, breakpointParams);\n        var isEnabled = swiper.params.enabled;\n        extend(swiper, {\n            allowTouchMove: swiper.params.allowTouchMove,\n            allowSlideNext: swiper.params.allowSlideNext,\n            allowSlidePrev: swiper.params.allowSlidePrev\n        });\n        if (wasEnabled && !isEnabled) swiper.disable();\n        else if (!wasEnabled && isEnabled) swiper.enable();\n        swiper.currentBreakpoint = breakpoint;\n        swiper.emit(\"_beforeBreakpoint\", breakpointParams);\n        if (needsReLoop && initialized) {\n            swiper.loopDestroy();\n            swiper.loopCreate();\n            swiper.updateSlides();\n            swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n        }\n        swiper.emit(\"breakpoint\", breakpointParams);\n    }\n    function getBreakpoint(breakpoints, base, containerEl) {\n        if (base === void 0) base = \"window\";\n        if (!breakpoints || base === \"container\" && !containerEl) return undefined;\n        var breakpoint = false;\n        var window1 = getWindow();\n        var currentHeight = base === \"window\" ? window1.innerHeight : containerEl.clientHeight;\n        var points = Object.keys(breakpoints).map(function(point) {\n            if (typeof point === \"string\" && point.indexOf(\"@\") === 0) {\n                var minRatio = parseFloat(point.substr(1));\n                var value = currentHeight * minRatio;\n                return {\n                    value: value,\n                    point: point\n                };\n            }\n            return {\n                value: point,\n                point: point\n            };\n        });\n        points.sort(function(a, b) {\n            return parseInt(a.value, 10) - parseInt(b.value, 10);\n        });\n        for(var i = 0; i < points.length; i += 1){\n            var _points$i = points[i], point = _points$i.point, value = _points$i.value;\n            if (base === \"window\") {\n                if (window1.matchMedia(\"(min-width: \" + value + \"px)\").matches) breakpoint = point;\n            } else if (value <= containerEl.clientWidth) breakpoint = point;\n        }\n        return breakpoint || \"max\";\n    }\n    var breakpoints = {\n        setBreakpoint: setBreakpoint,\n        getBreakpoint: getBreakpoint\n    };\n    function prepareClasses(entries, prefix) {\n        var resultClasses = [];\n        entries.forEach(function(item) {\n            if (typeof item === \"object\") Object.keys(item).forEach(function(classNames) {\n                if (item[classNames]) resultClasses.push(prefix + classNames);\n            });\n            else if (typeof item === \"string\") resultClasses.push(prefix + item);\n        });\n        return resultClasses;\n    }\n    function addClasses() {\n        var swiper = this;\n        var classNames = swiper.classNames, params = swiper.params, rtl = swiper.rtl, $el = swiper.$el, device = swiper.device, support = swiper.support; // prettier-ignore\n        var suffixes = prepareClasses([\n            \"initialized\",\n            params.direction,\n            {\n                \"pointer-events\": support.pointerEvents && !support.touch\n            },\n            {\n                \"free-mode\": params.freeMode\n            },\n            {\n                \"autoheight\": params.autoHeight\n            },\n            {\n                \"rtl\": rtl\n            },\n            {\n                \"multirow\": params.slidesPerColumn > 1\n            },\n            {\n                \"multirow-column\": params.slidesPerColumn > 1 && params.slidesPerColumnFill === \"column\"\n            },\n            {\n                \"android\": device.android\n            },\n            {\n                \"ios\": device.ios\n            },\n            {\n                \"css-mode\": params.cssMode\n            }\n        ], params.containerModifierClass);\n        classNames.push.apply(classNames, suffixes);\n        $el.addClass([].concat(classNames).join(\" \"));\n        swiper.emitContainerClasses();\n    }\n    function removeClasses() {\n        var swiper = this;\n        var $el = swiper.$el, classNames = swiper.classNames;\n        $el.removeClass(classNames.join(\" \"));\n        swiper.emitContainerClasses();\n    }\n    var classes = {\n        addClasses: addClasses,\n        removeClasses: removeClasses\n    };\n    function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n        var window1 = getWindow();\n        var image;\n        function onReady() {\n            if (callback) callback();\n        }\n        var isPicture = $(imageEl).parent(\"picture\")[0];\n        if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n            if (src) {\n                image = new window1.Image();\n                image.onload = onReady;\n                image.onerror = onReady;\n                if (sizes) image.sizes = sizes;\n                if (srcset) image.srcset = srcset;\n                if (src) image.src = src;\n            } else onReady();\n        } else // image already loaded...\n        onReady();\n    }\n    function preloadImages() {\n        var swiper = this;\n        swiper.imagesToLoad = swiper.$el.find(\"img\");\n        function onReady() {\n            if (typeof swiper === \"undefined\" || swiper === null || !swiper || swiper.destroyed) return;\n            if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n            if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n                if (swiper.params.updateOnImagesReady) swiper.update();\n                swiper.emit(\"imagesReady\");\n            }\n        }\n        for(var i = 0; i < swiper.imagesToLoad.length; i += 1){\n            var imageEl = swiper.imagesToLoad[i];\n            swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute(\"src\"), imageEl.srcset || imageEl.getAttribute(\"srcset\"), imageEl.sizes || imageEl.getAttribute(\"sizes\"), true, onReady);\n        }\n    }\n    var images = {\n        loadImage: loadImage,\n        preloadImages: preloadImages\n    };\n    function checkOverflow() {\n        var swiper = this;\n        var params = swiper.params;\n        var wasLocked = swiper.isLocked;\n        var lastSlidePosition = swiper.slides.length > 0 && params.slidesOffsetBefore + params.spaceBetween * (swiper.slides.length - 1) + swiper.slides[0].offsetWidth * swiper.slides.length;\n        if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) swiper.isLocked = lastSlidePosition <= swiper.size;\n        else swiper.isLocked = swiper.snapGrid.length === 1;\n        swiper.allowSlideNext = !swiper.isLocked;\n        swiper.allowSlidePrev = !swiper.isLocked; // events\n        if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? \"lock\" : \"unlock\");\n        if (wasLocked && wasLocked !== swiper.isLocked) {\n            swiper.isEnd = false;\n            if (swiper.navigation) swiper.navigation.update();\n        }\n    }\n    var checkOverflow$1 = {\n        checkOverflow: checkOverflow\n    };\n    var defaults = {\n        init: true,\n        direction: \"horizontal\",\n        touchEventsTarget: \"container\",\n        initialSlide: 0,\n        speed: 300,\n        cssMode: false,\n        updateOnWindowResize: true,\n        resizeObserver: false,\n        nested: false,\n        createElements: false,\n        enabled: true,\n        focusableElements: \"input, select, option, textarea, button, video, label\",\n        // Overrides\n        width: null,\n        height: null,\n        //\n        preventInteractionOnTransition: false,\n        // ssr\n        userAgent: null,\n        url: null,\n        // To support iOS's swipe-to-go-back gesture (when being used in-app).\n        edgeSwipeDetection: false,\n        edgeSwipeThreshold: 20,\n        // Free mode\n        freeMode: false,\n        freeModeMomentum: true,\n        freeModeMomentumRatio: 1,\n        freeModeMomentumBounce: true,\n        freeModeMomentumBounceRatio: 1,\n        freeModeMomentumVelocityRatio: 1,\n        freeModeSticky: false,\n        freeModeMinimumVelocity: 0.02,\n        // Autoheight\n        autoHeight: false,\n        // Set wrapper width\n        setWrapperSize: false,\n        // Virtual Translate\n        virtualTranslate: false,\n        // Effects\n        effect: \"slide\",\n        // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n        // Breakpoints\n        breakpoints: undefined,\n        breakpointsBase: \"window\",\n        // Slides grid\n        spaceBetween: 0,\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerColumnFill: \"column\",\n        slidesPerGroup: 1,\n        slidesPerGroupSkip: 0,\n        centeredSlides: false,\n        centeredSlidesBounds: false,\n        slidesOffsetBefore: 0,\n        // in px\n        slidesOffsetAfter: 0,\n        // in px\n        normalizeSlideIndex: true,\n        centerInsufficientSlides: false,\n        // Disable swiper and hide navigation when container not overflow\n        watchOverflow: false,\n        // Round length\n        roundLengths: false,\n        // Touches\n        touchRatio: 1,\n        touchAngle: 45,\n        simulateTouch: true,\n        shortSwipes: true,\n        longSwipes: true,\n        longSwipesRatio: 0.5,\n        longSwipesMs: 300,\n        followFinger: true,\n        allowTouchMove: true,\n        threshold: 0,\n        touchMoveStopPropagation: false,\n        touchStartPreventDefault: true,\n        touchStartForcePreventDefault: false,\n        touchReleaseOnEdges: false,\n        // Unique Navigation Elements\n        uniqueNavElements: true,\n        // Resistance\n        resistance: true,\n        resistanceRatio: 0.85,\n        // Progress\n        watchSlidesProgress: false,\n        watchSlidesVisibility: false,\n        // Cursor\n        grabCursor: false,\n        // Clicks\n        preventClicks: true,\n        preventClicksPropagation: true,\n        slideToClickedSlide: false,\n        // Images\n        preloadImages: true,\n        updateOnImagesReady: true,\n        // loop\n        loop: false,\n        loopAdditionalSlides: 0,\n        loopedSlides: null,\n        loopFillGroupWithBlank: false,\n        loopPreventsSlide: true,\n        // Swiping/no swiping\n        allowSlidePrev: true,\n        allowSlideNext: true,\n        swipeHandler: null,\n        // '.swipe-handler',\n        noSwiping: true,\n        noSwipingClass: \"swiper-no-swiping\",\n        noSwipingSelector: null,\n        // Passive Listeners\n        passiveListeners: true,\n        // NS\n        containerModifierClass: \"swiper-container-\",\n        // NEW\n        slideClass: \"swiper-slide\",\n        slideBlankClass: \"swiper-slide-invisible-blank\",\n        slideActiveClass: \"swiper-slide-active\",\n        slideDuplicateActiveClass: \"swiper-slide-duplicate-active\",\n        slideVisibleClass: \"swiper-slide-visible\",\n        slideDuplicateClass: \"swiper-slide-duplicate\",\n        slideNextClass: \"swiper-slide-next\",\n        slideDuplicateNextClass: \"swiper-slide-duplicate-next\",\n        slidePrevClass: \"swiper-slide-prev\",\n        slideDuplicatePrevClass: \"swiper-slide-duplicate-prev\",\n        wrapperClass: \"swiper-wrapper\",\n        // Callbacks\n        runCallbacksOnInit: true,\n        // Internals\n        _emitClasses: false\n    };\n    var prototypes = {\n        modular: modular,\n        eventsEmitter: eventsEmitter,\n        update: update,\n        translate: translate,\n        transition: transition,\n        slide: slide,\n        loop: loop,\n        grabCursor: grabCursor,\n        manipulation: manipulation,\n        events: events,\n        breakpoints: breakpoints,\n        checkOverflow: checkOverflow$1,\n        classes: classes,\n        images: images\n    };\n    var extendedDefaults = {};\n    var Swiper = /*#__PURE__*/ function() {\n        function Swiper() {\n            var el;\n            var params;\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n            if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === \"Object\") params = args[0];\n            else {\n                el = args[0];\n                params = args[1];\n            }\n            if (!params) params = {};\n            params = extend({}, params);\n            if (el && !params.el) params.el = el;\n            if (params.el && $(params.el).length > 1) {\n                var swipers = [];\n                $(params.el).each(function(containerEl) {\n                    var newParams = extend({}, params, {\n                        el: containerEl\n                    });\n                    swipers.push(new Swiper(newParams));\n                });\n                return swipers;\n            } // Swiper Instance\n            var swiper = this;\n            swiper.__swiper__ = true;\n            swiper.support = getSupport();\n            swiper.device = getDevice({\n                userAgent: params.userAgent\n            });\n            swiper.browser = getBrowser();\n            swiper.eventsListeners = {};\n            swiper.eventsAnyListeners = [];\n            if (typeof swiper.modules === \"undefined\") swiper.modules = {};\n            Object.keys(swiper.modules).forEach(function(moduleName) {\n                var module1 = swiper.modules[moduleName];\n                if (module1.params) {\n                    var moduleParamName = Object.keys(module1.params)[0];\n                    var moduleParams = module1.params[moduleParamName];\n                    if (typeof moduleParams !== \"object\" || moduleParams === null) return;\n                    if ([\n                        \"navigation\",\n                        \"pagination\",\n                        \"scrollbar\"\n                    ].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) params[moduleParamName] = {\n                        auto: true\n                    };\n                    if (!(moduleParamName in params && \"enabled\" in moduleParams)) return;\n                    if (params[moduleParamName] === true) params[moduleParamName] = {\n                        enabled: true\n                    };\n                    if (typeof params[moduleParamName] === \"object\" && !(\"enabled\" in params[moduleParamName])) params[moduleParamName].enabled = true;\n                    if (!params[moduleParamName]) params[moduleParamName] = {\n                        enabled: false\n                    };\n                }\n            }); // Extend defaults with modules params\n            var swiperParams = extend({}, defaults);\n            swiper.useParams(swiperParams); // Extend defaults with passed params\n            swiper.params = extend({}, swiperParams, extendedDefaults, params);\n            swiper.originalParams = extend({}, swiper.params);\n            swiper.passedParams = extend({}, params); // add event listeners\n            if (swiper.params && swiper.params.on) Object.keys(swiper.params.on).forEach(function(eventName) {\n                swiper.on(eventName, swiper.params.on[eventName]);\n            });\n            if (swiper.params && swiper.params.onAny) swiper.onAny(swiper.params.onAny);\n             // Save Dom lib\n            swiper.$ = $; // Extend Swiper\n            extend(swiper, {\n                enabled: swiper.params.enabled,\n                el: el,\n                // Classes\n                classNames: [],\n                // Slides\n                slides: $(),\n                slidesGrid: [],\n                snapGrid: [],\n                slidesSizesGrid: [],\n                // isDirection\n                isHorizontal: function isHorizontal() {\n                    return swiper.params.direction === \"horizontal\";\n                },\n                isVertical: function isVertical() {\n                    return swiper.params.direction === \"vertical\";\n                },\n                // Indexes\n                activeIndex: 0,\n                realIndex: 0,\n                //\n                isBeginning: true,\n                isEnd: false,\n                // Props\n                translate: 0,\n                previousTranslate: 0,\n                progress: 0,\n                velocity: 0,\n                animating: false,\n                // Locks\n                allowSlideNext: swiper.params.allowSlideNext,\n                allowSlidePrev: swiper.params.allowSlidePrev,\n                // Touch Events\n                touchEvents: function touchEvents() {\n                    var touch = [\n                        \"touchstart\",\n                        \"touchmove\",\n                        \"touchend\",\n                        \"touchcancel\"\n                    ];\n                    var desktop = [\n                        \"mousedown\",\n                        \"mousemove\",\n                        \"mouseup\"\n                    ];\n                    if (swiper.support.pointerEvents) desktop = [\n                        \"pointerdown\",\n                        \"pointermove\",\n                        \"pointerup\"\n                    ];\n                    swiper.touchEventsTouch = {\n                        start: touch[0],\n                        move: touch[1],\n                        end: touch[2],\n                        cancel: touch[3]\n                    };\n                    swiper.touchEventsDesktop = {\n                        start: desktop[0],\n                        move: desktop[1],\n                        end: desktop[2]\n                    };\n                    return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n                }(),\n                touchEventsData: {\n                    isTouched: undefined,\n                    isMoved: undefined,\n                    allowTouchCallbacks: undefined,\n                    touchStartTime: undefined,\n                    isScrolling: undefined,\n                    currentTranslate: undefined,\n                    startTranslate: undefined,\n                    allowThresholdMove: undefined,\n                    // Form elements to match\n                    focusableElements: swiper.params.focusableElements,\n                    // Last click time\n                    lastClickTime: now(),\n                    clickTimeout: undefined,\n                    // Velocities\n                    velocities: [],\n                    allowMomentumBounce: undefined,\n                    isTouchEvent: undefined,\n                    startMoving: undefined\n                },\n                // Clicks\n                allowClick: true,\n                // Touches\n                allowTouchMove: swiper.params.allowTouchMove,\n                touches: {\n                    startX: 0,\n                    startY: 0,\n                    currentX: 0,\n                    currentY: 0,\n                    diff: 0\n                },\n                // Images\n                imagesToLoad: [],\n                imagesLoaded: 0\n            }); // Install Modules\n            swiper.useModules();\n            swiper.emit(\"_swiper\"); // Init\n            if (swiper.params.init) swiper.init();\n             // Return app instance\n            return swiper;\n        }\n        var _proto = Swiper.prototype;\n        _proto.enable = function enable() {\n            var swiper = this;\n            if (swiper.enabled) return;\n            swiper.enabled = true;\n            if (swiper.params.grabCursor) swiper.setGrabCursor();\n            swiper.emit(\"enable\");\n        };\n        _proto.disable = function disable() {\n            var swiper = this;\n            if (!swiper.enabled) return;\n            swiper.enabled = false;\n            if (swiper.params.grabCursor) swiper.unsetGrabCursor();\n            swiper.emit(\"disable\");\n        };\n        _proto.setProgress = function setProgress(progress, speed) {\n            var swiper = this;\n            progress = Math.min(Math.max(progress, 0), 1);\n            var min = swiper.minTranslate();\n            var max = swiper.maxTranslate();\n            var current = (max - min) * progress + min;\n            swiper.translateTo(current, typeof speed === \"undefined\" ? 0 : speed);\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        };\n        _proto.emitContainerClasses = function emitContainerClasses() {\n            var swiper = this;\n            if (!swiper.params._emitClasses || !swiper.el) return;\n            var classes = swiper.el.className.split(\" \").filter(function(className) {\n                return className.indexOf(\"swiper-container\") === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n            });\n            swiper.emit(\"_containerClasses\", classes.join(\" \"));\n        };\n        _proto.getSlideClasses = function getSlideClasses(slideEl) {\n            var swiper = this;\n            return slideEl.className.split(\" \").filter(function(className) {\n                return className.indexOf(\"swiper-slide\") === 0 || className.indexOf(swiper.params.slideClass) === 0;\n            }).join(\" \");\n        };\n        _proto.emitSlidesClasses = function emitSlidesClasses() {\n            var swiper = this;\n            if (!swiper.params._emitClasses || !swiper.el) return;\n            var updates = [];\n            swiper.slides.each(function(slideEl) {\n                var classNames = swiper.getSlideClasses(slideEl);\n                updates.push({\n                    slideEl: slideEl,\n                    classNames: classNames\n                });\n                swiper.emit(\"_slideClass\", slideEl, classNames);\n            });\n            swiper.emit(\"_slideClasses\", updates);\n        };\n        _proto.slidesPerViewDynamic = function slidesPerViewDynamic() {\n            var swiper = this;\n            var params = swiper.params, slides = swiper.slides, slidesGrid = swiper.slidesGrid, swiperSize = swiper.size, activeIndex = swiper.activeIndex;\n            var spv = 1;\n            if (params.centeredSlides) {\n                var slideSize = slides[activeIndex].swiperSlideSize;\n                var breakLoop;\n                for(var i = activeIndex + 1; i < slides.length; i += 1)if (slides[i] && !breakLoop) {\n                    slideSize += slides[i].swiperSlideSize;\n                    spv += 1;\n                    if (slideSize > swiperSize) breakLoop = true;\n                }\n                for(var _i = activeIndex - 1; _i >= 0; _i -= 1)if (slides[_i] && !breakLoop) {\n                    slideSize += slides[_i].swiperSlideSize;\n                    spv += 1;\n                    if (slideSize > swiperSize) breakLoop = true;\n                }\n            } else {\n                for(var _i2 = activeIndex + 1; _i2 < slides.length; _i2 += 1)if (slidesGrid[_i2] - slidesGrid[activeIndex] < swiperSize) spv += 1;\n            }\n            return spv;\n        };\n        _proto.update = function update() {\n            var swiper = this;\n            if (!swiper || swiper.destroyed) return;\n            var snapGrid = swiper.snapGrid, params = swiper.params; // Breakpoints\n            if (params.breakpoints) swiper.setBreakpoint();\n            swiper.updateSize();\n            swiper.updateSlides();\n            swiper.updateProgress();\n            swiper.updateSlidesClasses();\n            function setTranslate() {\n                var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n                var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n                swiper.setTranslate(newTranslate);\n                swiper.updateActiveIndex();\n                swiper.updateSlidesClasses();\n            }\n            var translated;\n            if (swiper.params.freeMode) {\n                setTranslate();\n                if (swiper.params.autoHeight) swiper.updateAutoHeight();\n            } else {\n                if ((swiper.params.slidesPerView === \"auto\" || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n                else translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n                if (!translated) setTranslate();\n            }\n            if (params.watchOverflow && snapGrid !== swiper.snapGrid) swiper.checkOverflow();\n            swiper.emit(\"update\");\n        };\n        _proto.changeDirection = function changeDirection(newDirection, needUpdate) {\n            if (needUpdate === void 0) needUpdate = true;\n            var swiper = this;\n            var currentDirection = swiper.params.direction;\n            if (!newDirection) // eslint-disable-next-line\n            newDirection = currentDirection === \"horizontal\" ? \"vertical\" : \"horizontal\";\n            if (newDirection === currentDirection || newDirection !== \"horizontal\" && newDirection !== \"vertical\") return swiper;\n            swiper.$el.removeClass(\"\" + swiper.params.containerModifierClass + currentDirection).addClass(\"\" + swiper.params.containerModifierClass + newDirection);\n            swiper.emitContainerClasses();\n            swiper.params.direction = newDirection;\n            swiper.slides.each(function(slideEl) {\n                if (newDirection === \"vertical\") slideEl.style.width = \"\";\n                else slideEl.style.height = \"\";\n            });\n            swiper.emit(\"changeDirection\");\n            if (needUpdate) swiper.update();\n            return swiper;\n        };\n        _proto.mount = function mount(el) {\n            var swiper = this;\n            if (swiper.mounted) return true; // Find el\n            var $el = $(el || swiper.params.el);\n            el = $el[0];\n            if (!el) return false;\n            el.swiper = swiper;\n            var getWrapperSelector = function getWrapperSelector() {\n                return \".\" + (swiper.params.wrapperClass || \"\").trim().split(\" \").join(\".\");\n            };\n            var getWrapper = function getWrapper() {\n                if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n                    var res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n                    res.children = function(options) {\n                        return $el.children(options);\n                    };\n                    return res;\n                }\n                return $el.children(getWrapperSelector());\n            }; // Find Wrapper\n            var $wrapperEl = getWrapper();\n            if ($wrapperEl.length === 0 && swiper.params.createElements) {\n                var document1 = getDocument();\n                var wrapper = document1.createElement(\"div\");\n                $wrapperEl = $(wrapper);\n                wrapper.className = swiper.params.wrapperClass;\n                $el.append(wrapper);\n                $el.children(\".\" + swiper.params.slideClass).each(function(slideEl) {\n                    $wrapperEl.append(slideEl);\n                });\n            }\n            extend(swiper, {\n                $el: $el,\n                el: el,\n                $wrapperEl: $wrapperEl,\n                wrapperEl: $wrapperEl[0],\n                mounted: true,\n                // RTL\n                rtl: el.dir.toLowerCase() === \"rtl\" || $el.css(\"direction\") === \"rtl\",\n                rtlTranslate: swiper.params.direction === \"horizontal\" && (el.dir.toLowerCase() === \"rtl\" || $el.css(\"direction\") === \"rtl\"),\n                wrongRTL: $wrapperEl.css(\"display\") === \"-webkit-box\"\n            });\n            return true;\n        };\n        _proto.init = function init(el) {\n            var swiper = this;\n            if (swiper.initialized) return swiper;\n            var mounted = swiper.mount(el);\n            if (mounted === false) return swiper;\n            swiper.emit(\"beforeInit\"); // Set breakpoint\n            if (swiper.params.breakpoints) swiper.setBreakpoint();\n             // Add Classes\n            swiper.addClasses(); // Create loop\n            if (swiper.params.loop) swiper.loopCreate();\n             // Update size\n            swiper.updateSize(); // Update slides\n            swiper.updateSlides();\n            if (swiper.params.watchOverflow) swiper.checkOverflow();\n             // Set Grab Cursor\n            if (swiper.params.grabCursor && swiper.enabled) swiper.setGrabCursor();\n            if (swiper.params.preloadImages) swiper.preloadImages();\n             // Slide To Initial Slide\n            if (swiper.params.loop) swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n            else swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n             // Attach events\n            swiper.attachEvents(); // Init Flag\n            swiper.initialized = true; // Emit\n            swiper.emit(\"init\");\n            swiper.emit(\"afterInit\");\n            return swiper;\n        };\n        _proto.destroy = function destroy(deleteInstance, cleanStyles) {\n            if (deleteInstance === void 0) deleteInstance = true;\n            if (cleanStyles === void 0) cleanStyles = true;\n            var swiper = this;\n            var params = swiper.params, $el = swiper.$el, $wrapperEl = swiper.$wrapperEl, slides = swiper.slides;\n            if (typeof swiper.params === \"undefined\" || swiper.destroyed) return null;\n            swiper.emit(\"beforeDestroy\"); // Init Flag\n            swiper.initialized = false; // Detach events\n            swiper.detachEvents(); // Destroy loop\n            if (params.loop) swiper.loopDestroy();\n             // Cleanup styles\n            if (cleanStyles) {\n                swiper.removeClasses();\n                $el.removeAttr(\"style\");\n                $wrapperEl.removeAttr(\"style\");\n                if (slides && slides.length) slides.removeClass([\n                    params.slideVisibleClass,\n                    params.slideActiveClass,\n                    params.slideNextClass,\n                    params.slidePrevClass\n                ].join(\" \")).removeAttr(\"style\").removeAttr(\"data-swiper-slide-index\");\n            }\n            swiper.emit(\"destroy\"); // Detach emitter events\n            Object.keys(swiper.eventsListeners).forEach(function(eventName) {\n                swiper.off(eventName);\n            });\n            if (deleteInstance !== false) {\n                swiper.$el[0].swiper = null;\n                deleteProps(swiper);\n            }\n            swiper.destroyed = true;\n            return null;\n        };\n        Swiper.extendDefaults = function extendDefaults(newDefaults) {\n            extend(extendedDefaults, newDefaults);\n        };\n        Swiper.installModule = function installModule(module1) {\n            if (!Swiper.prototype.modules) Swiper.prototype.modules = {};\n            var name = module1.name || Object.keys(Swiper.prototype.modules).length + \"_\" + now();\n            Swiper.prototype.modules[name] = module1;\n        };\n        Swiper.use = function use(module1) {\n            if (Array.isArray(module1)) {\n                module1.forEach(function(m) {\n                    return Swiper.installModule(m);\n                });\n                return Swiper;\n            }\n            Swiper.installModule(module1);\n            return Swiper;\n        };\n        _createClass(Swiper, null, [\n            {\n                key: \"extendedDefaults\",\n                get: function get() {\n                    return extendedDefaults;\n                }\n            },\n            {\n                key: \"defaults\",\n                get: function get() {\n                    return defaults;\n                }\n            }\n        ]);\n        return Swiper;\n    }();\n    Object.keys(prototypes).forEach(function(prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function(protoMethod) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        });\n    });\n    Swiper.use([\n        Resize,\n        Observer$1\n    ]);\n    var Virtual = {\n        update: function update(force) {\n            var swiper = this;\n            var _swiper$params = swiper.params, slidesPerView = _swiper$params.slidesPerView, slidesPerGroup = _swiper$params.slidesPerGroup, centeredSlides = _swiper$params.centeredSlides;\n            var _swiper$params$virtua = swiper.params.virtual, addSlidesBefore = _swiper$params$virtua.addSlidesBefore, addSlidesAfter = _swiper$params$virtua.addSlidesAfter;\n            var _swiper$virtual = swiper.virtual, previousFrom = _swiper$virtual.from, previousTo = _swiper$virtual.to, slides = _swiper$virtual.slides, previousSlidesGrid = _swiper$virtual.slidesGrid, renderSlide = _swiper$virtual.renderSlide, previousOffset = _swiper$virtual.offset;\n            swiper.updateActiveIndex();\n            var activeIndex = swiper.activeIndex || 0;\n            var offsetProp;\n            if (swiper.rtlTranslate) offsetProp = \"right\";\n            else offsetProp = swiper.isHorizontal() ? \"left\" : \"top\";\n            var slidesAfter;\n            var slidesBefore;\n            if (centeredSlides) {\n                slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n                slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n            } else {\n                slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n                slidesBefore = slidesPerGroup + addSlidesBefore;\n            }\n            var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n            var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n            var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n            extend(swiper.virtual, {\n                from: from,\n                to: to,\n                offset: offset,\n                slidesGrid: swiper.slidesGrid\n            });\n            function onRendered() {\n                swiper.updateSlides();\n                swiper.updateProgress();\n                swiper.updateSlidesClasses();\n                if (swiper.lazy && swiper.params.lazy.enabled) swiper.lazy.load();\n            }\n            if (previousFrom === from && previousTo === to && !force) {\n                if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) swiper.slides.css(offsetProp, offset + \"px\");\n                swiper.updateProgress();\n                return;\n            }\n            if (swiper.params.virtual.renderExternal) {\n                swiper.params.virtual.renderExternal.call(swiper, {\n                    offset: offset,\n                    from: from,\n                    to: to,\n                    slides: function getSlides() {\n                        var slidesToRender = [];\n                        for(var i = from; i <= to; i += 1)slidesToRender.push(slides[i]);\n                        return slidesToRender;\n                    }()\n                });\n                if (swiper.params.virtual.renderExternalUpdate) onRendered();\n                return;\n            }\n            var prependIndexes = [];\n            var appendIndexes = [];\n            if (force) swiper.$wrapperEl.find(\".\" + swiper.params.slideClass).remove();\n            else {\n                for(var i = previousFrom; i <= previousTo; i += 1)if (i < from || i > to) swiper.$wrapperEl.find(\".\" + swiper.params.slideClass + '[data-swiper-slide-index=\"' + i + '\"]').remove();\n            }\n            for(var _i = 0; _i < slides.length; _i += 1)if (_i >= from && _i <= to) {\n                if (typeof previousTo === \"undefined\" || force) appendIndexes.push(_i);\n                else {\n                    if (_i > previousTo) appendIndexes.push(_i);\n                    if (_i < previousFrom) prependIndexes.push(_i);\n                }\n            }\n            appendIndexes.forEach(function(index) {\n                swiper.$wrapperEl.append(renderSlide(slides[index], index));\n            });\n            prependIndexes.sort(function(a, b) {\n                return b - a;\n            }).forEach(function(index) {\n                swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n            });\n            swiper.$wrapperEl.children(\".swiper-slide\").css(offsetProp, offset + \"px\");\n            onRendered();\n        },\n        renderSlide: function renderSlide(slide, index) {\n            var swiper = this;\n            var params = swiper.params.virtual;\n            if (params.cache && swiper.virtual.cache[index]) return swiper.virtual.cache[index];\n            var $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $('<div class=\"' + swiper.params.slideClass + '\" data-swiper-slide-index=\"' + index + '\">' + slide + \"</div>\");\n            if (!$slideEl.attr(\"data-swiper-slide-index\")) $slideEl.attr(\"data-swiper-slide-index\", index);\n            if (params.cache) swiper.virtual.cache[index] = $slideEl;\n            return $slideEl;\n        },\n        appendSlide: function appendSlide(slides) {\n            var swiper = this;\n            if (typeof slides === \"object\" && \"length\" in slides) {\n                for(var i = 0; i < slides.length; i += 1)if (slides[i]) swiper.virtual.slides.push(slides[i]);\n            } else swiper.virtual.slides.push(slides);\n            swiper.virtual.update(true);\n        },\n        prependSlide: function prependSlide(slides) {\n            var swiper = this;\n            var activeIndex = swiper.activeIndex;\n            var newActiveIndex = activeIndex + 1;\n            var numberOfNewSlides = 1;\n            if (Array.isArray(slides)) {\n                for(var i = 0; i < slides.length; i += 1)if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n                newActiveIndex = activeIndex + slides.length;\n                numberOfNewSlides = slides.length;\n            } else swiper.virtual.slides.unshift(slides);\n            if (swiper.params.virtual.cache) {\n                var cache = swiper.virtual.cache;\n                var newCache = {};\n                Object.keys(cache).forEach(function(cachedIndex) {\n                    var $cachedEl = cache[cachedIndex];\n                    var cachedElIndex = $cachedEl.attr(\"data-swiper-slide-index\");\n                    if (cachedElIndex) $cachedEl.attr(\"data-swiper-slide-index\", parseInt(cachedElIndex, 10) + 1);\n                    newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n                });\n                swiper.virtual.cache = newCache;\n            }\n            swiper.virtual.update(true);\n            swiper.slideTo(newActiveIndex, 0);\n        },\n        removeSlide: function removeSlide(slidesIndexes) {\n            var swiper = this;\n            if (typeof slidesIndexes === \"undefined\" || slidesIndexes === null) return;\n            var activeIndex = swiper.activeIndex;\n            if (Array.isArray(slidesIndexes)) for(var i = slidesIndexes.length - 1; i >= 0; i -= 1){\n                swiper.virtual.slides.splice(slidesIndexes[i], 1);\n                if (swiper.params.virtual.cache) delete swiper.virtual.cache[slidesIndexes[i]];\n                if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n                activeIndex = Math.max(activeIndex, 0);\n            }\n            else {\n                swiper.virtual.slides.splice(slidesIndexes, 1);\n                if (swiper.params.virtual.cache) delete swiper.virtual.cache[slidesIndexes];\n                if (slidesIndexes < activeIndex) activeIndex -= 1;\n                activeIndex = Math.max(activeIndex, 0);\n            }\n            swiper.virtual.update(true);\n            swiper.slideTo(activeIndex, 0);\n        },\n        removeAllSlides: function removeAllSlides() {\n            var swiper = this;\n            swiper.virtual.slides = [];\n            if (swiper.params.virtual.cache) swiper.virtual.cache = {};\n            swiper.virtual.update(true);\n            swiper.slideTo(0, 0);\n        }\n    };\n    var Virtual$1 = {\n        name: \"virtual\",\n        params: {\n            virtual: {\n                enabled: false,\n                slides: [],\n                cache: true,\n                renderSlide: null,\n                renderExternal: null,\n                renderExternalUpdate: true,\n                addSlidesBefore: 0,\n                addSlidesAfter: 0\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                virtual: _extends({}, Virtual, {\n                    slides: swiper.params.virtual.slides,\n                    cache: {}\n                })\n            });\n        },\n        on: {\n            beforeInit: function beforeInit(swiper) {\n                if (!swiper.params.virtual.enabled) return;\n                swiper.classNames.push(swiper.params.containerModifierClass + \"virtual\");\n                var overwriteParams = {\n                    watchSlidesProgress: true\n                };\n                extend(swiper.params, overwriteParams);\n                extend(swiper.originalParams, overwriteParams);\n                if (!swiper.params.initialSlide) swiper.virtual.update();\n            },\n            setTranslate: function setTranslate(swiper) {\n                if (!swiper.params.virtual.enabled) return;\n                swiper.virtual.update();\n            }\n        }\n    };\n    var Keyboard = {\n        handle: function handle(event) {\n            var swiper = this;\n            if (!swiper.enabled) return;\n            var window1 = getWindow();\n            var document1 = getDocument();\n            var rtl = swiper.rtlTranslate;\n            var e = event;\n            if (e.originalEvent) e = e.originalEvent; // jquery fix\n            var kc = e.keyCode || e.charCode;\n            var pageUpDown = swiper.params.keyboard.pageUpDown;\n            var isPageUp = pageUpDown && kc === 33;\n            var isPageDown = pageUpDown && kc === 34;\n            var isArrowLeft = kc === 37;\n            var isArrowRight = kc === 39;\n            var isArrowUp = kc === 38;\n            var isArrowDown = kc === 40; // Directions locks\n            if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) return false;\n            if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) return false;\n            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) return undefined;\n            if (document1.activeElement && document1.activeElement.nodeName && (document1.activeElement.nodeName.toLowerCase() === \"input\" || document1.activeElement.nodeName.toLowerCase() === \"textarea\")) return undefined;\n            if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n                var inView = false; // Check that swiper should be inside of visible area of window\n                if (swiper.$el.parents(\".\" + swiper.params.slideClass).length > 0 && swiper.$el.parents(\".\" + swiper.params.slideActiveClass).length === 0) return undefined;\n                var $el = swiper.$el;\n                var swiperWidth = $el[0].clientWidth;\n                var swiperHeight = $el[0].clientHeight;\n                var windowWidth = window1.innerWidth;\n                var windowHeight = window1.innerHeight;\n                var swiperOffset = swiper.$el.offset();\n                if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n                var swiperCoord = [\n                    [\n                        swiperOffset.left,\n                        swiperOffset.top\n                    ],\n                    [\n                        swiperOffset.left + swiperWidth,\n                        swiperOffset.top\n                    ],\n                    [\n                        swiperOffset.left,\n                        swiperOffset.top + swiperHeight\n                    ],\n                    [\n                        swiperOffset.left + swiperWidth,\n                        swiperOffset.top + swiperHeight\n                    ]\n                ];\n                for(var i = 0; i < swiperCoord.length; i += 1){\n                    var point = swiperCoord[i];\n                    if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n                        if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n                        inView = true;\n                    }\n                }\n                if (!inView) return undefined;\n            }\n            if (swiper.isHorizontal()) {\n                if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n                    if (e.preventDefault) e.preventDefault();\n                    else e.returnValue = false;\n                }\n                if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n                if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n            } else {\n                if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n                    if (e.preventDefault) e.preventDefault();\n                    else e.returnValue = false;\n                }\n                if (isPageDown || isArrowDown) swiper.slideNext();\n                if (isPageUp || isArrowUp) swiper.slidePrev();\n            }\n            swiper.emit(\"keyPress\", kc);\n            return undefined;\n        },\n        enable: function enable() {\n            var swiper = this;\n            var document1 = getDocument();\n            if (swiper.keyboard.enabled) return;\n            $(document1).on(\"keydown\", swiper.keyboard.handle);\n            swiper.keyboard.enabled = true;\n        },\n        disable: function disable() {\n            var swiper = this;\n            var document1 = getDocument();\n            if (!swiper.keyboard.enabled) return;\n            $(document1).off(\"keydown\", swiper.keyboard.handle);\n            swiper.keyboard.enabled = false;\n        }\n    };\n    var Keyboard$1 = {\n        name: \"keyboard\",\n        params: {\n            keyboard: {\n                enabled: false,\n                onlyInViewport: true,\n                pageUpDown: true\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                keyboard: _extends({\n                    enabled: false\n                }, Keyboard)\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                if (swiper.params.keyboard.enabled) swiper.keyboard.enable();\n            },\n            destroy: function destroy(swiper) {\n                if (swiper.keyboard.enabled) swiper.keyboard.disable();\n            }\n        }\n    };\n    /* eslint-disable consistent-return */ function isEventSupported() {\n        var document1 = getDocument();\n        var eventName = \"onwheel\";\n        var isSupported = eventName in document1;\n        if (!isSupported) {\n            var element = document1.createElement(\"div\");\n            element.setAttribute(eventName, \"return;\");\n            isSupported = typeof element[eventName] === \"function\";\n        }\n        if (!isSupported && document1.implementation && document1.implementation.hasFeature && // always returns true in newer browsers as per the standard.\n        // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n        document1.implementation.hasFeature(\"\", \"\") !== true) // This is the only way to test support for the `wheel` event in IE9+.\n        isSupported = document1.implementation.hasFeature(\"Events.wheel\", \"3.0\");\n        return isSupported;\n    }\n    var Mousewheel = {\n        lastScrollTime: now(),\n        lastEventBeforeSnap: undefined,\n        recentWheelEvents: [],\n        event: function event() {\n            var window1 = getWindow();\n            if (window1.navigator.userAgent.indexOf(\"firefox\") > -1) return \"DOMMouseScroll\";\n            return isEventSupported() ? \"wheel\" : \"mousewheel\";\n        },\n        normalize: function normalize(e) {\n            // Reasonable defaults\n            var PIXEL_STEP = 10;\n            var LINE_HEIGHT = 40;\n            var PAGE_HEIGHT = 800;\n            var sX = 0;\n            var sY = 0; // spinX, spinY\n            var pX = 0;\n            var pY = 0; // pixelX, pixelY\n            // Legacy\n            if (\"detail\" in e) sY = e.detail;\n            if (\"wheelDelta\" in e) sY = -e.wheelDelta / 120;\n            if (\"wheelDeltaY\" in e) sY = -e.wheelDeltaY / 120;\n            if (\"wheelDeltaX\" in e) sX = -e.wheelDeltaX / 120;\n             // side scrolling on FF with DOMMouseScroll\n            if (\"axis\" in e && e.axis === e.HORIZONTAL_AXIS) {\n                sX = sY;\n                sY = 0;\n            }\n            pX = sX * PIXEL_STEP;\n            pY = sY * PIXEL_STEP;\n            if (\"deltaY\" in e) pY = e.deltaY;\n            if (\"deltaX\" in e) pX = e.deltaX;\n            if (e.shiftKey && !pX) {\n                // if user scrolls with shift he wants horizontal scroll\n                pX = pY;\n                pY = 0;\n            }\n            if ((pX || pY) && e.deltaMode) {\n                if (e.deltaMode === 1) {\n                    // delta in LINE units\n                    pX *= LINE_HEIGHT;\n                    pY *= LINE_HEIGHT;\n                } else {\n                    // delta in PAGE units\n                    pX *= PAGE_HEIGHT;\n                    pY *= PAGE_HEIGHT;\n                }\n            } // Fall-back if spin cannot be determined\n            if (pX && !sX) sX = pX < 1 ? -1 : 1;\n            if (pY && !sY) sY = pY < 1 ? -1 : 1;\n            return {\n                spinX: sX,\n                spinY: sY,\n                pixelX: pX,\n                pixelY: pY\n            };\n        },\n        handleMouseEnter: function handleMouseEnter() {\n            var swiper = this;\n            if (!swiper.enabled) return;\n            swiper.mouseEntered = true;\n        },\n        handleMouseLeave: function handleMouseLeave() {\n            var swiper = this;\n            if (!swiper.enabled) return;\n            swiper.mouseEntered = false;\n        },\n        handle: function handle(event) {\n            var e = event;\n            var disableParentSwiper = true;\n            var swiper = this;\n            if (!swiper.enabled) return;\n            var params = swiper.params.mousewheel;\n            if (swiper.params.cssMode) e.preventDefault();\n            var target = swiper.$el;\n            if (swiper.params.mousewheel.eventsTarget !== \"container\") target = $(swiper.params.mousewheel.eventsTarget);\n            if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n            if (e.originalEvent) e = e.originalEvent; // jquery fix\n            var delta = 0;\n            var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n            var data = Mousewheel.normalize(e);\n            if (params.forceToAxis) {\n                if (swiper.isHorizontal()) {\n                    if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;\n                    else return true;\n                } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;\n                else return true;\n            } else delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n            if (delta === 0) return true;\n            if (params.invert) delta = -delta; // Get the scroll positions\n            var positions = swiper.getTranslate() + delta * params.sensitivity;\n            if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n            if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n            //     the disableParentSwiper will be true.\n            // When loop is false:\n            //     if the scroll positions is not on edge,\n            //     then the disableParentSwiper will be true.\n            //     if the scroll on edge positions,\n            //     then the disableParentSwiper will be false.\n            disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n            if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n            if (!swiper.params.freeMode) {\n                // Register the new event in a variable which stores the relevant data\n                var newEvent = {\n                    time: now(),\n                    delta: Math.abs(delta),\n                    direction: Math.sign(delta),\n                    raw: event\n                }; // Keep the most recent events\n                var recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n                if (recentWheelEvents.length >= 2) recentWheelEvents.shift(); // only store the last N events\n                var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n                recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n                //   If direction has changed or\n                //   if the scroll is quicker than the previous one:\n                //     Animate the slider.\n                // Else (this is the first time the wheel is moved):\n                //     Animate the slider.\n                if (prevEvent) {\n                    if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) swiper.mousewheel.animateSlider(newEvent);\n                } else swiper.mousewheel.animateSlider(newEvent);\n                 // If it's time to release the scroll:\n                //   Return now so you don't hit the preventDefault.\n                if (swiper.mousewheel.releaseScroll(newEvent)) return true;\n            } else {\n                // Freemode or scrollContainer:\n                // If we recently snapped after a momentum scroll, then ignore wheel events\n                // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n                // or if it's a new scroll (larger delta or inverse sign as last event before\n                // an end-of-momentum snap).\n                var _newEvent = {\n                    time: now(),\n                    delta: Math.abs(delta),\n                    direction: Math.sign(delta)\n                };\n                var lastEventBeforeSnap = swiper.mousewheel.lastEventBeforeSnap;\n                var ignoreWheelEvents = lastEventBeforeSnap && _newEvent.time < lastEventBeforeSnap.time + 500 && _newEvent.delta <= lastEventBeforeSnap.delta && _newEvent.direction === lastEventBeforeSnap.direction;\n                if (!ignoreWheelEvents) {\n                    swiper.mousewheel.lastEventBeforeSnap = undefined;\n                    if (swiper.params.loop) swiper.loopFix();\n                    var position = swiper.getTranslate() + delta * params.sensitivity;\n                    var wasBeginning = swiper.isBeginning;\n                    var wasEnd = swiper.isEnd;\n                    if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n                    if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n                    swiper.setTransition(0);\n                    swiper.setTranslate(position);\n                    swiper.updateProgress();\n                    swiper.updateActiveIndex();\n                    swiper.updateSlidesClasses();\n                    if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) swiper.updateSlidesClasses();\n                    if (swiper.params.freeModeSticky) {\n                        // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n                        // the end of a momentum scroll by storing recent (N=15?) wheel events.\n                        // 1. do all N events have decreasing or same (absolute value) delta?\n                        // 2. did all N events arrive in the last M (M=500?) msecs?\n                        // 3. does the earliest event have an (absolute value) delta that's\n                        //    at least P (P=1?) larger than the most recent event's delta?\n                        // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n                        // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n                        // Snap immediately and ignore remaining wheel events in this scroll.\n                        // See comment above for \"remaining wheel events in this scroll\" determination.\n                        // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n                        clearTimeout(swiper.mousewheel.timeout);\n                        swiper.mousewheel.timeout = undefined;\n                        var _recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n                        if (_recentWheelEvents.length >= 15) _recentWheelEvents.shift(); // only store the last N events\n                        var _prevEvent = _recentWheelEvents.length ? _recentWheelEvents[_recentWheelEvents.length - 1] : undefined;\n                        var firstEvent = _recentWheelEvents[0];\n                        _recentWheelEvents.push(_newEvent);\n                        if (_prevEvent && (_newEvent.delta > _prevEvent.delta || _newEvent.direction !== _prevEvent.direction)) // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n                        _recentWheelEvents.splice(0);\n                        else if (_recentWheelEvents.length >= 15 && _newEvent.time - firstEvent.time < 500 && firstEvent.delta - _newEvent.delta >= 1 && _newEvent.delta <= 6) {\n                            // We're at the end of the deceleration of a momentum scroll, so there's no need\n                            // to wait for more events. Snap ASAP on the next tick.\n                            // Also, because there's some remaining momentum we'll bias the snap in the\n                            // direction of the ongoing scroll because it's better UX for the scroll to snap\n                            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n                            // if it's already scrolled more than 20% in the current direction, keep going.\n                            var snapToThreshold = delta > 0 ? 0.8 : 0.2;\n                            swiper.mousewheel.lastEventBeforeSnap = _newEvent;\n                            _recentWheelEvents.splice(0);\n                            swiper.mousewheel.timeout = nextTick(function() {\n                                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                            }, 0); // no delay; move on next tick\n                        }\n                        if (!swiper.mousewheel.timeout) // if we get here, then we haven't detected the end of a momentum scroll, so\n                        // we'll consider a scroll \"complete\" when there haven't been any wheel events\n                        // for 500ms.\n                        swiper.mousewheel.timeout = nextTick(function() {\n                            var snapToThreshold = 0.5;\n                            swiper.mousewheel.lastEventBeforeSnap = _newEvent;\n                            _recentWheelEvents.splice(0);\n                            swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                        }, 500);\n                    } // Emit event\n                    if (!ignoreWheelEvents) swiper.emit(\"scroll\", e); // Stop autoplay\n                    if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n                    if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n                }\n            }\n            if (e.preventDefault) e.preventDefault();\n            else e.returnValue = false;\n            return false;\n        },\n        animateSlider: function animateSlider(newEvent) {\n            var swiper = this;\n            var window1 = getWindow();\n            if (this.params.mousewheel.thresholdDelta && newEvent.delta < this.params.mousewheel.thresholdDelta) // Prevent if delta of wheel scroll delta is below configured threshold\n            return false;\n            if (this.params.mousewheel.thresholdTime && now() - swiper.mousewheel.lastScrollTime < this.params.mousewheel.thresholdTime) // Prevent if time between scrolls is below configured threshold\n            return false;\n             // If the movement is NOT big enough and\n            // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n            //   Don't go any further (avoid insignificant scroll movement).\n            if (newEvent.delta >= 6 && now() - swiper.mousewheel.lastScrollTime < 60) // Return false as a default\n            return true;\n             // If user is scrolling towards the end:\n            //   If the slider hasn't hit the latest slide or\n            //   if the slider is a loop and\n            //   if the slider isn't moving right now:\n            //     Go to next slide and\n            //     emit a scroll event.\n            // Else (the user is scrolling towards the beginning) and\n            // if the slider hasn't hit the first slide or\n            // if the slider is a loop and\n            // if the slider isn't moving right now:\n            //   Go to prev slide and\n            //   emit a scroll event.\n            if (newEvent.direction < 0) {\n                if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n                    swiper.slideNext();\n                    swiper.emit(\"scroll\", newEvent.raw);\n                }\n            } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n                swiper.slidePrev();\n                swiper.emit(\"scroll\", newEvent.raw);\n            } // If you got here is because an animation has been triggered so store the current time\n            swiper.mousewheel.lastScrollTime = new window1.Date().getTime(); // Return false as a default\n            return false;\n        },\n        releaseScroll: function releaseScroll(newEvent) {\n            var swiper = this;\n            var params = swiper.params.mousewheel;\n            if (newEvent.direction < 0) {\n                if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) // Return true to animate scroll on edges\n                return true;\n            } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) // Return true to animate scroll on edges\n            return true;\n            return false;\n        },\n        enable: function enable() {\n            var swiper = this;\n            var event = Mousewheel.event();\n            if (swiper.params.cssMode) {\n                swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n                return true;\n            }\n            if (!event) return false;\n            if (swiper.mousewheel.enabled) return false;\n            var target = swiper.$el;\n            if (swiper.params.mousewheel.eventsTarget !== \"container\") target = $(swiper.params.mousewheel.eventsTarget);\n            target.on(\"mouseenter\", swiper.mousewheel.handleMouseEnter);\n            target.on(\"mouseleave\", swiper.mousewheel.handleMouseLeave);\n            target.on(event, swiper.mousewheel.handle);\n            swiper.mousewheel.enabled = true;\n            return true;\n        },\n        disable: function disable() {\n            var swiper = this;\n            var event = Mousewheel.event();\n            if (swiper.params.cssMode) {\n                swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n                return true;\n            }\n            if (!event) return false;\n            if (!swiper.mousewheel.enabled) return false;\n            var target = swiper.$el;\n            if (swiper.params.mousewheel.eventsTarget !== \"container\") target = $(swiper.params.mousewheel.eventsTarget);\n            target.off(event, swiper.mousewheel.handle);\n            swiper.mousewheel.enabled = false;\n            return true;\n        }\n    };\n    var Mousewheel$1 = {\n        name: \"mousewheel\",\n        params: {\n            mousewheel: {\n                enabled: false,\n                releaseOnEdges: false,\n                invert: false,\n                forceToAxis: false,\n                sensitivity: 1,\n                eventsTarget: \"container\",\n                thresholdDelta: null,\n                thresholdTime: null\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                mousewheel: {\n                    enabled: false,\n                    lastScrollTime: now(),\n                    lastEventBeforeSnap: undefined,\n                    recentWheelEvents: [],\n                    enable: Mousewheel.enable,\n                    disable: Mousewheel.disable,\n                    handle: Mousewheel.handle,\n                    handleMouseEnter: Mousewheel.handleMouseEnter,\n                    handleMouseLeave: Mousewheel.handleMouseLeave,\n                    animateSlider: Mousewheel.animateSlider,\n                    releaseScroll: Mousewheel.releaseScroll\n                }\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) swiper.mousewheel.disable();\n                if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n            },\n            destroy: function destroy(swiper) {\n                if (swiper.params.cssMode) swiper.mousewheel.enable();\n                if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n            }\n        }\n    };\n    var Navigation = {\n        toggleEl: function toggleEl($el, disabled) {\n            $el[disabled ? \"addClass\" : \"removeClass\"](this.params.navigation.disabledClass);\n            if ($el[0] && $el[0].tagName === \"BUTTON\") $el[0].disabled = disabled;\n        },\n        update: function update() {\n            // Update Navigation Buttons\n            var swiper = this;\n            var params = swiper.params.navigation;\n            var toggleEl = swiper.navigation.toggleEl;\n            if (swiper.params.loop) return;\n            var _swiper$navigation = swiper.navigation, $nextEl = _swiper$navigation.$nextEl, $prevEl = _swiper$navigation.$prevEl;\n            if ($prevEl && $prevEl.length > 0) {\n                if (swiper.isBeginning) toggleEl($prevEl, true);\n                else toggleEl($prevEl, false);\n                if (swiper.params.watchOverflow && swiper.enabled) $prevEl[swiper.isLocked ? \"addClass\" : \"removeClass\"](params.lockClass);\n            }\n            if ($nextEl && $nextEl.length > 0) {\n                if (swiper.isEnd) toggleEl($nextEl, true);\n                else toggleEl($nextEl, false);\n                if (swiper.params.watchOverflow && swiper.enabled) $nextEl[swiper.isLocked ? \"addClass\" : \"removeClass\"](params.lockClass);\n            }\n        },\n        onPrevClick: function onPrevClick(e) {\n            var swiper = this;\n            e.preventDefault();\n            if (swiper.isBeginning && !swiper.params.loop) return;\n            swiper.slidePrev();\n        },\n        onNextClick: function onNextClick(e) {\n            var swiper = this;\n            e.preventDefault();\n            if (swiper.isEnd && !swiper.params.loop) return;\n            swiper.slideNext();\n        },\n        init: function init() {\n            var swiper = this;\n            var params = swiper.params.navigation;\n            swiper.params.navigation = createElementIfNotDefined(swiper.$el, swiper.params.navigation, swiper.params.createElements, {\n                nextEl: \"swiper-button-next\",\n                prevEl: \"swiper-button-prev\"\n            });\n            if (!(params.nextEl || params.prevEl)) return;\n            var $nextEl;\n            var $prevEl;\n            if (params.nextEl) {\n                $nextEl = $(params.nextEl);\n                if (swiper.params.uniqueNavElements && typeof params.nextEl === \"string\" && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) $nextEl = swiper.$el.find(params.nextEl);\n            }\n            if (params.prevEl) {\n                $prevEl = $(params.prevEl);\n                if (swiper.params.uniqueNavElements && typeof params.prevEl === \"string\" && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) $prevEl = swiper.$el.find(params.prevEl);\n            }\n            if ($nextEl && $nextEl.length > 0) $nextEl.on(\"click\", swiper.navigation.onNextClick);\n            if ($prevEl && $prevEl.length > 0) $prevEl.on(\"click\", swiper.navigation.onPrevClick);\n            extend(swiper.navigation, {\n                $nextEl: $nextEl,\n                nextEl: $nextEl && $nextEl[0],\n                $prevEl: $prevEl,\n                prevEl: $prevEl && $prevEl[0]\n            });\n            if (!swiper.enabled) {\n                if ($nextEl) $nextEl.addClass(params.lockClass);\n                if ($prevEl) $prevEl.addClass(params.lockClass);\n            }\n        },\n        destroy: function destroy() {\n            var swiper = this;\n            var _swiper$navigation2 = swiper.navigation, $nextEl = _swiper$navigation2.$nextEl, $prevEl = _swiper$navigation2.$prevEl;\n            if ($nextEl && $nextEl.length) {\n                $nextEl.off(\"click\", swiper.navigation.onNextClick);\n                $nextEl.removeClass(swiper.params.navigation.disabledClass);\n            }\n            if ($prevEl && $prevEl.length) {\n                $prevEl.off(\"click\", swiper.navigation.onPrevClick);\n                $prevEl.removeClass(swiper.params.navigation.disabledClass);\n            }\n        }\n    };\n    var Navigation$1 = {\n        name: \"navigation\",\n        params: {\n            navigation: {\n                nextEl: null,\n                prevEl: null,\n                hideOnClick: false,\n                disabledClass: \"swiper-button-disabled\",\n                hiddenClass: \"swiper-button-hidden\",\n                lockClass: \"swiper-button-lock\"\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                navigation: _extends({}, Navigation)\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                swiper.navigation.init();\n                swiper.navigation.update();\n            },\n            toEdge: function toEdge(swiper) {\n                swiper.navigation.update();\n            },\n            fromEdge: function fromEdge(swiper) {\n                swiper.navigation.update();\n            },\n            destroy: function destroy(swiper) {\n                swiper.navigation.destroy();\n            },\n            \"enable disable\": function enableDisable(swiper) {\n                var _swiper$navigation3 = swiper.navigation, $nextEl = _swiper$navigation3.$nextEl, $prevEl = _swiper$navigation3.$prevEl;\n                if ($nextEl) $nextEl[swiper.enabled ? \"removeClass\" : \"addClass\"](swiper.params.navigation.lockClass);\n                if ($prevEl) $prevEl[swiper.enabled ? \"removeClass\" : \"addClass\"](swiper.params.navigation.lockClass);\n            },\n            click: function click(swiper, e) {\n                var _swiper$navigation4 = swiper.navigation, $nextEl = _swiper$navigation4.$nextEl, $prevEl = _swiper$navigation4.$prevEl;\n                var targetEl = e.target;\n                if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n                    if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n                    var isHidden;\n                    if ($nextEl) isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n                    else if ($prevEl) isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n                    if (isHidden === true) swiper.emit(\"navigationShow\");\n                    else swiper.emit(\"navigationHide\");\n                    if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n                    if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n                }\n            }\n        }\n    };\n    var Pagination = {\n        update: function update() {\n            // Render || Update Pagination bullets/items\n            var swiper = this;\n            var rtl = swiper.rtl;\n            var params = swiper.params.pagination;\n            if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n            var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n            var $el = swiper.pagination.$el; // Current/Total\n            var current;\n            var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n            if (swiper.params.loop) {\n                current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n                if (current > slidesLength - 1 - swiper.loopedSlides * 2) current -= slidesLength - swiper.loopedSlides * 2;\n                if (current > total - 1) current -= total;\n                if (current < 0 && swiper.params.paginationType !== \"bullets\") current = total + current;\n            } else if (typeof swiper.snapIndex !== \"undefined\") current = swiper.snapIndex;\n            else current = swiper.activeIndex || 0;\n             // Types\n            if (params.type === \"bullets\" && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n                var bullets = swiper.pagination.bullets;\n                var firstIndex;\n                var lastIndex;\n                var midIndex;\n                if (params.dynamicBullets) {\n                    swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? \"outerWidth\" : \"outerHeight\"](true);\n                    $el.css(swiper.isHorizontal() ? \"width\" : \"height\", swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\n                    if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n                        swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;\n                        if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n                        else if (swiper.pagination.dynamicBulletIndex < 0) swiper.pagination.dynamicBulletIndex = 0;\n                    }\n                    firstIndex = current - swiper.pagination.dynamicBulletIndex;\n                    lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n                    midIndex = (lastIndex + firstIndex) / 2;\n                }\n                bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\n                if ($el.length > 1) bullets.each(function(bullet) {\n                    var $bullet = $(bullet);\n                    var bulletIndex = $bullet.index();\n                    if (bulletIndex === current) $bullet.addClass(params.bulletActiveClass);\n                    if (params.dynamicBullets) {\n                        if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) $bullet.addClass(params.bulletActiveClass + \"-main\");\n                        if (bulletIndex === firstIndex) $bullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                        if (bulletIndex === lastIndex) $bullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n                    }\n                });\n                else {\n                    var $bullet = bullets.eq(current);\n                    var bulletIndex = $bullet.index();\n                    $bullet.addClass(params.bulletActiveClass);\n                    if (params.dynamicBullets) {\n                        var $firstDisplayedBullet = bullets.eq(firstIndex);\n                        var $lastDisplayedBullet = bullets.eq(lastIndex);\n                        for(var i = firstIndex; i <= lastIndex; i += 1)bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\n                        if (swiper.params.loop) {\n                            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n                                for(var _i = params.dynamicMainBullets; _i >= 0; _i -= 1)bullets.eq(bullets.length - _i).addClass(params.bulletActiveClass + \"-main\");\n                                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(params.bulletActiveClass + \"-prev\");\n                            } else {\n                                $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                                $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n                            }\n                        } else {\n                            $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                            $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n                        }\n                    }\n                }\n                if (params.dynamicBullets) {\n                    var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n                    var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - midIndex * swiper.pagination.bulletSize;\n                    var offsetProp = rtl ? \"right\" : \"left\";\n                    bullets.css(swiper.isHorizontal() ? offsetProp : \"top\", bulletsOffset + \"px\");\n                }\n            }\n            if (params.type === \"fraction\") {\n                $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n                $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n            }\n            if (params.type === \"progressbar\") {\n                var progressbarDirection;\n                if (params.progressbarOpposite) progressbarDirection = swiper.isHorizontal() ? \"vertical\" : \"horizontal\";\n                else progressbarDirection = swiper.isHorizontal() ? \"horizontal\" : \"vertical\";\n                var scale = (current + 1) / total;\n                var scaleX = 1;\n                var scaleY = 1;\n                if (progressbarDirection === \"horizontal\") scaleX = scale;\n                else scaleY = scale;\n                $el.find(classesToSelector(params.progressbarFillClass)).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\n            }\n            if (params.type === \"custom\" && params.renderCustom) {\n                $el.html(params.renderCustom(swiper, current + 1, total));\n                swiper.emit(\"paginationRender\", $el[0]);\n            } else swiper.emit(\"paginationUpdate\", $el[0]);\n            if (swiper.params.watchOverflow && swiper.enabled) $el[swiper.isLocked ? \"addClass\" : \"removeClass\"](params.lockClass);\n        },\n        render: function render() {\n            // Render Container\n            var swiper = this;\n            var params = swiper.params.pagination;\n            if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n            var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n            var $el = swiper.pagination.$el;\n            var paginationHTML = \"\";\n            if (params.type === \"bullets\") {\n                var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n                if (swiper.params.freeMode && !swiper.params.loop && numberOfBullets > slidesLength) numberOfBullets = slidesLength;\n                for(var i = 0; i < numberOfBullets; i += 1)if (params.renderBullet) paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n                else paginationHTML += \"<\" + params.bulletElement + ' class=\"' + params.bulletClass + '\"></' + params.bulletElement + \">\";\n                $el.html(paginationHTML);\n                swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n            }\n            if (params.type === \"fraction\") {\n                if (params.renderFraction) paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n                else paginationHTML = '<span class=\"' + params.currentClass + '\"></span>' + \" / \" + ('<span class=\"' + params.totalClass + '\"></span>');\n                $el.html(paginationHTML);\n            }\n            if (params.type === \"progressbar\") {\n                if (params.renderProgressbar) paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n                else paginationHTML = '<span class=\"' + params.progressbarFillClass + '\"></span>';\n                $el.html(paginationHTML);\n            }\n            if (params.type !== \"custom\") swiper.emit(\"paginationRender\", swiper.pagination.$el[0]);\n        },\n        init: function init() {\n            var swiper = this;\n            swiper.params.pagination = createElementIfNotDefined(swiper.$el, swiper.params.pagination, swiper.params.createElements, {\n                el: \"swiper-pagination\"\n            });\n            var params = swiper.params.pagination;\n            if (!params.el) return;\n            var $el = $(params.el);\n            if ($el.length === 0) return;\n            if (swiper.params.uniqueNavElements && typeof params.el === \"string\" && $el.length > 1) $el = swiper.$el.find(params.el);\n            if (params.type === \"bullets\" && params.clickable) $el.addClass(params.clickableClass);\n            $el.addClass(params.modifierClass + params.type);\n            if (params.type === \"bullets\" && params.dynamicBullets) {\n                $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\n                swiper.pagination.dynamicBulletIndex = 0;\n                if (params.dynamicMainBullets < 1) params.dynamicMainBullets = 1;\n            }\n            if (params.type === \"progressbar\" && params.progressbarOpposite) $el.addClass(params.progressbarOppositeClass);\n            if (params.clickable) $el.on(\"click\", classesToSelector(params.bulletClass), function onClick(e) {\n                e.preventDefault();\n                var index = $(this).index() * swiper.params.slidesPerGroup;\n                if (swiper.params.loop) index += swiper.loopedSlides;\n                swiper.slideTo(index);\n            });\n            extend(swiper.pagination, {\n                $el: $el,\n                el: $el[0]\n            });\n            if (!swiper.enabled) $el.addClass(params.lockClass);\n        },\n        destroy: function destroy() {\n            var swiper = this;\n            var params = swiper.params.pagination;\n            if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n            var $el = swiper.pagination.$el;\n            $el.removeClass(params.hiddenClass);\n            $el.removeClass(params.modifierClass + params.type);\n            if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n            if (params.clickable) $el.off(\"click\", classesToSelector(params.bulletClass));\n        }\n    };\n    var Pagination$1 = {\n        name: \"pagination\",\n        params: {\n            pagination: {\n                el: null,\n                bulletElement: \"span\",\n                clickable: false,\n                hideOnClick: false,\n                renderBullet: null,\n                renderProgressbar: null,\n                renderFraction: null,\n                renderCustom: null,\n                progressbarOpposite: false,\n                type: \"bullets\",\n                // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n                dynamicBullets: false,\n                dynamicMainBullets: 1,\n                formatFractionCurrent: function formatFractionCurrent(number) {\n                    return number;\n                },\n                formatFractionTotal: function formatFractionTotal(number) {\n                    return number;\n                },\n                bulletClass: \"swiper-pagination-bullet\",\n                bulletActiveClass: \"swiper-pagination-bullet-active\",\n                modifierClass: \"swiper-pagination-\",\n                // NEW\n                currentClass: \"swiper-pagination-current\",\n                totalClass: \"swiper-pagination-total\",\n                hiddenClass: \"swiper-pagination-hidden\",\n                progressbarFillClass: \"swiper-pagination-progressbar-fill\",\n                progressbarOppositeClass: \"swiper-pagination-progressbar-opposite\",\n                clickableClass: \"swiper-pagination-clickable\",\n                // NEW\n                lockClass: \"swiper-pagination-lock\"\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                pagination: _extends({\n                    dynamicBulletIndex: 0\n                }, Pagination)\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                swiper.pagination.init();\n                swiper.pagination.render();\n                swiper.pagination.update();\n            },\n            activeIndexChange: function activeIndexChange(swiper) {\n                if (swiper.params.loop) swiper.pagination.update();\n                else if (typeof swiper.snapIndex === \"undefined\") swiper.pagination.update();\n            },\n            snapIndexChange: function snapIndexChange(swiper) {\n                if (!swiper.params.loop) swiper.pagination.update();\n            },\n            slidesLengthChange: function slidesLengthChange(swiper) {\n                if (swiper.params.loop) {\n                    swiper.pagination.render();\n                    swiper.pagination.update();\n                }\n            },\n            snapGridLengthChange: function snapGridLengthChange(swiper) {\n                if (!swiper.params.loop) {\n                    swiper.pagination.render();\n                    swiper.pagination.update();\n                }\n            },\n            destroy: function destroy(swiper) {\n                swiper.pagination.destroy();\n            },\n            \"enable disable\": function enableDisable(swiper) {\n                var $el = swiper.pagination.$el;\n                if ($el) $el[swiper.enabled ? \"removeClass\" : \"addClass\"](swiper.params.pagination.lockClass);\n            },\n            click: function click(swiper, e) {\n                var targetEl = e.target;\n                if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n                    if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n                    var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n                    if (isHidden === true) swiper.emit(\"paginationShow\");\n                    else swiper.emit(\"paginationHide\");\n                    swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n                }\n            }\n        }\n    };\n    var Scrollbar = {\n        setTranslate: function setTranslate() {\n            var swiper = this;\n            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n            var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate, progress = swiper.progress;\n            var dragSize = scrollbar.dragSize, trackSize = scrollbar.trackSize, $dragEl = scrollbar.$dragEl, $el = scrollbar.$el;\n            var params = swiper.params.scrollbar;\n            var newSize = dragSize;\n            var newPos = (trackSize - dragSize) * progress;\n            if (rtl) {\n                newPos = -newPos;\n                if (newPos > 0) {\n                    newSize = dragSize - newPos;\n                    newPos = 0;\n                } else if (-newPos + dragSize > trackSize) newSize = trackSize + newPos;\n            } else if (newPos < 0) {\n                newSize = dragSize + newPos;\n                newPos = 0;\n            } else if (newPos + dragSize > trackSize) newSize = trackSize - newPos;\n            if (swiper.isHorizontal()) {\n                $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\n                $dragEl[0].style.width = newSize + \"px\";\n            } else {\n                $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\n                $dragEl[0].style.height = newSize + \"px\";\n            }\n            if (params.hide) {\n                clearTimeout(swiper.scrollbar.timeout);\n                $el[0].style.opacity = 1;\n                swiper.scrollbar.timeout = setTimeout(function() {\n                    $el[0].style.opacity = 0;\n                    $el.transition(400);\n                }, 1000);\n            }\n        },\n        setTransition: function setTransition(duration) {\n            var swiper = this;\n            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n            swiper.scrollbar.$dragEl.transition(duration);\n        },\n        updateSize: function updateSize() {\n            var swiper = this;\n            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n            var scrollbar = swiper.scrollbar;\n            var $dragEl = scrollbar.$dragEl, $el = scrollbar.$el;\n            $dragEl[0].style.width = \"\";\n            $dragEl[0].style.height = \"\";\n            var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n            var divider = swiper.size / swiper.virtualSize;\n            var moveDivider = divider * (trackSize / swiper.size);\n            var dragSize;\n            if (swiper.params.scrollbar.dragSize === \"auto\") dragSize = trackSize * divider;\n            else dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n            if (swiper.isHorizontal()) $dragEl[0].style.width = dragSize + \"px\";\n            else $dragEl[0].style.height = dragSize + \"px\";\n            if (divider >= 1) $el[0].style.display = \"none\";\n            else $el[0].style.display = \"\";\n            if (swiper.params.scrollbar.hide) $el[0].style.opacity = 0;\n            extend(scrollbar, {\n                trackSize: trackSize,\n                divider: divider,\n                moveDivider: moveDivider,\n                dragSize: dragSize\n            });\n            if (swiper.params.watchOverflow && swiper.enabled) scrollbar.$el[swiper.isLocked ? \"addClass\" : \"removeClass\"](swiper.params.scrollbar.lockClass);\n        },\n        getPointerPosition: function getPointerPosition(e) {\n            var swiper = this;\n            if (swiper.isHorizontal()) return e.type === \"touchstart\" || e.type === \"touchmove\" ? e.targetTouches[0].clientX : e.clientX;\n            return e.type === \"touchstart\" || e.type === \"touchmove\" ? e.targetTouches[0].clientY : e.clientY;\n        },\n        setDragPosition: function setDragPosition(e) {\n            var swiper = this;\n            var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate;\n            var $el = scrollbar.$el, dragSize = scrollbar.dragSize, trackSize = scrollbar.trackSize, dragStartPos = scrollbar.dragStartPos;\n            var positionRatio;\n            positionRatio = (scrollbar.getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? \"left\" : \"top\"] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n            positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n            if (rtl) positionRatio = 1 - positionRatio;\n            var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n            swiper.updateProgress(position);\n            swiper.setTranslate(position);\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        },\n        onDragStart: function onDragStart(e) {\n            var swiper = this;\n            var params = swiper.params.scrollbar;\n            var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\n            var $el = scrollbar.$el, $dragEl = scrollbar.$dragEl;\n            swiper.scrollbar.isTouched = true;\n            swiper.scrollbar.dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? \"left\" : \"top\"] : null;\n            e.preventDefault();\n            e.stopPropagation();\n            $wrapperEl.transition(100);\n            $dragEl.transition(100);\n            scrollbar.setDragPosition(e);\n            clearTimeout(swiper.scrollbar.dragTimeout);\n            $el.transition(0);\n            if (params.hide) $el.css(\"opacity\", 1);\n            if (swiper.params.cssMode) swiper.$wrapperEl.css(\"scroll-snap-type\", \"none\");\n            swiper.emit(\"scrollbarDragStart\", e);\n        },\n        onDragMove: function onDragMove(e) {\n            var swiper = this;\n            var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\n            var $el = scrollbar.$el, $dragEl = scrollbar.$dragEl;\n            if (!swiper.scrollbar.isTouched) return;\n            if (e.preventDefault) e.preventDefault();\n            else e.returnValue = false;\n            scrollbar.setDragPosition(e);\n            $wrapperEl.transition(0);\n            $el.transition(0);\n            $dragEl.transition(0);\n            swiper.emit(\"scrollbarDragMove\", e);\n        },\n        onDragEnd: function onDragEnd(e) {\n            var swiper = this;\n            var params = swiper.params.scrollbar;\n            var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\n            var $el = scrollbar.$el;\n            if (!swiper.scrollbar.isTouched) return;\n            swiper.scrollbar.isTouched = false;\n            if (swiper.params.cssMode) {\n                swiper.$wrapperEl.css(\"scroll-snap-type\", \"\");\n                $wrapperEl.transition(\"\");\n            }\n            if (params.hide) {\n                clearTimeout(swiper.scrollbar.dragTimeout);\n                swiper.scrollbar.dragTimeout = nextTick(function() {\n                    $el.css(\"opacity\", 0);\n                    $el.transition(400);\n                }, 1000);\n            }\n            swiper.emit(\"scrollbarDragEnd\", e);\n            if (params.snapOnRelease) swiper.slideToClosest();\n        },\n        enableDraggable: function enableDraggable() {\n            var swiper = this;\n            if (!swiper.params.scrollbar.el) return;\n            var document1 = getDocument();\n            var scrollbar = swiper.scrollbar, touchEventsTouch = swiper.touchEventsTouch, touchEventsDesktop = swiper.touchEventsDesktop, params = swiper.params, support = swiper.support;\n            var $el = scrollbar.$el;\n            var target = $el[0];\n            var activeListener = support.passiveListener && params.passiveListeners ? {\n                passive: false,\n                capture: false\n            } : false;\n            var passiveListener = support.passiveListener && params.passiveListeners ? {\n                passive: true,\n                capture: false\n            } : false;\n            if (!target) return;\n            if (!support.touch) {\n                target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n                document1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n                document1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n            } else {\n                target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n                target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n                target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n            }\n        },\n        disableDraggable: function disableDraggable() {\n            var swiper = this;\n            if (!swiper.params.scrollbar.el) return;\n            var document1 = getDocument();\n            var scrollbar = swiper.scrollbar, touchEventsTouch = swiper.touchEventsTouch, touchEventsDesktop = swiper.touchEventsDesktop, params = swiper.params, support = swiper.support;\n            var $el = scrollbar.$el;\n            var target = $el[0];\n            var activeListener = support.passiveListener && params.passiveListeners ? {\n                passive: false,\n                capture: false\n            } : false;\n            var passiveListener = support.passiveListener && params.passiveListeners ? {\n                passive: true,\n                capture: false\n            } : false;\n            if (!target) return;\n            if (!support.touch) {\n                target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n                document1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n                document1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n            } else {\n                target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n                target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n                target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n            }\n        },\n        init: function init() {\n            var swiper = this;\n            var scrollbar = swiper.scrollbar, $swiperEl = swiper.$el;\n            swiper.params.scrollbar = createElementIfNotDefined($swiperEl, swiper.params.scrollbar, swiper.params.createElements, {\n                el: \"swiper-scrollbar\"\n            });\n            var params = swiper.params.scrollbar;\n            if (!params.el) return;\n            var $el = $(params.el);\n            if (swiper.params.uniqueNavElements && typeof params.el === \"string\" && $el.length > 1 && $swiperEl.find(params.el).length === 1) $el = $swiperEl.find(params.el);\n            var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\n            if ($dragEl.length === 0) {\n                $dragEl = $('<div class=\"' + swiper.params.scrollbar.dragClass + '\"></div>');\n                $el.append($dragEl);\n            }\n            extend(scrollbar, {\n                $el: $el,\n                el: $el[0],\n                $dragEl: $dragEl,\n                dragEl: $dragEl[0]\n            });\n            if (params.draggable) scrollbar.enableDraggable();\n            if ($el) $el[swiper.enabled ? \"removeClass\" : \"addClass\"](swiper.params.scrollbar.lockClass);\n        },\n        destroy: function destroy() {\n            var swiper = this;\n            swiper.scrollbar.disableDraggable();\n        }\n    };\n    var Scrollbar$1 = {\n        name: \"scrollbar\",\n        params: {\n            scrollbar: {\n                el: null,\n                dragSize: \"auto\",\n                hide: false,\n                draggable: false,\n                snapOnRelease: true,\n                lockClass: \"swiper-scrollbar-lock\",\n                dragClass: \"swiper-scrollbar-drag\"\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                scrollbar: _extends({\n                    isTouched: false,\n                    timeout: null,\n                    dragTimeout: null\n                }, Scrollbar)\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                swiper.scrollbar.init();\n                swiper.scrollbar.updateSize();\n                swiper.scrollbar.setTranslate();\n            },\n            update: function update(swiper) {\n                swiper.scrollbar.updateSize();\n            },\n            resize: function resize(swiper) {\n                swiper.scrollbar.updateSize();\n            },\n            observerUpdate: function observerUpdate(swiper) {\n                swiper.scrollbar.updateSize();\n            },\n            setTranslate: function setTranslate(swiper) {\n                swiper.scrollbar.setTranslate();\n            },\n            setTransition: function setTransition(swiper, duration) {\n                swiper.scrollbar.setTransition(duration);\n            },\n            \"enable disable\": function enableDisable(swiper) {\n                var $el = swiper.scrollbar.$el;\n                if ($el) $el[swiper.enabled ? \"removeClass\" : \"addClass\"](swiper.params.scrollbar.lockClass);\n            },\n            destroy: function destroy(swiper) {\n                swiper.scrollbar.destroy();\n            }\n        }\n    };\n    var Parallax = {\n        setTransform: function setTransform(el, progress) {\n            var swiper = this;\n            var rtl = swiper.rtl;\n            var $el = $(el);\n            var rtlFactor = rtl ? -1 : 1;\n            var p = $el.attr(\"data-swiper-parallax\") || \"0\";\n            var x = $el.attr(\"data-swiper-parallax-x\");\n            var y = $el.attr(\"data-swiper-parallax-y\");\n            var scale = $el.attr(\"data-swiper-parallax-scale\");\n            var opacity = $el.attr(\"data-swiper-parallax-opacity\");\n            if (x || y) {\n                x = x || \"0\";\n                y = y || \"0\";\n            } else if (swiper.isHorizontal()) {\n                x = p;\n                y = \"0\";\n            } else {\n                y = p;\n                x = \"0\";\n            }\n            if (x.indexOf(\"%\") >= 0) x = parseInt(x, 10) * progress * rtlFactor + \"%\";\n            else x = x * progress * rtlFactor + \"px\";\n            if (y.indexOf(\"%\") >= 0) y = parseInt(y, 10) * progress + \"%\";\n            else y = y * progress + \"px\";\n            if (typeof opacity !== \"undefined\" && opacity !== null) {\n                var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n                $el[0].style.opacity = currentOpacity;\n            }\n            if (typeof scale === \"undefined\" || scale === null) $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px)\");\n            else {\n                var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n                $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\");\n            }\n        },\n        setTranslate: function setTranslate() {\n            var swiper = this;\n            var $el = swiper.$el, slides = swiper.slides, progress = swiper.progress, snapGrid = swiper.snapGrid;\n            $el.children(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").each(function(el) {\n                swiper.parallax.setTransform(el, progress);\n            });\n            slides.each(function(slideEl, slideIndex) {\n                var slideProgress = slideEl.progress;\n                if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== \"auto\") slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n                slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n                $(slideEl).find(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").each(function(el) {\n                    swiper.parallax.setTransform(el, slideProgress);\n                });\n            });\n        },\n        setTransition: function setTransition(duration) {\n            if (duration === void 0) duration = this.params.speed;\n            var swiper = this;\n            var $el = swiper.$el;\n            $el.find(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").each(function(parallaxEl) {\n                var $parallaxEl = $(parallaxEl);\n                var parallaxDuration = parseInt($parallaxEl.attr(\"data-swiper-parallax-duration\"), 10) || duration;\n                if (duration === 0) parallaxDuration = 0;\n                $parallaxEl.transition(parallaxDuration);\n            });\n        }\n    };\n    var Parallax$1 = {\n        name: \"parallax\",\n        params: {\n            parallax: {\n                enabled: false\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                parallax: _extends({}, Parallax)\n            });\n        },\n        on: {\n            beforeInit: function beforeInit(swiper) {\n                if (!swiper.params.parallax.enabled) return;\n                swiper.params.watchSlidesProgress = true;\n                swiper.originalParams.watchSlidesProgress = true;\n            },\n            init: function init(swiper) {\n                if (!swiper.params.parallax.enabled) return;\n                swiper.parallax.setTranslate();\n            },\n            setTranslate: function setTranslate(swiper) {\n                if (!swiper.params.parallax.enabled) return;\n                swiper.parallax.setTranslate();\n            },\n            setTransition: function setTransition(swiper, duration) {\n                if (!swiper.params.parallax.enabled) return;\n                swiper.parallax.setTransition(duration);\n            }\n        }\n    };\n    var Zoom = {\n        // Calc Scale From Multi-touches\n        getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n            if (e.targetTouches.length < 2) return 1;\n            var x1 = e.targetTouches[0].pageX;\n            var y1 = e.targetTouches[0].pageY;\n            var x2 = e.targetTouches[1].pageX;\n            var y2 = e.targetTouches[1].pageY;\n            var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n            return distance;\n        },\n        // Events\n        onGestureStart: function onGestureStart(e) {\n            var swiper = this;\n            var support = swiper.support;\n            var params = swiper.params.zoom;\n            var zoom = swiper.zoom;\n            var gesture = zoom.gesture;\n            zoom.fakeGestureTouched = false;\n            zoom.fakeGestureMoved = false;\n            if (!support.gestures) {\n                if (e.type !== \"touchstart\" || e.type === \"touchstart\" && e.targetTouches.length < 2) return;\n                zoom.fakeGestureTouched = true;\n                gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n            }\n            if (!gesture.$slideEl || !gesture.$slideEl.length) {\n                gesture.$slideEl = $(e.target).closest(\".\" + swiper.params.slideClass);\n                if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n                gesture.$imageEl = gesture.$slideEl.find(\"img, svg, canvas, picture, .swiper-zoom-target\");\n                gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n                gesture.maxRatio = gesture.$imageWrapEl.attr(\"data-swiper-zoom\") || params.maxRatio;\n                if (gesture.$imageWrapEl.length === 0) {\n                    gesture.$imageEl = undefined;\n                    return;\n                }\n            }\n            if (gesture.$imageEl) gesture.$imageEl.transition(0);\n            swiper.zoom.isScaling = true;\n        },\n        onGestureChange: function onGestureChange(e) {\n            var swiper = this;\n            var support = swiper.support;\n            var params = swiper.params.zoom;\n            var zoom = swiper.zoom;\n            var gesture = zoom.gesture;\n            if (!support.gestures) {\n                if (e.type !== \"touchmove\" || e.type === \"touchmove\" && e.targetTouches.length < 2) return;\n                zoom.fakeGestureMoved = true;\n                gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n            }\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n                if (e.type === \"gesturechange\") zoom.onGestureStart(e);\n                return;\n            }\n            if (support.gestures) zoom.scale = e.scale * zoom.currentScale;\n            else zoom.scale = gesture.scaleMove / gesture.scaleStart * zoom.currentScale;\n            if (zoom.scale > gesture.maxRatio) zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);\n            if (zoom.scale < params.minRatio) zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);\n            gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n        },\n        onGestureEnd: function onGestureEnd(e) {\n            var swiper = this;\n            var device = swiper.device;\n            var support = swiper.support;\n            var params = swiper.params.zoom;\n            var zoom = swiper.zoom;\n            var gesture = zoom.gesture;\n            if (!support.gestures) {\n                if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) return;\n                if (e.type !== \"touchend\" || e.type === \"touchend\" && e.changedTouches.length < 2 && !device.android) return;\n                zoom.fakeGestureTouched = false;\n                zoom.fakeGestureMoved = false;\n            }\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n            zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n            gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n            zoom.currentScale = zoom.scale;\n            zoom.isScaling = false;\n            if (zoom.scale === 1) gesture.$slideEl = undefined;\n        },\n        onTouchStart: function onTouchStart(e) {\n            var swiper = this;\n            var device = swiper.device;\n            var zoom = swiper.zoom;\n            var gesture = zoom.gesture, image = zoom.image;\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n            if (image.isTouched) return;\n            if (device.android && e.cancelable) e.preventDefault();\n            image.isTouched = true;\n            image.touchesStart.x = e.type === \"touchstart\" ? e.targetTouches[0].pageX : e.pageX;\n            image.touchesStart.y = e.type === \"touchstart\" ? e.targetTouches[0].pageY : e.pageY;\n        },\n        onTouchMove: function onTouchMove(e) {\n            var swiper = this;\n            var zoom = swiper.zoom;\n            var gesture = zoom.gesture, image = zoom.image, velocity = zoom.velocity;\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n            swiper.allowClick = false;\n            if (!image.isTouched || !gesture.$slideEl) return;\n            if (!image.isMoved) {\n                image.width = gesture.$imageEl[0].offsetWidth;\n                image.height = gesture.$imageEl[0].offsetHeight;\n                image.startX = getTranslate(gesture.$imageWrapEl[0], \"x\") || 0;\n                image.startY = getTranslate(gesture.$imageWrapEl[0], \"y\") || 0;\n                gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n                gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n                gesture.$imageWrapEl.transition(0);\n            } // Define if we need image drag\n            var scaledWidth = image.width * zoom.scale;\n            var scaledHeight = image.height * zoom.scale;\n            if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n            image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n            image.maxX = -image.minX;\n            image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n            image.maxY = -image.minY;\n            image.touchesCurrent.x = e.type === \"touchmove\" ? e.targetTouches[0].pageX : e.pageX;\n            image.touchesCurrent.y = e.type === \"touchmove\" ? e.targetTouches[0].pageY : e.pageY;\n            if (!image.isMoved && !zoom.isScaling) {\n                if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n                    image.isTouched = false;\n                    return;\n                }\n                if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n                    image.isTouched = false;\n                    return;\n                }\n            }\n            if (e.cancelable) e.preventDefault();\n            e.stopPropagation();\n            image.isMoved = true;\n            image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n            image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n            if (image.currentX < image.minX) image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);\n            if (image.currentX > image.maxX) image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);\n            if (image.currentY < image.minY) image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);\n            if (image.currentY > image.maxY) image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);\n             // Velocity\n            if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n            if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n            if (!velocity.prevTime) velocity.prevTime = Date.now();\n            velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n            velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n            if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n            if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n            velocity.prevPositionX = image.touchesCurrent.x;\n            velocity.prevPositionY = image.touchesCurrent.y;\n            velocity.prevTime = Date.now();\n            gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n        },\n        onTouchEnd: function onTouchEnd() {\n            var swiper = this;\n            var zoom = swiper.zoom;\n            var gesture = zoom.gesture, image = zoom.image, velocity = zoom.velocity;\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n            if (!image.isTouched || !image.isMoved) {\n                image.isTouched = false;\n                image.isMoved = false;\n                return;\n            }\n            image.isTouched = false;\n            image.isMoved = false;\n            var momentumDurationX = 300;\n            var momentumDurationY = 300;\n            var momentumDistanceX = velocity.x * momentumDurationX;\n            var newPositionX = image.currentX + momentumDistanceX;\n            var momentumDistanceY = velocity.y * momentumDurationY;\n            var newPositionY = image.currentY + momentumDistanceY; // Fix duration\n            if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n            if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n            var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n            image.currentX = newPositionX;\n            image.currentY = newPositionY; // Define if we need image drag\n            var scaledWidth = image.width * zoom.scale;\n            var scaledHeight = image.height * zoom.scale;\n            image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n            image.maxX = -image.minX;\n            image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n            image.maxY = -image.minY;\n            image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n            image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n            gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n        },\n        onTransitionEnd: function onTransitionEnd() {\n            var swiper = this;\n            var zoom = swiper.zoom;\n            var gesture = zoom.gesture;\n            if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n                if (gesture.$imageEl) gesture.$imageEl.transform(\"translate3d(0,0,0) scale(1)\");\n                if (gesture.$imageWrapEl) gesture.$imageWrapEl.transform(\"translate3d(0,0,0)\");\n                zoom.scale = 1;\n                zoom.currentScale = 1;\n                gesture.$slideEl = undefined;\n                gesture.$imageEl = undefined;\n                gesture.$imageWrapEl = undefined;\n            }\n        },\n        // Toggle Zoom\n        toggle: function toggle(e) {\n            var swiper = this;\n            var zoom = swiper.zoom;\n            if (zoom.scale && zoom.scale !== 1) // Zoom Out\n            zoom.out();\n            else // Zoom In\n            zoom.in(e);\n        },\n        in: function _in(e) {\n            var swiper = this;\n            var window1 = getWindow();\n            var zoom = swiper.zoom;\n            var params = swiper.params.zoom;\n            var gesture = zoom.gesture, image = zoom.image;\n            if (!gesture.$slideEl) {\n                if (e && e.target) gesture.$slideEl = $(e.target).closest(\".\" + swiper.params.slideClass);\n                if (!gesture.$slideEl) {\n                    if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) gesture.$slideEl = swiper.$wrapperEl.children(\".\" + swiper.params.slideActiveClass);\n                    else gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n                }\n                gesture.$imageEl = gesture.$slideEl.find(\"img, svg, canvas, picture, .swiper-zoom-target\");\n                gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n            }\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n            gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\n            var touchX;\n            var touchY;\n            var offsetX;\n            var offsetY;\n            var diffX;\n            var diffY;\n            var translateX;\n            var translateY;\n            var imageWidth;\n            var imageHeight;\n            var scaledWidth;\n            var scaledHeight;\n            var translateMinX;\n            var translateMinY;\n            var translateMaxX;\n            var translateMaxY;\n            var slideWidth;\n            var slideHeight;\n            if (typeof image.touchesStart.x === \"undefined\" && e) {\n                touchX = e.type === \"touchend\" ? e.changedTouches[0].pageX : e.pageX;\n                touchY = e.type === \"touchend\" ? e.changedTouches[0].pageY : e.pageY;\n            } else {\n                touchX = image.touchesStart.x;\n                touchY = image.touchesStart.y;\n            }\n            zoom.scale = gesture.$imageWrapEl.attr(\"data-swiper-zoom\") || params.maxRatio;\n            zoom.currentScale = gesture.$imageWrapEl.attr(\"data-swiper-zoom\") || params.maxRatio;\n            if (e) {\n                slideWidth = gesture.$slideEl[0].offsetWidth;\n                slideHeight = gesture.$slideEl[0].offsetHeight;\n                offsetX = gesture.$slideEl.offset().left + window1.scrollX;\n                offsetY = gesture.$slideEl.offset().top + window1.scrollY;\n                diffX = offsetX + slideWidth / 2 - touchX;\n                diffY = offsetY + slideHeight / 2 - touchY;\n                imageWidth = gesture.$imageEl[0].offsetWidth;\n                imageHeight = gesture.$imageEl[0].offsetHeight;\n                scaledWidth = imageWidth * zoom.scale;\n                scaledHeight = imageHeight * zoom.scale;\n                translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n                translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n                translateMaxX = -translateMinX;\n                translateMaxY = -translateMinY;\n                translateX = diffX * zoom.scale;\n                translateY = diffY * zoom.scale;\n                if (translateX < translateMinX) translateX = translateMinX;\n                if (translateX > translateMaxX) translateX = translateMaxX;\n                if (translateY < translateMinY) translateY = translateMinY;\n                if (translateY > translateMaxY) translateY = translateMaxY;\n            } else {\n                translateX = 0;\n                translateY = 0;\n            }\n            gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\n            gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n        },\n        out: function out() {\n            var swiper = this;\n            var zoom = swiper.zoom;\n            var params = swiper.params.zoom;\n            var gesture = zoom.gesture;\n            if (!gesture.$slideEl) {\n                if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) gesture.$slideEl = swiper.$wrapperEl.children(\".\" + swiper.params.slideActiveClass);\n                else gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n                gesture.$imageEl = gesture.$slideEl.find(\"img, svg, canvas, picture, .swiper-zoom-target\");\n                gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n            }\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n            zoom.scale = 1;\n            zoom.currentScale = 1;\n            gesture.$imageWrapEl.transition(300).transform(\"translate3d(0,0,0)\");\n            gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(1)\");\n            gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\n            gesture.$slideEl = undefined;\n        },\n        toggleGestures: function toggleGestures(method) {\n            var swiper = this;\n            var zoom = swiper.zoom;\n            var selector = zoom.slideSelector, passive = zoom.passiveListener;\n            swiper.$wrapperEl[method](\"gesturestart\", selector, zoom.onGestureStart, passive);\n            swiper.$wrapperEl[method](\"gesturechange\", selector, zoom.onGestureChange, passive);\n            swiper.$wrapperEl[method](\"gestureend\", selector, zoom.onGestureEnd, passive);\n        },\n        enableGestures: function enableGestures() {\n            if (this.zoom.gesturesEnabled) return;\n            this.zoom.gesturesEnabled = true;\n            this.zoom.toggleGestures(\"on\");\n        },\n        disableGestures: function disableGestures() {\n            if (!this.zoom.gesturesEnabled) return;\n            this.zoom.gesturesEnabled = false;\n            this.zoom.toggleGestures(\"off\");\n        },\n        // Attach/Detach Events\n        enable: function enable() {\n            var swiper = this;\n            var support = swiper.support;\n            var zoom = swiper.zoom;\n            if (zoom.enabled) return;\n            zoom.enabled = true;\n            var passiveListener = swiper.touchEvents.start === \"touchstart\" && support.passiveListener && swiper.params.passiveListeners ? {\n                passive: true,\n                capture: false\n            } : false;\n            var activeListenerWithCapture = support.passiveListener ? {\n                passive: false,\n                capture: true\n            } : true;\n            var slideSelector = \".\" + swiper.params.slideClass;\n            swiper.zoom.passiveListener = passiveListener;\n            swiper.zoom.slideSelector = slideSelector; // Scale image\n            if (support.gestures) {\n                swiper.$wrapperEl.on(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\n                swiper.$wrapperEl.on(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\n            } else if (swiper.touchEvents.start === \"touchstart\") {\n                swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n                swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n                swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n                if (swiper.touchEvents.cancel) swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n            } // Move image\n            swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n        },\n        disable: function disable() {\n            var swiper = this;\n            var zoom = swiper.zoom;\n            if (!zoom.enabled) return;\n            var support = swiper.support;\n            swiper.zoom.enabled = false;\n            var passiveListener = swiper.touchEvents.start === \"touchstart\" && support.passiveListener && swiper.params.passiveListeners ? {\n                passive: true,\n                capture: false\n            } : false;\n            var activeListenerWithCapture = support.passiveListener ? {\n                passive: false,\n                capture: true\n            } : true;\n            var slideSelector = \".\" + swiper.params.slideClass; // Scale image\n            if (support.gestures) {\n                swiper.$wrapperEl.off(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\n                swiper.$wrapperEl.off(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\n            } else if (swiper.touchEvents.start === \"touchstart\") {\n                swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n                swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n                swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n                if (swiper.touchEvents.cancel) swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n            } // Move image\n            swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n        }\n    };\n    var Zoom$1 = {\n        name: \"zoom\",\n        params: {\n            zoom: {\n                enabled: false,\n                maxRatio: 3,\n                minRatio: 1,\n                toggle: true,\n                containerClass: \"swiper-zoom-container\",\n                zoomedSlideClass: \"swiper-slide-zoomed\"\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                zoom: _extends({\n                    enabled: false,\n                    scale: 1,\n                    currentScale: 1,\n                    isScaling: false,\n                    gesture: {\n                        $slideEl: undefined,\n                        slideWidth: undefined,\n                        slideHeight: undefined,\n                        $imageEl: undefined,\n                        $imageWrapEl: undefined,\n                        maxRatio: 3\n                    },\n                    image: {\n                        isTouched: undefined,\n                        isMoved: undefined,\n                        currentX: undefined,\n                        currentY: undefined,\n                        minX: undefined,\n                        minY: undefined,\n                        maxX: undefined,\n                        maxY: undefined,\n                        width: undefined,\n                        height: undefined,\n                        startX: undefined,\n                        startY: undefined,\n                        touchesStart: {},\n                        touchesCurrent: {}\n                    },\n                    velocity: {\n                        x: undefined,\n                        y: undefined,\n                        prevPositionX: undefined,\n                        prevPositionY: undefined,\n                        prevTime: undefined\n                    }\n                }, Zoom)\n            });\n            var scale = 1;\n            Object.defineProperty(swiper.zoom, \"scale\", {\n                get: function get() {\n                    return scale;\n                },\n                set: function set(value) {\n                    if (scale !== value) {\n                        var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n                        var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n                        swiper.emit(\"zoomChange\", value, imageEl, slideEl);\n                    }\n                    scale = value;\n                }\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                if (swiper.params.zoom.enabled) swiper.zoom.enable();\n            },\n            destroy: function destroy(swiper) {\n                swiper.zoom.disable();\n            },\n            touchStart: function touchStart(swiper, e) {\n                if (!swiper.zoom.enabled) return;\n                swiper.zoom.onTouchStart(e);\n            },\n            touchEnd: function touchEnd(swiper, e) {\n                if (!swiper.zoom.enabled) return;\n                swiper.zoom.onTouchEnd(e);\n            },\n            doubleTap: function doubleTap(swiper, e) {\n                if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) swiper.zoom.toggle(e);\n            },\n            transitionEnd: function transitionEnd(swiper) {\n                if (swiper.zoom.enabled && swiper.params.zoom.enabled) swiper.zoom.onTransitionEnd();\n            },\n            slideChange: function slideChange(swiper) {\n                if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) swiper.zoom.onTransitionEnd();\n            }\n        }\n    };\n    var Lazy = {\n        loadInSlide: function loadInSlide(index, loadInDuplicate) {\n            if (loadInDuplicate === void 0) loadInDuplicate = true;\n            var swiper = this;\n            var params = swiper.params.lazy;\n            if (typeof index === \"undefined\") return;\n            if (swiper.slides.length === 0) return;\n            var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n            var $slideEl = isVirtual ? swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + '[data-swiper-slide-index=\"' + index + '\"]') : swiper.slides.eq(index);\n            var $images = $slideEl.find(\".\" + params.elementClass + \":not(.\" + params.loadedClass + \"):not(.\" + params.loadingClass + \")\");\n            if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) $images.push($slideEl[0]);\n            if ($images.length === 0) return;\n            $images.each(function(imageEl) {\n                var $imageEl = $(imageEl);\n                $imageEl.addClass(params.loadingClass);\n                var background = $imageEl.attr(\"data-background\");\n                var src = $imageEl.attr(\"data-src\");\n                var srcset = $imageEl.attr(\"data-srcset\");\n                var sizes = $imageEl.attr(\"data-sizes\");\n                var $pictureEl = $imageEl.parent(\"picture\");\n                swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function() {\n                    if (typeof swiper === \"undefined\" || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n                    if (background) {\n                        $imageEl.css(\"background-image\", 'url(\"' + background + '\")');\n                        $imageEl.removeAttr(\"data-background\");\n                    } else {\n                        if (srcset) {\n                            $imageEl.attr(\"srcset\", srcset);\n                            $imageEl.removeAttr(\"data-srcset\");\n                        }\n                        if (sizes) {\n                            $imageEl.attr(\"sizes\", sizes);\n                            $imageEl.removeAttr(\"data-sizes\");\n                        }\n                        if ($pictureEl.length) $pictureEl.children(\"source\").each(function(sourceEl) {\n                            var $source = $(sourceEl);\n                            if ($source.attr(\"data-srcset\")) {\n                                $source.attr(\"srcset\", $source.attr(\"data-srcset\"));\n                                $source.removeAttr(\"data-srcset\");\n                            }\n                        });\n                        if (src) {\n                            $imageEl.attr(\"src\", src);\n                            $imageEl.removeAttr(\"data-src\");\n                        }\n                    }\n                    $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n                    $slideEl.find(\".\" + params.preloaderClass).remove();\n                    if (swiper.params.loop && loadInDuplicate) {\n                        var slideOriginalIndex = $slideEl.attr(\"data-swiper-slide-index\");\n                        if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n                            var originalSlide = swiper.$wrapperEl.children('[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]:not(.' + swiper.params.slideDuplicateClass + \")\");\n                            swiper.lazy.loadInSlide(originalSlide.index(), false);\n                        } else {\n                            var duplicatedSlide = swiper.$wrapperEl.children(\".\" + swiper.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]');\n                            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n                        }\n                    }\n                    swiper.emit(\"lazyImageReady\", $slideEl[0], $imageEl[0]);\n                    if (swiper.params.autoHeight) swiper.updateAutoHeight();\n                });\n                swiper.emit(\"lazyImageLoad\", $slideEl[0], $imageEl[0]);\n            });\n        },\n        load: function load() {\n            var swiper = this;\n            var $wrapperEl = swiper.$wrapperEl, swiperParams = swiper.params, slides = swiper.slides, activeIndex = swiper.activeIndex;\n            var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n            var params = swiperParams.lazy;\n            var slidesPerView = swiperParams.slidesPerView;\n            if (slidesPerView === \"auto\") slidesPerView = 0;\n            function slideExist(index) {\n                if (isVirtual) {\n                    if ($wrapperEl.children(\".\" + swiperParams.slideClass + '[data-swiper-slide-index=\"' + index + '\"]').length) return true;\n                } else if (slides[index]) return true;\n                return false;\n            }\n            function slideIndex(slideEl) {\n                if (isVirtual) return $(slideEl).attr(\"data-swiper-slide-index\");\n                return $(slideEl).index();\n            }\n            if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n            if (swiper.params.watchSlidesVisibility) $wrapperEl.children(\".\" + swiperParams.slideVisibleClass).each(function(slideEl) {\n                var index = isVirtual ? $(slideEl).attr(\"data-swiper-slide-index\") : $(slideEl).index();\n                swiper.lazy.loadInSlide(index);\n            });\n            else if (slidesPerView > 1) {\n                for(var i = activeIndex; i < activeIndex + slidesPerView; i += 1)if (slideExist(i)) swiper.lazy.loadInSlide(i);\n            } else swiper.lazy.loadInSlide(activeIndex);\n            if (params.loadPrevNext) {\n                if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n                    var amount = params.loadPrevNextAmount;\n                    var spv = slidesPerView;\n                    var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n                    var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n                    for(var _i = activeIndex + slidesPerView; _i < maxIndex; _i += 1)if (slideExist(_i)) swiper.lazy.loadInSlide(_i);\n                     // Prev Slides\n                    for(var _i2 = minIndex; _i2 < activeIndex; _i2 += 1)if (slideExist(_i2)) swiper.lazy.loadInSlide(_i2);\n                } else {\n                    var nextSlide = $wrapperEl.children(\".\" + swiperParams.slideNextClass);\n                    if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n                    var prevSlide = $wrapperEl.children(\".\" + swiperParams.slidePrevClass);\n                    if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n                }\n            }\n        },\n        checkInViewOnLoad: function checkInViewOnLoad() {\n            var window1 = getWindow();\n            var swiper = this;\n            if (!swiper || swiper.destroyed) return;\n            var $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window1);\n            var isWindow = $scrollElement[0] === window1;\n            var scrollElementWidth = isWindow ? window1.innerWidth : $scrollElement[0].offsetWidth;\n            var scrollElementHeight = isWindow ? window1.innerHeight : $scrollElement[0].offsetHeight;\n            var swiperOffset = swiper.$el.offset();\n            var rtl = swiper.rtlTranslate;\n            var inView = false;\n            if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n            var swiperCoord = [\n                [\n                    swiperOffset.left,\n                    swiperOffset.top\n                ],\n                [\n                    swiperOffset.left + swiper.width,\n                    swiperOffset.top\n                ],\n                [\n                    swiperOffset.left,\n                    swiperOffset.top + swiper.height\n                ],\n                [\n                    swiperOffset.left + swiper.width,\n                    swiperOffset.top + swiper.height\n                ]\n            ];\n            for(var i = 0; i < swiperCoord.length; i += 1){\n                var point = swiperCoord[i];\n                if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n                    if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n                    inView = true;\n                }\n            }\n            var passiveListener = swiper.touchEvents.start === \"touchstart\" && swiper.support.passiveListener && swiper.params.passiveListeners ? {\n                passive: true,\n                capture: false\n            } : false;\n            if (inView) {\n                swiper.lazy.load();\n                $scrollElement.off(\"scroll\", swiper.lazy.checkInViewOnLoad, passiveListener);\n            } else if (!swiper.lazy.scrollHandlerAttached) {\n                swiper.lazy.scrollHandlerAttached = true;\n                $scrollElement.on(\"scroll\", swiper.lazy.checkInViewOnLoad, passiveListener);\n            }\n        }\n    };\n    var Lazy$1 = {\n        name: \"lazy\",\n        params: {\n            lazy: {\n                checkInView: false,\n                enabled: false,\n                loadPrevNext: false,\n                loadPrevNextAmount: 1,\n                loadOnTransitionStart: false,\n                scrollingElement: \"\",\n                elementClass: \"swiper-lazy\",\n                loadingClass: \"swiper-lazy-loading\",\n                loadedClass: \"swiper-lazy-loaded\",\n                preloaderClass: \"swiper-lazy-preloader\"\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                lazy: _extends({\n                    initialImageLoaded: false\n                }, Lazy)\n            });\n        },\n        on: {\n            beforeInit: function beforeInit(swiper) {\n                if (swiper.params.lazy.enabled && swiper.params.preloadImages) swiper.params.preloadImages = false;\n            },\n            init: function init(swiper) {\n                if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n                    if (swiper.params.lazy.checkInView) swiper.lazy.checkInViewOnLoad();\n                    else swiper.lazy.load();\n                }\n            },\n            scroll: function scroll(swiper) {\n                if (swiper.params.freeMode && !swiper.params.freeModeSticky) swiper.lazy.load();\n            },\n            \"scrollbarDragMove resize _freeModeNoMomentumRelease\": function lazyLoad(swiper) {\n                if (swiper.params.lazy.enabled) swiper.lazy.load();\n            },\n            transitionStart: function transitionStart(swiper) {\n                if (swiper.params.lazy.enabled) {\n                    if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) swiper.lazy.load();\n                }\n            },\n            transitionEnd: function transitionEnd(swiper) {\n                if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) swiper.lazy.load();\n            },\n            slideChange: function slideChange(swiper) {\n                var _swiper$params = swiper.params, lazy = _swiper$params.lazy, cssMode = _swiper$params.cssMode, watchSlidesVisibility = _swiper$params.watchSlidesVisibility, watchSlidesProgress = _swiper$params.watchSlidesProgress, touchReleaseOnEdges = _swiper$params.touchReleaseOnEdges, resistanceRatio = _swiper$params.resistanceRatio;\n                if (lazy.enabled && (cssMode || (watchSlidesVisibility || watchSlidesProgress) && (touchReleaseOnEdges || resistanceRatio === 0))) swiper.lazy.load();\n            }\n        }\n    };\n    var Controller = {\n        LinearSpline: function LinearSpline(x, y) {\n            var binarySearch = function search() {\n                var maxIndex;\n                var minIndex;\n                var guess;\n                return function(array, val) {\n                    minIndex = -1;\n                    maxIndex = array.length;\n                    while(maxIndex - minIndex > 1){\n                        guess = maxIndex + minIndex >> 1;\n                        if (array[guess] <= val) minIndex = guess;\n                        else maxIndex = guess;\n                    }\n                    return maxIndex;\n                };\n            }();\n            this.x = x;\n            this.y = y;\n            this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n            // (x1,y1) is the known point before given value,\n            // (x3,y3) is the known point after given value.\n            var i1;\n            var i3;\n            this.interpolate = function interpolate(x2) {\n                if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n                i3 = binarySearch(this.x, x2);\n                i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n                // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n                return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n            };\n            return this;\n        },\n        // xxx: for now i will just save one spline function to to\n        getInterpolateFunction: function getInterpolateFunction(c) {\n            var swiper = this;\n            if (!swiper.controller.spline) swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n        },\n        setTranslate: function setTranslate(_setTranslate, byController) {\n            var swiper = this;\n            var controlled = swiper.controller.control;\n            var multiplier;\n            var controlledTranslate;\n            var Swiper = swiper.constructor;\n            function setControlledTranslate(c) {\n                // this will create an Interpolate function based on the snapGrids\n                // x is the Grid of the scrolled scroller and y will be the controlled scroller\n                // it makes sense to create this only once and recall it for the interpolation\n                // the function does a lot of value caching for performance\n                var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n                if (swiper.params.controller.by === \"slide\") {\n                    swiper.controller.getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n                    // but it did not work out\n                    controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n                }\n                if (!controlledTranslate || swiper.params.controller.by === \"container\") {\n                    multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n                    controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n                }\n                if (swiper.params.controller.inverse) controlledTranslate = c.maxTranslate() - controlledTranslate;\n                c.updateProgress(controlledTranslate);\n                c.setTranslate(controlledTranslate, swiper);\n                c.updateActiveIndex();\n                c.updateSlidesClasses();\n            }\n            if (Array.isArray(controlled)) {\n                for(var i = 0; i < controlled.length; i += 1)if (controlled[i] !== byController && controlled[i] instanceof Swiper) setControlledTranslate(controlled[i]);\n            } else if (controlled instanceof Swiper && byController !== controlled) setControlledTranslate(controlled);\n        },\n        setTransition: function setTransition(duration, byController) {\n            var swiper = this;\n            var Swiper = swiper.constructor;\n            var controlled = swiper.controller.control;\n            var i;\n            function setControlledTransition(c) {\n                c.setTransition(duration, swiper);\n                if (duration !== 0) {\n                    c.transitionStart();\n                    if (c.params.autoHeight) nextTick(function() {\n                        c.updateAutoHeight();\n                    });\n                    c.$wrapperEl.transitionEnd(function() {\n                        if (!controlled) return;\n                        if (c.params.loop && swiper.params.controller.by === \"slide\") c.loopFix();\n                        c.transitionEnd();\n                    });\n                }\n            }\n            if (Array.isArray(controlled)) {\n                for(i = 0; i < controlled.length; i += 1)if (controlled[i] !== byController && controlled[i] instanceof Swiper) setControlledTransition(controlled[i]);\n            } else if (controlled instanceof Swiper && byController !== controlled) setControlledTransition(controlled);\n        }\n    };\n    var Controller$1 = {\n        name: \"controller\",\n        params: {\n            controller: {\n                control: undefined,\n                inverse: false,\n                by: \"slide\" // or 'container'\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                controller: _extends({\n                    control: swiper.params.controller.control\n                }, Controller)\n            });\n        },\n        on: {\n            update: function update(swiper) {\n                if (!swiper.controller.control) return;\n                if (swiper.controller.spline) {\n                    swiper.controller.spline = undefined;\n                    delete swiper.controller.spline;\n                }\n            },\n            resize: function resize(swiper) {\n                if (!swiper.controller.control) return;\n                if (swiper.controller.spline) {\n                    swiper.controller.spline = undefined;\n                    delete swiper.controller.spline;\n                }\n            },\n            observerUpdate: function observerUpdate(swiper) {\n                if (!swiper.controller.control) return;\n                if (swiper.controller.spline) {\n                    swiper.controller.spline = undefined;\n                    delete swiper.controller.spline;\n                }\n            },\n            setTranslate: function setTranslate(swiper, translate, byController) {\n                if (!swiper.controller.control) return;\n                swiper.controller.setTranslate(translate, byController);\n            },\n            setTransition: function setTransition(swiper, duration, byController) {\n                if (!swiper.controller.control) return;\n                swiper.controller.setTransition(duration, byController);\n            }\n        }\n    };\n    var A11y = {\n        getRandomNumber: function getRandomNumber(size) {\n            if (size === void 0) size = 16;\n            var randomChar = function randomChar() {\n                return Math.round(16 * Math.random()).toString(16);\n            };\n            return \"x\".repeat(size).replace(/x/g, randomChar);\n        },\n        makeElFocusable: function makeElFocusable($el) {\n            $el.attr(\"tabIndex\", \"0\");\n            return $el;\n        },\n        makeElNotFocusable: function makeElNotFocusable($el) {\n            $el.attr(\"tabIndex\", \"-1\");\n            return $el;\n        },\n        addElRole: function addElRole($el, role) {\n            $el.attr(\"role\", role);\n            return $el;\n        },\n        addElRoleDescription: function addElRoleDescription($el, description) {\n            $el.attr(\"aria-roledescription\", description);\n            return $el;\n        },\n        addElControls: function addElControls($el, controls) {\n            $el.attr(\"aria-controls\", controls);\n            return $el;\n        },\n        addElLabel: function addElLabel($el, label) {\n            $el.attr(\"aria-label\", label);\n            return $el;\n        },\n        addElId: function addElId($el, id) {\n            $el.attr(\"id\", id);\n            return $el;\n        },\n        addElLive: function addElLive($el, live) {\n            $el.attr(\"aria-live\", live);\n            return $el;\n        },\n        disableEl: function disableEl($el) {\n            $el.attr(\"aria-disabled\", true);\n            return $el;\n        },\n        enableEl: function enableEl($el) {\n            $el.attr(\"aria-disabled\", false);\n            return $el;\n        },\n        onEnterOrSpaceKey: function onEnterOrSpaceKey(e) {\n            if (e.keyCode !== 13 && e.keyCode !== 32) return;\n            var swiper = this;\n            var params = swiper.params.a11y;\n            var $targetEl = $(e.target);\n            if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n                if (!(swiper.isEnd && !swiper.params.loop)) swiper.slideNext();\n                if (swiper.isEnd) swiper.a11y.notify(params.lastSlideMessage);\n                else swiper.a11y.notify(params.nextSlideMessage);\n            }\n            if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n                if (!(swiper.isBeginning && !swiper.params.loop)) swiper.slidePrev();\n                if (swiper.isBeginning) swiper.a11y.notify(params.firstSlideMessage);\n                else swiper.a11y.notify(params.prevSlideMessage);\n            }\n            if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) $targetEl[0].click();\n        },\n        notify: function notify(message) {\n            var swiper = this;\n            var notification = swiper.a11y.liveRegion;\n            if (notification.length === 0) return;\n            notification.html(\"\");\n            notification.html(message);\n        },\n        updateNavigation: function updateNavigation() {\n            var swiper = this;\n            if (swiper.params.loop || !swiper.navigation) return;\n            var _swiper$navigation = swiper.navigation, $nextEl = _swiper$navigation.$nextEl, $prevEl = _swiper$navigation.$prevEl;\n            if ($prevEl && $prevEl.length > 0) {\n                if (swiper.isBeginning) {\n                    swiper.a11y.disableEl($prevEl);\n                    swiper.a11y.makeElNotFocusable($prevEl);\n                } else {\n                    swiper.a11y.enableEl($prevEl);\n                    swiper.a11y.makeElFocusable($prevEl);\n                }\n            }\n            if ($nextEl && $nextEl.length > 0) {\n                if (swiper.isEnd) {\n                    swiper.a11y.disableEl($nextEl);\n                    swiper.a11y.makeElNotFocusable($nextEl);\n                } else {\n                    swiper.a11y.enableEl($nextEl);\n                    swiper.a11y.makeElFocusable($nextEl);\n                }\n            }\n        },\n        updatePagination: function updatePagination() {\n            var swiper = this;\n            var params = swiper.params.a11y;\n            if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) swiper.pagination.bullets.each(function(bulletEl) {\n                var $bulletEl = $(bulletEl);\n                swiper.a11y.makeElFocusable($bulletEl);\n                if (!swiper.params.pagination.renderBullet) {\n                    swiper.a11y.addElRole($bulletEl, \"button\");\n                    swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n                }\n            });\n        },\n        init: function init() {\n            var swiper = this;\n            var params = swiper.params.a11y;\n            swiper.$el.append(swiper.a11y.liveRegion); // Container\n            var $containerEl = swiper.$el;\n            if (params.containerRoleDescriptionMessage) swiper.a11y.addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n            if (params.containerMessage) swiper.a11y.addElLabel($containerEl, params.containerMessage);\n             // Wrapper\n            var $wrapperEl = swiper.$wrapperEl;\n            var wrapperId = $wrapperEl.attr(\"id\") || \"swiper-wrapper-\" + swiper.a11y.getRandomNumber(16);\n            var live = swiper.params.autoplay && swiper.params.autoplay.enabled ? \"off\" : \"polite\";\n            swiper.a11y.addElId($wrapperEl, wrapperId);\n            swiper.a11y.addElLive($wrapperEl, live); // Slide\n            if (params.itemRoleDescriptionMessage) swiper.a11y.addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n            swiper.a11y.addElRole($(swiper.slides), params.slideRole);\n            var slidesLength = swiper.params.loop ? swiper.slides.filter(function(el) {\n                return !el.classList.contains(swiper.params.slideDuplicateClass);\n            }).length : swiper.slides.length;\n            swiper.slides.each(function(slideEl, index) {\n                var $slideEl = $(slideEl);\n                var slideIndex = swiper.params.loop ? parseInt($slideEl.attr(\"data-swiper-slide-index\"), 10) : index;\n                var ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n                swiper.a11y.addElLabel($slideEl, ariaLabelMessage);\n            }); // Navigation\n            var $nextEl;\n            var $prevEl;\n            if (swiper.navigation && swiper.navigation.$nextEl) $nextEl = swiper.navigation.$nextEl;\n            if (swiper.navigation && swiper.navigation.$prevEl) $prevEl = swiper.navigation.$prevEl;\n            if ($nextEl && $nextEl.length) {\n                swiper.a11y.makeElFocusable($nextEl);\n                if ($nextEl[0].tagName !== \"BUTTON\") {\n                    swiper.a11y.addElRole($nextEl, \"button\");\n                    $nextEl.on(\"keydown\", swiper.a11y.onEnterOrSpaceKey);\n                }\n                swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n                swiper.a11y.addElControls($nextEl, wrapperId);\n            }\n            if ($prevEl && $prevEl.length) {\n                swiper.a11y.makeElFocusable($prevEl);\n                if ($prevEl[0].tagName !== \"BUTTON\") {\n                    swiper.a11y.addElRole($prevEl, \"button\");\n                    $prevEl.on(\"keydown\", swiper.a11y.onEnterOrSpaceKey);\n                }\n                swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n                swiper.a11y.addElControls($prevEl, wrapperId);\n            } // Pagination\n            if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) swiper.pagination.$el.on(\"keydown\", classesToSelector(swiper.params.pagination.bulletClass), swiper.a11y.onEnterOrSpaceKey);\n        },\n        destroy: function destroy() {\n            var swiper = this;\n            if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n            var $nextEl;\n            var $prevEl;\n            if (swiper.navigation && swiper.navigation.$nextEl) $nextEl = swiper.navigation.$nextEl;\n            if (swiper.navigation && swiper.navigation.$prevEl) $prevEl = swiper.navigation.$prevEl;\n            if ($nextEl) $nextEl.off(\"keydown\", swiper.a11y.onEnterOrSpaceKey);\n            if ($prevEl) $prevEl.off(\"keydown\", swiper.a11y.onEnterOrSpaceKey);\n             // Pagination\n            if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) swiper.pagination.$el.off(\"keydown\", classesToSelector(swiper.params.pagination.bulletClass), swiper.a11y.onEnterOrSpaceKey);\n        }\n    };\n    var A11y$1 = {\n        name: \"a11y\",\n        params: {\n            a11y: {\n                enabled: true,\n                notificationClass: \"swiper-notification\",\n                prevSlideMessage: \"Previous slide\",\n                nextSlideMessage: \"Next slide\",\n                firstSlideMessage: \"This is the first slide\",\n                lastSlideMessage: \"This is the last slide\",\n                paginationBulletMessage: \"Go to slide {{index}}\",\n                slideLabelMessage: \"{{index}} / {{slidesLength}}\",\n                containerMessage: null,\n                containerRoleDescriptionMessage: null,\n                itemRoleDescriptionMessage: null,\n                slideRole: \"group\"\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                a11y: _extends({}, A11y, {\n                    liveRegion: $('<span class=\"' + swiper.params.a11y.notificationClass + '\" aria-live=\"assertive\" aria-atomic=\"true\"></span>')\n                })\n            });\n        },\n        on: {\n            afterInit: function afterInit(swiper) {\n                if (!swiper.params.a11y.enabled) return;\n                swiper.a11y.init();\n                swiper.a11y.updateNavigation();\n            },\n            toEdge: function toEdge(swiper) {\n                if (!swiper.params.a11y.enabled) return;\n                swiper.a11y.updateNavigation();\n            },\n            fromEdge: function fromEdge(swiper) {\n                if (!swiper.params.a11y.enabled) return;\n                swiper.a11y.updateNavigation();\n            },\n            paginationUpdate: function paginationUpdate(swiper) {\n                if (!swiper.params.a11y.enabled) return;\n                swiper.a11y.updatePagination();\n            },\n            destroy: function destroy(swiper) {\n                if (!swiper.params.a11y.enabled) return;\n                swiper.a11y.destroy();\n            }\n        }\n    };\n    var History = {\n        init: function init() {\n            var swiper = this;\n            var window1 = getWindow();\n            if (!swiper.params.history) return;\n            if (!window1.history || !window1.history.pushState) {\n                swiper.params.history.enabled = false;\n                swiper.params.hashNavigation.enabled = true;\n                return;\n            }\n            var history = swiper.history;\n            history.initialized = true;\n            history.paths = History.getPathValues(swiper.params.url);\n            if (!history.paths.key && !history.paths.value) return;\n            history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n            if (!swiper.params.history.replaceState) window1.addEventListener(\"popstate\", swiper.history.setHistoryPopState);\n        },\n        destroy: function destroy() {\n            var swiper = this;\n            var window1 = getWindow();\n            if (!swiper.params.history.replaceState) window1.removeEventListener(\"popstate\", swiper.history.setHistoryPopState);\n        },\n        setHistoryPopState: function setHistoryPopState() {\n            var swiper = this;\n            swiper.history.paths = History.getPathValues(swiper.params.url);\n            swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n        },\n        getPathValues: function getPathValues(urlOverride) {\n            var window1 = getWindow();\n            var location;\n            if (urlOverride) location = new URL(urlOverride);\n            else location = window1.location;\n            var pathArray = location.pathname.slice(1).split(\"/\").filter(function(part) {\n                return part !== \"\";\n            });\n            var total = pathArray.length;\n            var key = pathArray[total - 2];\n            var value = pathArray[total - 1];\n            return {\n                key: key,\n                value: value\n            };\n        },\n        setHistory: function setHistory(key, index) {\n            var swiper = this;\n            var window1 = getWindow();\n            if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n            var location;\n            if (swiper.params.url) location = new URL(swiper.params.url);\n            else location = window1.location;\n            var slide = swiper.slides.eq(index);\n            var value = History.slugify(slide.attr(\"data-history\"));\n            if (swiper.params.history.root.length > 0) {\n                var root = swiper.params.history.root;\n                if (root[root.length - 1] === \"/\") root = root.slice(0, root.length - 1);\n                value = root + \"/\" + key + \"/\" + value;\n            } else if (!location.pathname.includes(key)) value = key + \"/\" + value;\n            var currentState = window1.history.state;\n            if (currentState && currentState.value === value) return;\n            if (swiper.params.history.replaceState) window1.history.replaceState({\n                value: value\n            }, null, value);\n            else window1.history.pushState({\n                value: value\n            }, null, value);\n        },\n        slugify: function slugify(text) {\n            return text.toString().replace(/\\s+/g, \"-\").replace(/[^\\w-]+/g, \"\").replace(/--+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n        },\n        scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n            var swiper = this;\n            if (value) for(var i = 0, length = swiper.slides.length; i < length; i += 1){\n                var slide = swiper.slides.eq(i);\n                var slideHistory = History.slugify(slide.attr(\"data-history\"));\n                if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n                    var index = slide.index();\n                    swiper.slideTo(index, speed, runCallbacks);\n                }\n            }\n            else swiper.slideTo(0, speed, runCallbacks);\n        }\n    };\n    var History$1 = {\n        name: \"history\",\n        params: {\n            history: {\n                enabled: false,\n                root: \"\",\n                replaceState: false,\n                key: \"slides\"\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                history: _extends({}, History)\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                if (swiper.params.history.enabled) swiper.history.init();\n            },\n            destroy: function destroy(swiper) {\n                if (swiper.params.history.enabled) swiper.history.destroy();\n            },\n            \"transitionEnd _freeModeNoMomentumRelease\": function transitionEnd_freeModeNoMomentumRelease(swiper) {\n                if (swiper.history.initialized) swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n            },\n            slideChange: function slideChange(swiper) {\n                if (swiper.history.initialized && swiper.params.cssMode) swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n            }\n        }\n    };\n    var HashNavigation = {\n        onHashChange: function onHashChange() {\n            var swiper = this;\n            var document1 = getDocument();\n            swiper.emit(\"hashChange\");\n            var newHash = document1.location.hash.replace(\"#\", \"\");\n            var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr(\"data-hash\");\n            if (newHash !== activeSlideHash) {\n                var newIndex = swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + '[data-hash=\"' + newHash + '\"]').index();\n                if (typeof newIndex === \"undefined\") return;\n                swiper.slideTo(newIndex);\n            }\n        },\n        setHash: function setHash() {\n            var swiper = this;\n            var window1 = getWindow();\n            var document1 = getDocument();\n            if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n            if (swiper.params.hashNavigation.replaceState && window1.history && window1.history.replaceState) {\n                window1.history.replaceState(null, null, \"#\" + swiper.slides.eq(swiper.activeIndex).attr(\"data-hash\"));\n                swiper.emit(\"hashSet\");\n            } else {\n                var slide = swiper.slides.eq(swiper.activeIndex);\n                var hash = slide.attr(\"data-hash\") || slide.attr(\"data-history\");\n                document1.location.hash = hash || \"\";\n                swiper.emit(\"hashSet\");\n            }\n        },\n        init: function init() {\n            var swiper = this;\n            var document1 = getDocument();\n            var window1 = getWindow();\n            if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n            swiper.hashNavigation.initialized = true;\n            var hash = document1.location.hash.replace(\"#\", \"\");\n            if (hash) {\n                var speed = 0;\n                for(var i = 0, length = swiper.slides.length; i < length; i += 1){\n                    var slide = swiper.slides.eq(i);\n                    var slideHash = slide.attr(\"data-hash\") || slide.attr(\"data-history\");\n                    if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n                        var index = slide.index();\n                        swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n                    }\n                }\n            }\n            if (swiper.params.hashNavigation.watchState) $(window1).on(\"hashchange\", swiper.hashNavigation.onHashChange);\n        },\n        destroy: function destroy() {\n            var swiper = this;\n            var window1 = getWindow();\n            if (swiper.params.hashNavigation.watchState) $(window1).off(\"hashchange\", swiper.hashNavigation.onHashChange);\n        }\n    };\n    var HashNavigation$1 = {\n        name: \"hash-navigation\",\n        params: {\n            hashNavigation: {\n                enabled: false,\n                replaceState: false,\n                watchState: false\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                hashNavigation: _extends({\n                    initialized: false\n                }, HashNavigation)\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                if (swiper.params.hashNavigation.enabled) swiper.hashNavigation.init();\n            },\n            destroy: function destroy(swiper) {\n                if (swiper.params.hashNavigation.enabled) swiper.hashNavigation.destroy();\n            },\n            \"transitionEnd _freeModeNoMomentumRelease\": function transitionEnd_freeModeNoMomentumRelease(swiper) {\n                if (swiper.hashNavigation.initialized) swiper.hashNavigation.setHash();\n            },\n            slideChange: function slideChange(swiper) {\n                if (swiper.hashNavigation.initialized && swiper.params.cssMode) swiper.hashNavigation.setHash();\n            }\n        }\n    };\n    var Autoplay = {\n        run: function run() {\n            var swiper = this;\n            var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n            var delay = swiper.params.autoplay.delay;\n            if ($activeSlideEl.attr(\"data-swiper-autoplay\")) delay = $activeSlideEl.attr(\"data-swiper-autoplay\") || swiper.params.autoplay.delay;\n            clearTimeout(swiper.autoplay.timeout);\n            swiper.autoplay.timeout = nextTick(function() {\n                var autoplayResult;\n                if (swiper.params.autoplay.reverseDirection) {\n                    if (swiper.params.loop) {\n                        swiper.loopFix();\n                        autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n                        swiper.emit(\"autoplay\");\n                    } else if (!swiper.isBeginning) {\n                        autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n                        swiper.emit(\"autoplay\");\n                    } else if (!swiper.params.autoplay.stopOnLastSlide) {\n                        autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n                        swiper.emit(\"autoplay\");\n                    } else swiper.autoplay.stop();\n                } else if (swiper.params.loop) {\n                    swiper.loopFix();\n                    autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n                    swiper.emit(\"autoplay\");\n                } else if (!swiper.isEnd) {\n                    autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n                    swiper.emit(\"autoplay\");\n                } else if (!swiper.params.autoplay.stopOnLastSlide) {\n                    autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n                    swiper.emit(\"autoplay\");\n                } else swiper.autoplay.stop();\n                if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\n                else if (autoplayResult === false) swiper.autoplay.run();\n            }, delay);\n        },\n        start: function start() {\n            var swiper = this;\n            if (typeof swiper.autoplay.timeout !== \"undefined\") return false;\n            if (swiper.autoplay.running) return false;\n            swiper.autoplay.running = true;\n            swiper.emit(\"autoplayStart\");\n            swiper.autoplay.run();\n            return true;\n        },\n        stop: function stop() {\n            var swiper = this;\n            if (!swiper.autoplay.running) return false;\n            if (typeof swiper.autoplay.timeout === \"undefined\") return false;\n            if (swiper.autoplay.timeout) {\n                clearTimeout(swiper.autoplay.timeout);\n                swiper.autoplay.timeout = undefined;\n            }\n            swiper.autoplay.running = false;\n            swiper.emit(\"autoplayStop\");\n            return true;\n        },\n        pause: function pause(speed) {\n            var swiper = this;\n            if (!swiper.autoplay.running) return;\n            if (swiper.autoplay.paused) return;\n            if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n            swiper.autoplay.paused = true;\n            if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n                swiper.autoplay.paused = false;\n                swiper.autoplay.run();\n            } else [\n                \"transitionend\",\n                \"webkitTransitionEnd\"\n            ].forEach(function(event) {\n                swiper.$wrapperEl[0].addEventListener(event, swiper.autoplay.onTransitionEnd);\n            });\n        },\n        onVisibilityChange: function onVisibilityChange() {\n            var swiper = this;\n            var document1 = getDocument();\n            if (document1.visibilityState === \"hidden\" && swiper.autoplay.running) swiper.autoplay.pause();\n            if (document1.visibilityState === \"visible\" && swiper.autoplay.paused) {\n                swiper.autoplay.run();\n                swiper.autoplay.paused = false;\n            }\n        },\n        onTransitionEnd: function onTransitionEnd(e) {\n            var swiper = this;\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n            if (e.target !== swiper.$wrapperEl[0]) return;\n            [\n                \"transitionend\",\n                \"webkitTransitionEnd\"\n            ].forEach(function(event) {\n                swiper.$wrapperEl[0].removeEventListener(event, swiper.autoplay.onTransitionEnd);\n            });\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) swiper.autoplay.stop();\n            else swiper.autoplay.run();\n        },\n        onMouseEnter: function onMouseEnter() {\n            var swiper = this;\n            if (swiper.params.autoplay.disableOnInteraction) swiper.autoplay.stop();\n            else swiper.autoplay.pause();\n            [\n                \"transitionend\",\n                \"webkitTransitionEnd\"\n            ].forEach(function(event) {\n                swiper.$wrapperEl[0].removeEventListener(event, swiper.autoplay.onTransitionEnd);\n            });\n        },\n        onMouseLeave: function onMouseLeave() {\n            var swiper = this;\n            if (swiper.params.autoplay.disableOnInteraction) return;\n            swiper.autoplay.paused = false;\n            swiper.autoplay.run();\n        },\n        attachMouseEvents: function attachMouseEvents() {\n            var swiper = this;\n            if (swiper.params.autoplay.pauseOnMouseEnter) {\n                swiper.$el.on(\"mouseenter\", swiper.autoplay.onMouseEnter);\n                swiper.$el.on(\"mouseleave\", swiper.autoplay.onMouseLeave);\n            }\n        },\n        detachMouseEvents: function detachMouseEvents() {\n            var swiper = this;\n            swiper.$el.off(\"mouseenter\", swiper.autoplay.onMouseEnter);\n            swiper.$el.off(\"mouseleave\", swiper.autoplay.onMouseLeave);\n        }\n    };\n    var Autoplay$1 = {\n        name: \"autoplay\",\n        params: {\n            autoplay: {\n                enabled: false,\n                delay: 3000,\n                waitForTransition: true,\n                disableOnInteraction: true,\n                stopOnLastSlide: false,\n                reverseDirection: false,\n                pauseOnMouseEnter: false\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                autoplay: _extends({}, Autoplay, {\n                    running: false,\n                    paused: false\n                })\n            });\n        },\n        on: {\n            init: function init(swiper) {\n                if (swiper.params.autoplay.enabled) {\n                    swiper.autoplay.start();\n                    var document1 = getDocument();\n                    document1.addEventListener(\"visibilitychange\", swiper.autoplay.onVisibilityChange);\n                    swiper.autoplay.attachMouseEvents();\n                }\n            },\n            beforeTransitionStart: function beforeTransitionStart(swiper, speed, internal) {\n                if (swiper.autoplay.running) {\n                    if (internal || !swiper.params.autoplay.disableOnInteraction) swiper.autoplay.pause(speed);\n                    else swiper.autoplay.stop();\n                }\n            },\n            sliderFirstMove: function sliderFirstMove(swiper) {\n                if (swiper.autoplay.running) {\n                    if (swiper.params.autoplay.disableOnInteraction) swiper.autoplay.stop();\n                    else swiper.autoplay.pause();\n                }\n            },\n            touchEnd: function touchEnd(swiper) {\n                if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) swiper.autoplay.run();\n            },\n            destroy: function destroy(swiper) {\n                swiper.autoplay.detachMouseEvents();\n                if (swiper.autoplay.running) swiper.autoplay.stop();\n                var document1 = getDocument();\n                document1.removeEventListener(\"visibilitychange\", swiper.autoplay.onVisibilityChange);\n            }\n        }\n    };\n    var Fade = {\n        setTranslate: function setTranslate() {\n            var swiper = this;\n            var slides = swiper.slides;\n            for(var i = 0; i < slides.length; i += 1){\n                var $slideEl = swiper.slides.eq(i);\n                var offset = $slideEl[0].swiperSlideOffset;\n                var tx = -offset;\n                if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n                var ty = 0;\n                if (!swiper.isHorizontal()) {\n                    ty = tx;\n                    tx = 0;\n                }\n                var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n                $slideEl.css({\n                    opacity: slideOpacity\n                }).transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\");\n            }\n        },\n        setTransition: function setTransition(duration) {\n            var swiper = this;\n            var slides = swiper.slides, $wrapperEl = swiper.$wrapperEl;\n            slides.transition(duration);\n            if (swiper.params.virtualTranslate && duration !== 0) {\n                var eventTriggered = false;\n                slides.transitionEnd(function() {\n                    if (eventTriggered) return;\n                    if (!swiper || swiper.destroyed) return;\n                    eventTriggered = true;\n                    swiper.animating = false;\n                    var triggerEvents = [\n                        \"webkitTransitionEnd\",\n                        \"transitionend\"\n                    ];\n                    for(var i = 0; i < triggerEvents.length; i += 1)$wrapperEl.trigger(triggerEvents[i]);\n                });\n            }\n        }\n    };\n    var EffectFade = {\n        name: \"effect-fade\",\n        params: {\n            fadeEffect: {\n                crossFade: false\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                fadeEffect: _extends({}, Fade)\n            });\n        },\n        on: {\n            beforeInit: function beforeInit(swiper) {\n                if (swiper.params.effect !== \"fade\") return;\n                swiper.classNames.push(swiper.params.containerModifierClass + \"fade\");\n                var overwriteParams = {\n                    slidesPerView: 1,\n                    slidesPerColumn: 1,\n                    slidesPerGroup: 1,\n                    watchSlidesProgress: true,\n                    spaceBetween: 0,\n                    virtualTranslate: true\n                };\n                extend(swiper.params, overwriteParams);\n                extend(swiper.originalParams, overwriteParams);\n            },\n            setTranslate: function setTranslate(swiper) {\n                if (swiper.params.effect !== \"fade\") return;\n                swiper.fadeEffect.setTranslate();\n            },\n            setTransition: function setTransition(swiper, duration) {\n                if (swiper.params.effect !== \"fade\") return;\n                swiper.fadeEffect.setTransition(duration);\n            }\n        }\n    };\n    var Cube = {\n        setTranslate: function setTranslate() {\n            var swiper = this;\n            var $el = swiper.$el, $wrapperEl = swiper.$wrapperEl, slides = swiper.slides, swiperWidth = swiper.width, swiperHeight = swiper.height, rtl = swiper.rtlTranslate, swiperSize = swiper.size, browser = swiper.browser;\n            var params = swiper.params.cubeEffect;\n            var isHorizontal = swiper.isHorizontal();\n            var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n            var wrapperRotate = 0;\n            var $cubeShadowEl;\n            if (params.shadow) {\n                if (isHorizontal) {\n                    $cubeShadowEl = $wrapperEl.find(\".swiper-cube-shadow\");\n                    if ($cubeShadowEl.length === 0) {\n                        $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n                        $wrapperEl.append($cubeShadowEl);\n                    }\n                    $cubeShadowEl.css({\n                        height: swiperWidth + \"px\"\n                    });\n                } else {\n                    $cubeShadowEl = $el.find(\".swiper-cube-shadow\");\n                    if ($cubeShadowEl.length === 0) {\n                        $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n                        $el.append($cubeShadowEl);\n                    }\n                }\n            }\n            for(var i = 0; i < slides.length; i += 1){\n                var $slideEl = slides.eq(i);\n                var slideIndex = i;\n                if (isVirtual) slideIndex = parseInt($slideEl.attr(\"data-swiper-slide-index\"), 10);\n                var slideAngle = slideIndex * 90;\n                var round = Math.floor(slideAngle / 360);\n                if (rtl) {\n                    slideAngle = -slideAngle;\n                    round = Math.floor(-slideAngle / 360);\n                }\n                var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n                var tx = 0;\n                var ty = 0;\n                var tz = 0;\n                if (slideIndex % 4 === 0) {\n                    tx = -round * 4 * swiperSize;\n                    tz = 0;\n                } else if ((slideIndex - 1) % 4 === 0) {\n                    tx = 0;\n                    tz = -round * 4 * swiperSize;\n                } else if ((slideIndex - 2) % 4 === 0) {\n                    tx = swiperSize + round * 4 * swiperSize;\n                    tz = swiperSize;\n                } else if ((slideIndex - 3) % 4 === 0) {\n                    tx = -swiperSize;\n                    tz = 3 * swiperSize + swiperSize * 4 * round;\n                }\n                if (rtl) tx = -tx;\n                if (!isHorizontal) {\n                    ty = tx;\n                    tx = 0;\n                }\n                var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n                if (progress <= 1 && progress > -1) {\n                    wrapperRotate = slideIndex * 90 + progress * 90;\n                    if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n                }\n                $slideEl.transform(transform);\n                if (params.slideShadows) {\n                    // Set shadows\n                    var shadowBefore = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-left\") : $slideEl.find(\".swiper-slide-shadow-top\");\n                    var shadowAfter = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-right\") : $slideEl.find(\".swiper-slide-shadow-bottom\");\n                    if (shadowBefore.length === 0) {\n                        shadowBefore = $('<div class=\"swiper-slide-shadow-' + (isHorizontal ? \"left\" : \"top\") + '\"></div>');\n                        $slideEl.append(shadowBefore);\n                    }\n                    if (shadowAfter.length === 0) {\n                        shadowAfter = $('<div class=\"swiper-slide-shadow-' + (isHorizontal ? \"right\" : \"bottom\") + '\"></div>');\n                        $slideEl.append(shadowAfter);\n                    }\n                    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n                    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n                }\n            }\n            $wrapperEl.css({\n                \"-webkit-transform-origin\": \"50% 50% -\" + swiperSize / 2 + \"px\",\n                \"-moz-transform-origin\": \"50% 50% -\" + swiperSize / 2 + \"px\",\n                \"-ms-transform-origin\": \"50% 50% -\" + swiperSize / 2 + \"px\",\n                \"transform-origin\": \"50% 50% -\" + swiperSize / 2 + \"px\"\n            });\n            if (params.shadow) {\n                if (isHorizontal) $cubeShadowEl.transform(\"translate3d(0px, \" + (swiperWidth / 2 + params.shadowOffset) + \"px, \" + -swiperWidth / 2 + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + params.shadowScale + \")\");\n                else {\n                    var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n                    var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n                    var scale1 = params.shadowScale;\n                    var scale2 = params.shadowScale / multiplier;\n                    var offset = params.shadowOffset;\n                    $cubeShadowEl.transform(\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + (swiperHeight / 2 + offset) + \"px, \" + -swiperHeight / 2 / scale2 + \"px) rotateX(-90deg)\");\n                }\n            }\n            var zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n            $wrapperEl.transform(\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\");\n        },\n        setTransition: function setTransition(duration) {\n            var swiper = this;\n            var $el = swiper.$el, slides = swiper.slides;\n            slides.transition(duration).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(duration);\n            if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) $el.find(\".swiper-cube-shadow\").transition(duration);\n        }\n    };\n    var EffectCube = {\n        name: \"effect-cube\",\n        params: {\n            cubeEffect: {\n                slideShadows: true,\n                shadow: true,\n                shadowOffset: 20,\n                shadowScale: 0.94\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                cubeEffect: _extends({}, Cube)\n            });\n        },\n        on: {\n            beforeInit: function beforeInit(swiper) {\n                if (swiper.params.effect !== \"cube\") return;\n                swiper.classNames.push(swiper.params.containerModifierClass + \"cube\");\n                swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n                var overwriteParams = {\n                    slidesPerView: 1,\n                    slidesPerColumn: 1,\n                    slidesPerGroup: 1,\n                    watchSlidesProgress: true,\n                    resistanceRatio: 0,\n                    spaceBetween: 0,\n                    centeredSlides: false,\n                    virtualTranslate: true\n                };\n                extend(swiper.params, overwriteParams);\n                extend(swiper.originalParams, overwriteParams);\n            },\n            setTranslate: function setTranslate(swiper) {\n                if (swiper.params.effect !== \"cube\") return;\n                swiper.cubeEffect.setTranslate();\n            },\n            setTransition: function setTransition(swiper, duration) {\n                if (swiper.params.effect !== \"cube\") return;\n                swiper.cubeEffect.setTransition(duration);\n            }\n        }\n    };\n    var Flip = {\n        setTranslate: function setTranslate() {\n            var swiper = this;\n            var slides = swiper.slides, rtl = swiper.rtlTranslate;\n            for(var i = 0; i < slides.length; i += 1){\n                var $slideEl = slides.eq(i);\n                var progress = $slideEl[0].progress;\n                if (swiper.params.flipEffect.limitRotation) progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n                var offset = $slideEl[0].swiperSlideOffset;\n                var rotate = -180 * progress;\n                var rotateY = rotate;\n                var rotateX = 0;\n                var tx = -offset;\n                var ty = 0;\n                if (!swiper.isHorizontal()) {\n                    ty = tx;\n                    tx = 0;\n                    rotateX = -rotateY;\n                    rotateY = 0;\n                } else if (rtl) rotateY = -rotateY;\n                $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n                if (swiper.params.flipEffect.slideShadows) {\n                    // Set shadows\n                    var shadowBefore = swiper.isHorizontal() ? $slideEl.find(\".swiper-slide-shadow-left\") : $slideEl.find(\".swiper-slide-shadow-top\");\n                    var shadowAfter = swiper.isHorizontal() ? $slideEl.find(\".swiper-slide-shadow-right\") : $slideEl.find(\".swiper-slide-shadow-bottom\");\n                    if (shadowBefore.length === 0) {\n                        shadowBefore = $('<div class=\"swiper-slide-shadow-' + (swiper.isHorizontal() ? \"left\" : \"top\") + '\"></div>');\n                        $slideEl.append(shadowBefore);\n                    }\n                    if (shadowAfter.length === 0) {\n                        shadowAfter = $('<div class=\"swiper-slide-shadow-' + (swiper.isHorizontal() ? \"right\" : \"bottom\") + '\"></div>');\n                        $slideEl.append(shadowAfter);\n                    }\n                    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n                    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n                }\n                $slideEl.transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\");\n            }\n        },\n        setTransition: function setTransition(duration) {\n            var swiper = this;\n            var slides = swiper.slides, activeIndex = swiper.activeIndex, $wrapperEl = swiper.$wrapperEl;\n            slides.transition(duration).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(duration);\n            if (swiper.params.virtualTranslate && duration !== 0) {\n                var eventTriggered = false; // eslint-disable-next-line\n                slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n                    if (eventTriggered) return;\n                    if (!swiper || swiper.destroyed) return; // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n                    eventTriggered = true;\n                    swiper.animating = false;\n                    var triggerEvents = [\n                        \"webkitTransitionEnd\",\n                        \"transitionend\"\n                    ];\n                    for(var i = 0; i < triggerEvents.length; i += 1)$wrapperEl.trigger(triggerEvents[i]);\n                });\n            }\n        }\n    };\n    var EffectFlip = {\n        name: \"effect-flip\",\n        params: {\n            flipEffect: {\n                slideShadows: true,\n                limitRotation: true\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                flipEffect: _extends({}, Flip)\n            });\n        },\n        on: {\n            beforeInit: function beforeInit(swiper) {\n                if (swiper.params.effect !== \"flip\") return;\n                swiper.classNames.push(swiper.params.containerModifierClass + \"flip\");\n                swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n                var overwriteParams = {\n                    slidesPerView: 1,\n                    slidesPerColumn: 1,\n                    slidesPerGroup: 1,\n                    watchSlidesProgress: true,\n                    spaceBetween: 0,\n                    virtualTranslate: true\n                };\n                extend(swiper.params, overwriteParams);\n                extend(swiper.originalParams, overwriteParams);\n            },\n            setTranslate: function setTranslate(swiper) {\n                if (swiper.params.effect !== \"flip\") return;\n                swiper.flipEffect.setTranslate();\n            },\n            setTransition: function setTransition(swiper, duration) {\n                if (swiper.params.effect !== \"flip\") return;\n                swiper.flipEffect.setTransition(duration);\n            }\n        }\n    };\n    var Coverflow = {\n        setTranslate: function setTranslate() {\n            var swiper = this;\n            var swiperWidth = swiper.width, swiperHeight = swiper.height, slides = swiper.slides, slidesSizesGrid = swiper.slidesSizesGrid;\n            var params = swiper.params.coverflowEffect;\n            var isHorizontal = swiper.isHorizontal();\n            var transform = swiper.translate;\n            var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n            var rotate = isHorizontal ? params.rotate : -params.rotate;\n            var translate = params.depth; // Each slide offset from center\n            for(var i = 0, length = slides.length; i < length; i += 1){\n                var $slideEl = slides.eq(i);\n                var slideSize = slidesSizesGrid[i];\n                var slideOffset = $slideEl[0].swiperSlideOffset;\n                var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n                var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n                var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n                var translateZ = -translate * Math.abs(offsetMultiplier);\n                var stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n                if (typeof stretch === \"string\" && stretch.indexOf(\"%\") !== -1) stretch = parseFloat(params.stretch) / 100 * slideSize;\n                var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n                var translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n                var scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n                if (Math.abs(translateX) < 0.001) translateX = 0;\n                if (Math.abs(translateY) < 0.001) translateY = 0;\n                if (Math.abs(translateZ) < 0.001) translateZ = 0;\n                if (Math.abs(rotateY) < 0.001) rotateY = 0;\n                if (Math.abs(rotateX) < 0.001) rotateX = 0;\n                if (Math.abs(scale) < 0.001) scale = 0;\n                var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg) scale(\" + scale + \")\";\n                $slideEl.transform(slideTransform);\n                $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n                if (params.slideShadows) {\n                    // Set shadows\n                    var $shadowBeforeEl = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-left\") : $slideEl.find(\".swiper-slide-shadow-top\");\n                    var $shadowAfterEl = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-right\") : $slideEl.find(\".swiper-slide-shadow-bottom\");\n                    if ($shadowBeforeEl.length === 0) {\n                        $shadowBeforeEl = $('<div class=\"swiper-slide-shadow-' + (isHorizontal ? \"left\" : \"top\") + '\"></div>');\n                        $slideEl.append($shadowBeforeEl);\n                    }\n                    if ($shadowAfterEl.length === 0) {\n                        $shadowAfterEl = $('<div class=\"swiper-slide-shadow-' + (isHorizontal ? \"right\" : \"bottom\") + '\"></div>');\n                        $slideEl.append($shadowAfterEl);\n                    }\n                    if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n                    if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n                }\n            }\n        },\n        setTransition: function setTransition(duration) {\n            var swiper = this;\n            swiper.slides.transition(duration).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(duration);\n        }\n    };\n    var EffectCoverflow = {\n        name: \"effect-coverflow\",\n        params: {\n            coverflowEffect: {\n                rotate: 50,\n                stretch: 0,\n                depth: 100,\n                scale: 1,\n                modifier: 1,\n                slideShadows: true\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                coverflowEffect: _extends({}, Coverflow)\n            });\n        },\n        on: {\n            beforeInit: function beforeInit(swiper) {\n                if (swiper.params.effect !== \"coverflow\") return;\n                swiper.classNames.push(swiper.params.containerModifierClass + \"coverflow\");\n                swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n                swiper.params.watchSlidesProgress = true;\n                swiper.originalParams.watchSlidesProgress = true;\n            },\n            setTranslate: function setTranslate(swiper) {\n                if (swiper.params.effect !== \"coverflow\") return;\n                swiper.coverflowEffect.setTranslate();\n            },\n            setTransition: function setTransition(swiper, duration) {\n                if (swiper.params.effect !== \"coverflow\") return;\n                swiper.coverflowEffect.setTransition(duration);\n            }\n        }\n    };\n    var Thumbs = {\n        init: function init() {\n            var swiper = this;\n            var thumbsParams = swiper.params.thumbs;\n            if (swiper.thumbs.initialized) return false;\n            swiper.thumbs.initialized = true;\n            var SwiperClass = swiper.constructor;\n            if (thumbsParams.swiper instanceof SwiperClass) {\n                swiper.thumbs.swiper = thumbsParams.swiper;\n                extend(swiper.thumbs.swiper.originalParams, {\n                    watchSlidesProgress: true,\n                    slideToClickedSlide: false\n                });\n                extend(swiper.thumbs.swiper.params, {\n                    watchSlidesProgress: true,\n                    slideToClickedSlide: false\n                });\n            } else if (isObject(thumbsParams.swiper)) {\n                swiper.thumbs.swiper = new SwiperClass(extend({}, thumbsParams.swiper, {\n                    watchSlidesVisibility: true,\n                    watchSlidesProgress: true,\n                    slideToClickedSlide: false\n                }));\n                swiper.thumbs.swiperCreated = true;\n            }\n            swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n            swiper.thumbs.swiper.on(\"tap\", swiper.thumbs.onThumbClick);\n            return true;\n        },\n        onThumbClick: function onThumbClick() {\n            var swiper = this;\n            var thumbsSwiper = swiper.thumbs.swiper;\n            if (!thumbsSwiper) return;\n            var clickedIndex = thumbsSwiper.clickedIndex;\n            var clickedSlide = thumbsSwiper.clickedSlide;\n            if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n            if (typeof clickedIndex === \"undefined\" || clickedIndex === null) return;\n            var slideToIndex;\n            if (thumbsSwiper.params.loop) slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr(\"data-swiper-slide-index\"), 10);\n            else slideToIndex = clickedIndex;\n            if (swiper.params.loop) {\n                var currentIndex = swiper.activeIndex;\n                if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n                    swiper.loopFix(); // eslint-disable-next-line\n                    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n                    currentIndex = swiper.activeIndex;\n                }\n                var prevIndex = swiper.slides.eq(currentIndex).prevAll('[data-swiper-slide-index=\"' + slideToIndex + '\"]').eq(0).index();\n                var nextIndex = swiper.slides.eq(currentIndex).nextAll('[data-swiper-slide-index=\"' + slideToIndex + '\"]').eq(0).index();\n                if (typeof prevIndex === \"undefined\") slideToIndex = nextIndex;\n                else if (typeof nextIndex === \"undefined\") slideToIndex = prevIndex;\n                else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n                else slideToIndex = prevIndex;\n            }\n            swiper.slideTo(slideToIndex);\n        },\n        update: function update(initial) {\n            var swiper = this;\n            var thumbsSwiper = swiper.thumbs.swiper;\n            if (!thumbsSwiper) return;\n            var slidesPerView = thumbsSwiper.params.slidesPerView === \"auto\" ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n            var autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n            var useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n            if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n                var currentThumbsIndex = thumbsSwiper.activeIndex;\n                var newThumbsIndex;\n                var direction;\n                if (thumbsSwiper.params.loop) {\n                    if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n                        thumbsSwiper.loopFix(); // eslint-disable-next-line\n                        thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n                        currentThumbsIndex = thumbsSwiper.activeIndex;\n                    } // Find actual thumbs index to slide to\n                    var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll('[data-swiper-slide-index=\"' + swiper.realIndex + '\"]').eq(0).index();\n                    var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll('[data-swiper-slide-index=\"' + swiper.realIndex + '\"]').eq(0).index();\n                    if (typeof prevThumbsIndex === \"undefined\") newThumbsIndex = nextThumbsIndex;\n                    else if (typeof nextThumbsIndex === \"undefined\") newThumbsIndex = prevThumbsIndex;\n                    else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n                    else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n                    else newThumbsIndex = prevThumbsIndex;\n                    direction = swiper.activeIndex > swiper.previousIndex ? \"next\" : \"prev\";\n                } else {\n                    newThumbsIndex = swiper.realIndex;\n                    direction = newThumbsIndex > swiper.previousIndex ? \"next\" : \"prev\";\n                }\n                if (useOffset) newThumbsIndex += direction === \"next\" ? autoScrollOffset : -1 * autoScrollOffset;\n                if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n                    if (thumbsSwiper.params.centeredSlides) {\n                        if (newThumbsIndex > currentThumbsIndex) newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n                        else newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n                    } else newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup;\n                    thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n                }\n            } // Activate thumbs\n            var thumbsToActivate = 1;\n            var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n            if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) thumbsToActivate = swiper.params.slidesPerView;\n            if (!swiper.params.thumbs.multipleActiveThumbs) thumbsToActivate = 1;\n            thumbsToActivate = Math.floor(thumbsToActivate);\n            thumbsSwiper.slides.removeClass(thumbActiveClass);\n            if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) for(var i = 0; i < thumbsToActivate; i += 1)thumbsSwiper.$wrapperEl.children('[data-swiper-slide-index=\"' + (swiper.realIndex + i) + '\"]').addClass(thumbActiveClass);\n            else for(var _i = 0; _i < thumbsToActivate; _i += 1)thumbsSwiper.slides.eq(swiper.realIndex + _i).addClass(thumbActiveClass);\n        }\n    };\n    var Thumbs$1 = {\n        name: \"thumbs\",\n        params: {\n            thumbs: {\n                swiper: null,\n                multipleActiveThumbs: true,\n                autoScrollOffset: 0,\n                slideThumbActiveClass: \"swiper-slide-thumb-active\",\n                thumbsContainerClass: \"swiper-container-thumbs\"\n            }\n        },\n        create: function create() {\n            var swiper = this;\n            bindModuleMethods(swiper, {\n                thumbs: _extends({\n                    swiper: null,\n                    initialized: false\n                }, Thumbs)\n            });\n        },\n        on: {\n            beforeInit: function beforeInit(swiper) {\n                var thumbs = swiper.params.thumbs;\n                if (!thumbs || !thumbs.swiper) return;\n                swiper.thumbs.init();\n                swiper.thumbs.update(true);\n            },\n            slideChange: function slideChange(swiper) {\n                if (!swiper.thumbs.swiper) return;\n                swiper.thumbs.update();\n            },\n            update: function update(swiper) {\n                if (!swiper.thumbs.swiper) return;\n                swiper.thumbs.update();\n            },\n            resize: function resize(swiper) {\n                if (!swiper.thumbs.swiper) return;\n                swiper.thumbs.update();\n            },\n            observerUpdate: function observerUpdate(swiper) {\n                if (!swiper.thumbs.swiper) return;\n                swiper.thumbs.update();\n            },\n            setTransition: function setTransition(swiper, duration) {\n                var thumbsSwiper = swiper.thumbs.swiper;\n                if (!thumbsSwiper) return;\n                thumbsSwiper.setTransition(duration);\n            },\n            beforeDestroy: function beforeDestroy(swiper) {\n                var thumbsSwiper = swiper.thumbs.swiper;\n                if (!thumbsSwiper) return;\n                if (swiper.thumbs.swiperCreated && thumbsSwiper) thumbsSwiper.destroy();\n            }\n        }\n    };\n    // Swiper Class\n    var components = [\n        Virtual$1,\n        Keyboard$1,\n        Mousewheel$1,\n        Navigation$1,\n        Pagination$1,\n        Scrollbar$1,\n        Parallax$1,\n        Zoom$1,\n        Lazy$1,\n        Controller$1,\n        A11y$1,\n        History$1,\n        HashNavigation$1,\n        Autoplay$1,\n        EffectFade,\n        EffectCube,\n        EffectFlip,\n        EffectCoverflow,\n        Thumbs$1\n    ];\n    Swiper.use(components);\n    return Swiper;\n});\n\n\n\nconst $c519d076f6352209$var$swiper = new (0, (/*@__PURE__*/$parcel$interopDefault($a43b7d65e6bbcaac$exports)))(\".swiper\", {\n    pagination: {\n        el: \".swiper-pagination\",\n        type: \"bullets\",\n        clickable: true\n    },\n    speed: 1000,\n    autoplay: {\n        delay: 3000,\n        disableOnInteraction: false\n    },\n    slidesPerView: 1\n});\n\n\n\n})();\n//# sourceMappingURL=index.7ad0fd9a.js.map\n","import './js/header.js';\nimport './js/hero.js';\n","window.onscroll = changeHeaderBackground;\n\nfunction changeHeaderBackground() {\n  const header = document.querySelector('[data-header]');\n  const headerOffsetTrigger = header.offsetHeight;\n  const pageOffset = window.pageYOffset;\n\n  if (pageOffset > headerOffsetTrigger) {\n    header.classList.add('no-transparency');\n  } else {\n    header.classList.remove('no-transparency');\n  }\n}\n\n(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();","import Swiper from 'swiper/swiper-bundle';\nimport 'swiper/swiper-bundle.css';\n\nconst swiper = new Swiper('.swiper', {\n  pagination: {\n    el: '.swiper-pagination',\n    type: 'bullets',\n    clickable: true,\n  },\n\n  speed: 1000,\n  autoplay: {\n    delay: 3000,\n    disableOnInteraction: false,\n  },\n\n  slidesPerView: 1,\n});\n","/**\n * Swiper 6.8.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2021 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: August 23, 2021\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  /**\n   * SSR Window 3.0.0\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2020, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: November 9, 2020\n   */\n\n  /* eslint-disable no-param-reassign */\n  function isObject$1(obj) {\n    return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n  }\n\n  function extend$1(target, src) {\n    if (target === void 0) {\n      target = {};\n    }\n\n    if (src === void 0) {\n      src = {};\n    }\n\n    Object.keys(src).forEach(function (key) {\n      if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\n        extend$1(target[key], src[key]);\n      }\n    });\n  }\n\n  var ssrDocument = {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: ''\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {}\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        }\n      };\n    },\n    createElementNS: function createElementNS() {\n      return {};\n    },\n    importNode: function importNode() {\n      return null;\n    },\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    }\n  };\n\n  function getDocument() {\n    var doc = typeof document !== 'undefined' ? document : {};\n    extend$1(doc, ssrDocument);\n    return doc;\n  }\n\n  var ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n      userAgent: ''\n    },\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    },\n    history: {\n      replaceState: function replaceState() {},\n      pushState: function pushState() {},\n      go: function go() {},\n      back: function back() {}\n    },\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        }\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n    matchMedia: function matchMedia() {\n      return {};\n    },\n    requestAnimationFrame: function requestAnimationFrame(callback) {\n      if (typeof setTimeout === 'undefined') {\n        callback();\n        return null;\n      }\n\n      return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame: function cancelAnimationFrame(id) {\n      if (typeof setTimeout === 'undefined') {\n        return;\n      }\n\n      clearTimeout(id);\n    }\n  };\n\n  function getWindow() {\n    var win = typeof window !== 'undefined' ? window : {};\n    extend$1(win, ssrWindow);\n    return win;\n  }\n\n  /**\n   * Dom7 3.0.0\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * https://framework7.io/docs/dom7.html\n   *\n   * Copyright 2020, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: November 9, 2020\n   */\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (_isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n  }\n\n  function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !_isNativeFunction(Class)) return Class;\n\n      if (typeof Class !== \"function\") {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n\n        _cache.set(Class, Wrapper);\n      }\n\n      function Wrapper() {\n        return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n      }\n\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      return _setPrototypeOf(Wrapper, Class);\n    };\n\n    return _wrapNativeSuper(Class);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n  /* eslint-disable no-proto */\n\n\n  function makeReactive(obj) {\n    var proto = obj.__proto__;\n    Object.defineProperty(obj, '__proto__', {\n      get: function get() {\n        return proto;\n      },\n      set: function set(value) {\n        proto.__proto__ = value;\n      }\n    });\n  }\n\n  var Dom7 = /*#__PURE__*/function (_Array) {\n    _inheritsLoose(Dom7, _Array);\n\n    function Dom7(items) {\n      var _this;\n\n      _this = _Array.call.apply(_Array, [this].concat(items)) || this;\n      makeReactive(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    return Dom7;\n  }( /*#__PURE__*/_wrapNativeSuper(Array));\n\n  function arrayFlat(arr) {\n    if (arr === void 0) {\n      arr = [];\n    }\n\n    var res = [];\n    arr.forEach(function (el) {\n      if (Array.isArray(el)) {\n        res.push.apply(res, arrayFlat(el));\n      } else {\n        res.push(el);\n      }\n    });\n    return res;\n  }\n\n  function arrayFilter(arr, callback) {\n    return Array.prototype.filter.call(arr, callback);\n  }\n\n  function arrayUnique(arr) {\n    var uniqueArray = [];\n\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n    }\n\n    return uniqueArray;\n  }\n\n  function qsa(selector, context) {\n    if (typeof selector !== 'string') {\n      return [selector];\n    }\n\n    var a = [];\n    var res = context.querySelectorAll(selector);\n\n    for (var i = 0; i < res.length; i += 1) {\n      a.push(res[i]);\n    }\n\n    return a;\n  }\n\n  function $(selector, context) {\n    var window = getWindow();\n    var document = getDocument();\n    var arr = [];\n\n    if (!context && selector instanceof Dom7) {\n      return selector;\n    }\n\n    if (!selector) {\n      return new Dom7(arr);\n    }\n\n    if (typeof selector === 'string') {\n      var html = selector.trim();\n\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        var toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        var tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n\n        for (var i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        arr = qsa(selector.trim(), context || document);\n      } // arr = qsa(selector, document);\n\n    } else if (selector.nodeType || selector === window || selector === document) {\n      arr.push(selector);\n    } else if (Array.isArray(selector)) {\n      if (selector instanceof Dom7) return selector;\n      arr = selector;\n    }\n\n    return new Dom7(arrayUnique(arr));\n  }\n\n  $.fn = Dom7.prototype;\n\n  function addClass() {\n    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n      classes[_key] = arguments[_key];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    this.forEach(function (el) {\n      var _el$classList;\n\n      (_el$classList = el.classList).add.apply(_el$classList, classNames);\n    });\n    return this;\n  }\n\n  function removeClass() {\n    for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      classes[_key2] = arguments[_key2];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    this.forEach(function (el) {\n      var _el$classList2;\n\n      (_el$classList2 = el.classList).remove.apply(_el$classList2, classNames);\n    });\n    return this;\n  }\n\n  function toggleClass() {\n    for (var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      classes[_key3] = arguments[_key3];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    this.forEach(function (el) {\n      classNames.forEach(function (className) {\n        el.classList.toggle(className);\n      });\n    });\n  }\n\n  function hasClass() {\n    for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      classes[_key4] = arguments[_key4];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    return arrayFilter(this, function (el) {\n      return classNames.filter(function (className) {\n        return el.classList.contains(className);\n      }).length > 0;\n    }).length > 0;\n  }\n\n  function attr(attrs, value) {\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) return this[0].getAttribute(attrs);\n      return undefined;\n    } // Set attrs\n\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n\n    return this;\n  }\n\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].style.transform = transform;\n    }\n\n    return this;\n  }\n\n  function transition$1(duration) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].style.transitionDuration = typeof duration !== 'string' ? duration + \"ms\" : duration;\n    }\n\n    return this;\n  }\n\n  function on() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    var eventType = args[0],\n        targetSelector = args[1],\n        listener = args[2],\n        capture = args[3];\n\n    if (typeof args[1] === 'function') {\n      eventType = args[0];\n      listener = args[1];\n      capture = args[2];\n      targetSelector = undefined;\n    }\n\n    if (!capture) capture = false;\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) return;\n      var eventData = e.target.dom7EventData || [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n        var _parents = $(target).parents(); // eslint-disable-line\n\n\n        for (var k = 0; k < _parents.length; k += 1) {\n          if ($(_parents[k]).is(targetSelector)) listener.apply(_parents[k], eventData);\n        }\n      }\n    }\n\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      listener.apply(this, eventData);\n    }\n\n    var events = eventType.split(' ');\n    var j;\n\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) el.dom7Listeners = {};\n          if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var _event = events[j];\n          if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n          if (!el.dom7LiveListeners[_event]) el.dom7LiveListeners[_event] = [];\n\n          el.dom7LiveListeners[_event].push({\n            listener: listener,\n            proxyListener: handleLiveEvent\n          });\n\n          el.addEventListener(_event, handleLiveEvent, capture);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function off() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    var eventType = args[0],\n        targetSelector = args[1],\n        listener = args[2],\n        capture = args[3];\n\n    if (typeof args[1] === 'function') {\n      eventType = args[0];\n      listener = args[1];\n      capture = args[2];\n      targetSelector = undefined;\n    }\n\n    if (!capture) capture = false;\n    var events = eventType.split(' ');\n\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = void 0;\n\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function trigger() {\n    var window = getWindow();\n\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n\n        if (window.CustomEvent) {\n          var evt = new window.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true\n          });\n          el.dom7EventData = args.filter(function (data, dataIndex) {\n            return dataIndex > 0;\n          });\n          el.dispatchEvent(evt);\n          el.dom7EventData = [];\n          delete el.dom7EventData;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function transitionEnd$1(callback) {\n    var dom = this;\n\n    function fireCallBack(e) {\n      if (e.target !== this) return;\n      callback.call(this, e);\n      dom.off('transitionend', fireCallBack);\n    }\n\n    if (callback) {\n      dom.on('transitionend', fireCallBack);\n    }\n\n    return this;\n  }\n\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        var _styles = this.styles();\n\n        return this[0].offsetWidth + parseFloat(_styles.getPropertyValue('margin-right')) + parseFloat(_styles.getPropertyValue('margin-left'));\n      }\n\n      return this[0].offsetWidth;\n    }\n\n    return null;\n  }\n\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        var _styles2 = this.styles();\n\n        return this[0].offsetHeight + parseFloat(_styles2.getPropertyValue('margin-top')) + parseFloat(_styles2.getPropertyValue('margin-bottom'));\n      }\n\n      return this[0].offsetHeight;\n    }\n\n    return null;\n  }\n\n  function offset() {\n    if (this.length > 0) {\n      var window = getWindow();\n      var document = getDocument();\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = document.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === window ? window.scrollY : el.scrollTop;\n      var scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n      return {\n        top: box.top + scrollTop - clientTop,\n        left: box.left + scrollLeft - clientLeft\n      };\n    }\n\n    return null;\n  }\n\n  function styles() {\n    var window = getWindow();\n    if (this[0]) return window.getComputedStyle(this[0], null);\n    return {};\n  }\n\n  function css(props, value) {\n    var window = getWindow();\n    var i;\n\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        // .css('width')\n        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n      } else {\n        // .css({ width: '100px' })\n        for (i = 0; i < this.length; i += 1) {\n          for (var _prop in props) {\n            this[i].style[_prop] = props[_prop];\n          }\n        }\n\n        return this;\n      }\n    }\n\n    if (arguments.length === 2 && typeof props === 'string') {\n      // .css('width', '100px')\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n\n      return this;\n    }\n\n    return this;\n  }\n\n  function each(callback) {\n    if (!callback) return this;\n    this.forEach(function (el, index) {\n      callback.apply(el, [el, index]);\n    });\n    return this;\n  }\n\n  function filter(callback) {\n    var result = arrayFilter(this, callback);\n    return $(result);\n  }\n\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n\n    return this;\n  }\n\n  function text(text) {\n    if (typeof text === 'undefined') {\n      return this[0] ? this[0].textContent.trim() : null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n\n    return this;\n  }\n\n  function is(selector) {\n    var window = getWindow();\n    var document = getDocument();\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') return false;\n\n    if (typeof selector === 'string') {\n      if (el.matches) return el.matches(selector);\n      if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n      if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n      compareWith = $(selector);\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) return true;\n      }\n\n      return false;\n    }\n\n    if (selector === document) {\n      return el === document;\n    }\n\n    if (selector === window) {\n      return el === window;\n    }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  function index() {\n    var child = this[0];\n    var i;\n\n    if (child) {\n      i = 0; // eslint-disable-next-line\n\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) i += 1;\n      }\n\n      return i;\n    }\n\n    return undefined;\n  }\n\n  function eq(index) {\n    if (typeof index === 'undefined') return this;\n    var length = this.length;\n\n    if (index > length - 1) {\n      return $([]);\n    }\n\n    if (index < 0) {\n      var returnIndex = length + index;\n      if (returnIndex < 0) return $([]);\n      return $([this[returnIndex]]);\n    }\n\n    return $([this[index]]);\n  }\n\n  function append() {\n    var newChild;\n    var document = getDocument();\n\n    for (var k = 0; k < arguments.length; k += 1) {\n      newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];\n\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = document.createElement('div');\n          tempDiv.innerHTML = newChild;\n\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function prepend(newChild) {\n    var document = getDocument();\n    var i;\n    var j;\n\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n\n    return this;\n  }\n\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return $([this[0].nextElementSibling]);\n        }\n\n        return $([]);\n      }\n\n      if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n      return $([]);\n    }\n\n    return $([]);\n  }\n\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) return $([]);\n\n    while (el.nextElementSibling) {\n      var _next = el.nextElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(_next).is(selector)) nextEls.push(_next);\n      } else nextEls.push(_next);\n\n      el = _next;\n    }\n\n    return $(nextEls);\n  }\n\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return $([el.previousElementSibling]);\n        }\n\n        return $([]);\n      }\n\n      if (el.previousElementSibling) return $([el.previousElementSibling]);\n      return $([]);\n    }\n\n    return $([]);\n  }\n\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) return $([]);\n\n    while (el.previousElementSibling) {\n      var _prev = el.previousElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(_prev).is(selector)) prevEls.push(_prev);\n      } else prevEls.push(_prev);\n\n      el = _prev;\n    }\n\n    return $(prevEls);\n  }\n\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n\n    return $(parents);\n  }\n\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      var _parent = this[i].parentNode; // eslint-disable-line\n\n      while (_parent) {\n        if (selector) {\n          if ($(_parent).is(selector)) parents.push(_parent);\n        } else {\n          parents.push(_parent);\n        }\n\n        _parent = _parent.parentNode;\n      }\n    }\n\n    return $(parents);\n  }\n\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n\n    if (typeof selector === 'undefined') {\n      return $([]);\n    }\n\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n\n    return closest;\n  }\n\n  function find(selector) {\n    var foundElements = [];\n\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this[i].querySelectorAll(selector);\n\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n\n    return $(foundElements);\n  }\n\n  function children(selector) {\n    var children = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].children;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector || $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n\n    return $(children);\n  }\n\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n    }\n\n    return this;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    transform: transform,\n    transition: transition$1,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd$1,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    styles: styles,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    filter: filter,\n    remove: remove\n  };\n  Object.keys(Methods).forEach(function (methodName) {\n    Object.defineProperty($.fn, methodName, {\n      value: Methods[methodName],\n      writable: true\n    });\n  });\n\n  function deleteProps(obj) {\n    var object = obj;\n    Object.keys(object).forEach(function (key) {\n      try {\n        object[key] = null;\n      } catch (e) {// no getter for object\n      }\n\n      try {\n        delete object[key];\n      } catch (e) {// something got wrong\n      }\n    });\n  }\n\n  function nextTick(callback, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return setTimeout(callback, delay);\n  }\n\n  function now() {\n    return Date.now();\n  }\n\n  function getComputedStyle$1(el) {\n    var window = getWindow();\n    var style;\n\n    if (window.getComputedStyle) {\n      style = window.getComputedStyle(el, null);\n    }\n\n    if (!style && el.currentStyle) {\n      style = el.currentStyle;\n    }\n\n    if (!style) {\n      style = el.style;\n    }\n\n    return style;\n  }\n\n  function getTranslate(el, axis) {\n    if (axis === void 0) {\n      axis = 'x';\n    }\n\n    var window = getWindow();\n    var matrix;\n    var curTransform;\n    var transformMatrix;\n    var curStyle = getComputedStyle$1(el);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(function (a) {\n          return a.replace(',', '.');\n        }).join(', ');\n      } // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n\n\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n        else curTransform = parseFloat(matrix[4]);\n    }\n\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n        else curTransform = parseFloat(matrix[5]);\n    }\n\n    return curTransform || 0;\n  }\n\n  function isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n  }\n\n  function isNode(node) {\n    // eslint-disable-next-line\n    if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n      return node instanceof HTMLElement;\n    }\n\n    return node && (node.nodeType === 1 || node.nodeType === 11);\n  }\n\n  function extend() {\n    var to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n    var noExtend = ['__proto__', 'constructor', 'prototype'];\n\n    for (var i = 1; i < arguments.length; i += 1) {\n      var nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n\n      if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n        var keysArray = Object.keys(Object(nextSource)).filter(function (key) {\n          return noExtend.indexOf(key) < 0;\n        });\n\n        for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          var nextKey = keysArray[nextIndex];\n          var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n          if (desc !== undefined && desc.enumerable) {\n            if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n\n    return to;\n  }\n\n  function bindModuleMethods(instance, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (isObject(obj[key])) {\n        Object.keys(obj[key]).forEach(function (subKey) {\n          if (typeof obj[key][subKey] === 'function') {\n            obj[key][subKey] = obj[key][subKey].bind(instance);\n          }\n        });\n      }\n\n      instance[key] = obj[key];\n    });\n  }\n\n  function classesToSelector(classes) {\n    if (classes === void 0) {\n      classes = '';\n    }\n\n    return \".\" + classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n    .replace(/ /g, '.');\n  }\n\n  function createElementIfNotDefined($container, params, createElements, checkProps) {\n    var document = getDocument();\n\n    if (createElements) {\n      Object.keys(checkProps).forEach(function (key) {\n        if (!params[key] && params.auto === true) {\n          var element = document.createElement('div');\n          element.className = checkProps[key];\n          $container.append(element);\n          params[key] = element;\n        }\n      });\n    }\n\n    return params;\n  }\n\n  var support;\n\n  function calcSupport() {\n    var window = getWindow();\n    var document = getDocument();\n    return {\n      touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n      pointerEvents: !!window.PointerEvent && 'maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints >= 0,\n      observer: function checkObserver() {\n        return 'MutationObserver' in window || 'WebkitMutationObserver' in window;\n      }(),\n      passiveListener: function checkPassiveListener() {\n        var supportsPassive = false;\n\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            }\n          });\n          window.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {// No support\n        }\n\n        return supportsPassive;\n      }(),\n      gestures: function checkGestures() {\n        return 'ongesturestart' in window;\n      }()\n    };\n  }\n\n  function getSupport() {\n    if (!support) {\n      support = calcSupport();\n    }\n\n    return support;\n  }\n\n  var device;\n\n  function calcDevice(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        userAgent = _ref.userAgent;\n\n    var support = getSupport();\n    var window = getWindow();\n    var platform = window.navigator.platform;\n    var ua = userAgent || window.navigator.userAgent;\n    var device = {\n      ios: false,\n      android: false\n    };\n    var screenWidth = window.screen.width;\n    var screenHeight = window.screen.height;\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    var windows = platform === 'Win32';\n    var macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n    var iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n    if (!ipad && macos && support.touch && iPadScreens.indexOf(screenWidth + \"x\" + screenHeight) >= 0) {\n      ipad = ua.match(/(Version)\\/([\\d.]+)/);\n      if (!ipad) ipad = [0, 1, '13_0_0'];\n      macos = false;\n    } // Android\n\n\n    if (android && !windows) {\n      device.os = 'android';\n      device.android = true;\n    }\n\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    } // Export object\n\n\n    return device;\n  }\n\n  function getDevice(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    if (!device) {\n      device = calcDevice(overrides);\n    }\n\n    return device;\n  }\n\n  var browser;\n\n  function calcBrowser() {\n    var window = getWindow();\n\n    function isSafari() {\n      var ua = window.navigator.userAgent.toLowerCase();\n      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n    }\n\n    return {\n      isEdge: !!window.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n    };\n  }\n\n  function getBrowser() {\n    if (!browser) {\n      browser = calcBrowser();\n    }\n\n    return browser;\n  }\n\n  var supportsResizeObserver = function supportsResizeObserver() {\n    var window = getWindow();\n    return typeof window.ResizeObserver !== 'undefined';\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      extend(swiper, {\n        resize: {\n          observer: null,\n          createObserver: function createObserver() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) return;\n            swiper.resize.observer = new ResizeObserver(function (entries) {\n              var width = swiper.width,\n                  height = swiper.height;\n              var newWidth = width;\n              var newHeight = height;\n              entries.forEach(function (_ref) {\n                var contentBoxSize = _ref.contentBoxSize,\n                    contentRect = _ref.contentRect,\n                    target = _ref.target;\n                if (target && target !== swiper.el) return;\n                newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n                newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n              });\n\n              if (newWidth !== width || newHeight !== height) {\n                swiper.resize.resizeHandler();\n              }\n            });\n            swiper.resize.observer.observe(swiper.el);\n          },\n          removeObserver: function removeObserver() {\n            if (swiper.resize.observer && swiper.resize.observer.unobserve && swiper.el) {\n              swiper.resize.observer.unobserve(swiper.el);\n              swiper.resize.observer = null;\n            }\n          },\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) return;\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) return;\n            swiper.emit('orientationchange');\n          }\n        }\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        var window = getWindow();\n\n        if (swiper.params.resizeObserver && supportsResizeObserver()) {\n          swiper.resize.createObserver();\n          return;\n        } // Emit resize\n\n\n        window.addEventListener('resize', swiper.resize.resizeHandler); // Emit orientationchange\n\n        window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy(swiper) {\n        var window = getWindow();\n        swiper.resize.removeObserver();\n        window.removeEventListener('resize', swiper.resize.resizeHandler);\n        window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      }\n    }\n  };\n\n  var Observer = {\n    attach: function attach(target, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var window = getWindow();\n      var swiper = this;\n      var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(observerUpdate);\n        } else {\n          window.setTimeout(observerUpdate, 0);\n        }\n      });\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n      });\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.support.observer || !swiper.params.observer) return;\n\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      } // Observe container\n\n\n      swiper.observer.attach(swiper.$el[0], {\n        childList: swiper.params.observeSlideChildren\n      }); // Observe wrapper\n\n      swiper.observer.attach(swiper.$wrapperEl[0], {\n        attributes: false\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    }\n  };\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        observer: _extends({}, Observer, {\n          observers: []\n        })\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.observer.init();\n      },\n      destroy: function destroy(swiper) {\n        swiper.observer.destroy();\n      }\n    }\n  };\n\n  var modular = {\n    useParams: function useParams(instanceParams) {\n      var instance = this;\n      if (!instance.modules) return;\n      Object.keys(instance.modules).forEach(function (moduleName) {\n        var module = instance.modules[moduleName]; // Extend params\n\n        if (module.params) {\n          extend(instanceParams, module.params);\n        }\n      });\n    },\n    useModules: function useModules(modulesParams) {\n      if (modulesParams === void 0) {\n        modulesParams = {};\n      }\n\n      var instance = this;\n      if (!instance.modules) return;\n      Object.keys(instance.modules).forEach(function (moduleName) {\n        var module = instance.modules[moduleName];\n        var moduleParams = modulesParams[moduleName] || {}; // Add event listeners\n\n        if (module.on && instance.on) {\n          Object.keys(module.on).forEach(function (moduleEventName) {\n            instance.on(moduleEventName, module.on[moduleEventName]);\n          });\n        } // Module create callback\n\n\n        if (module.create) {\n          module.create.bind(instance)(moduleParams);\n        }\n      });\n    }\n  };\n\n  /* eslint-disable no-underscore-dangle */\n  var eventsEmitter = {\n    on: function on(events, handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') return self;\n      var method = priority ? 'unshift' : 'push';\n      events.split(' ').forEach(function (event) {\n        if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n        self.eventsListeners[event][method](handler);\n      });\n      return self;\n    },\n    once: function once(events, handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') return self;\n\n      function onceHandler() {\n        self.off(events, onceHandler);\n\n        if (onceHandler.__emitterProxy) {\n          delete onceHandler.__emitterProxy;\n        }\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        handler.apply(self, args);\n      }\n\n      onceHandler.__emitterProxy = handler;\n      return self.on(events, onceHandler, priority);\n    },\n    onAny: function onAny(handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') return self;\n      var method = priority ? 'unshift' : 'push';\n\n      if (self.eventsAnyListeners.indexOf(handler) < 0) {\n        self.eventsAnyListeners[method](handler);\n      }\n\n      return self;\n    },\n    offAny: function offAny(handler) {\n      var self = this;\n      if (!self.eventsAnyListeners) return self;\n      var index = self.eventsAnyListeners.indexOf(handler);\n\n      if (index >= 0) {\n        self.eventsAnyListeners.splice(index, 1);\n      }\n\n      return self;\n    },\n    off: function off(events, handler) {\n      var self = this;\n      if (!self.eventsListeners) return self;\n      events.split(' ').forEach(function (event) {\n        if (typeof handler === 'undefined') {\n          self.eventsListeners[event] = [];\n        } else if (self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach(function (eventHandler, index) {\n            if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n              self.eventsListeners[event].splice(index, 1);\n            }\n          });\n        }\n      });\n      return self;\n    },\n    emit: function emit() {\n      var self = this;\n      if (!self.eventsListeners) return self;\n      var events;\n      var data;\n      var context;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n        events = args[0];\n        data = args.slice(1, args.length);\n        context = self;\n      } else {\n        events = args[0].events;\n        data = args[0].data;\n        context = args[0].context || self;\n      }\n\n      data.unshift(context);\n      var eventsArray = Array.isArray(events) ? events : events.split(' ');\n      eventsArray.forEach(function (event) {\n        if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n          self.eventsAnyListeners.forEach(function (eventHandler) {\n            eventHandler.apply(context, [event].concat(data));\n          });\n        }\n\n        if (self.eventsListeners && self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach(function (eventHandler) {\n            eventHandler.apply(context, data);\n          });\n        }\n      });\n      return self;\n    }\n  };\n\n  function updateSize() {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n\n    if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n\n    if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n      return;\n    } // Subtract paddings\n\n\n    width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\n    height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\n    if (Number.isNaN(width)) width = 0;\n    if (Number.isNaN(height)) height = 0;\n    extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height\n    });\n  }\n\n  function updateSlides() {\n    var swiper = this;\n\n    function getDirectionLabel(property) {\n      if (swiper.isHorizontal()) {\n        return property;\n      } // prettier-ignore\n\n\n      return {\n        'width': 'height',\n        'margin-top': 'margin-left',\n        'margin-bottom ': 'margin-right',\n        'margin-left': 'margin-top',\n        'margin-right': 'margin-bottom',\n        'padding-left': 'padding-top',\n        'padding-right': 'padding-bottom',\n        'marginRight': 'marginBottom'\n      }[property];\n    }\n\n    function getDirectionPropertyValue(node, label) {\n      return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n    }\n\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl,\n        swiperSize = swiper.size,\n        rtl = swiper.rtlTranslate,\n        wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n    var offsetBefore = params.slidesOffsetBefore;\n\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.slidesGrid.length;\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween; // reset margins\n\n    if (rtl) slides.css({\n      marginLeft: '',\n      marginBottom: '',\n      marginTop: ''\n    });else slides.css({\n      marginRight: '',\n      marginBottom: '',\n      marginTop: ''\n    });\n    var slidesNumberEvenToRows;\n\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    } // Calc slides\n\n\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = void 0;\n        var column = void 0;\n        var row = void 0;\n\n        if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n          var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n          var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n          var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n          row = Math.floor(slideIndexInGroup / columnsInGroup);\n          column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n          newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n          slide.css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex\n          });\n        } else if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - column * slidesPerColumn;\n\n          if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n            row += 1;\n\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - row * slidesPerRow;\n        }\n\n        slide.css(getDirectionLabel('margin-top'), row !== 0 ? params.spaceBetween && params.spaceBetween + \"px\" : '');\n      }\n\n      if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = getComputedStyle(slide[0]);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          var width = getDirectionPropertyValue(slideStyles, 'width');\n          var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n          var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n          var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n          var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n          var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            var _slide$ = slide[0],\n                clientWidth = _slide$.clientWidth,\n                offsetWidth = _slide$.offsetWidth;\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n          }\n        }\n\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n      } else {\n        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n        if (slides[i]) {\n          slides[i].style[getDirectionLabel('width')] = slideSize + \"px\";\n        }\n      }\n\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n\n      slidesSizesGrid.push(slideSize);\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n      prevSlideSize = slideSize;\n      index += 1;\n    }\n\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({\n        width: swiper.virtualSize + params.spaceBetween + \"px\"\n      });\n    }\n\n    if (params.setWrapperSize) {\n      var _$wrapperEl$css;\n\n      $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css));\n    }\n\n    if (params.slidesPerColumn > 1) {\n      var _$wrapperEl$css2;\n\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css2));\n\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n\n        for (var _i = 0; _i < snapGrid.length; _i += 1) {\n          var slidesGridItem = snapGrid[_i];\n          if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n          if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n        }\n\n        snapGrid = newSlidesGrid;\n      }\n    } // Remove last grid elements depending on width\n\n\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n        var _slidesGridItem = snapGrid[_i2];\n        if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n\n        if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(_slidesGridItem);\n        }\n      }\n\n      snapGrid = newSlidesGrid;\n\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n\n    if (snapGrid.length === 0) snapGrid = [0];\n\n    if (params.spaceBetween !== 0) {\n      var _slides$filter$css;\n\n      var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n      slides.filter(function (_, slideIndex) {\n        if (!params.cssMode) return true;\n\n        if (slideIndex === slides.length - 1) {\n          return false;\n        }\n\n        return true;\n      }).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + \"px\", _slides$filter$css));\n    }\n\n    if (params.centeredSlides && params.centeredSlidesBounds) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      var maxSnap = allSlidesSize - swiperSize;\n      snapGrid = snapGrid.map(function (snap) {\n        if (snap < 0) return -offsetBefore;\n        if (snap > maxSnap) return maxSnap + offsetAfter;\n        return snap;\n      });\n    }\n\n    if (params.centerInsufficientSlides) {\n      var _allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      _allSlidesSize -= params.spaceBetween;\n\n      if (_allSlidesSize < swiperSize) {\n        var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) swiper.checkOverflow();\n      swiper.emit('snapGridLengthChange');\n    }\n\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight(speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    var newHeight = 0;\n    var i;\n\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n\n    var getSlideByIndex = function getSlideByIndex(index) {\n      if (isVirtual) {\n        return swiper.slides.filter(function (el) {\n          return parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index;\n        })[0];\n      }\n\n      return swiper.slides.eq(index)[0];\n    }; // Find slides currently in view\n\n\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      if (swiper.params.centeredSlides) {\n        swiper.visibleSlides.each(function (slide) {\n          activeSlides.push(slide);\n        });\n      } else {\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n          var index = swiper.activeIndex + i;\n          if (index > swiper.slides.length && !isVirtual) break;\n          activeSlides.push(getSlideByIndex(index));\n        }\n      }\n    } else {\n      activeSlides.push(getSlideByIndex(swiper.activeIndex));\n    } // Find new height from highest slide in view\n\n\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    } // Update Height\n\n\n    if (newHeight) swiper.$wrapperEl.css('height', newHeight + \"px\");\n  }\n\n  function updateSlidesOffset() {\n    var swiper = this;\n    var slides = swiper.slides;\n\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress(translate) {\n    if (translate === void 0) {\n      translate = this && this.translate || 0;\n    }\n\n    var swiper = this;\n    var params = swiper.params;\n    var slides = swiper.slides,\n        rtl = swiper.rtlTranslate;\n    if (slides.length === 0) return;\n    if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n    var offsetCenter = -translate;\n    if (rtl) offsetCenter = translate; // Visible Slides\n\n    slides.removeClass(params.slideVisibleClass);\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n\n      if (params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress(translate) {\n    var swiper = this;\n\n    if (typeof translate === 'undefined') {\n      var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n      translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n    }\n\n    var params = swiper.params;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress,\n        isBeginning = swiper.isBeginning,\n        isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / translatesDiff;\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n\n    extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd\n    });\n    if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses() {\n    var swiper = this;\n    var slides = swiper.slides,\n        params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        activeIndex = swiper.activeIndex,\n        realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\n    var activeSlide;\n\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\");\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    } // Active classes\n\n\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n      }\n    } // Next Slide\n\n\n    var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\n\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    } // Prev Slide\n\n\n    var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\n\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n      }\n\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n      }\n    }\n\n    swiper.emitSlidesClasses();\n  }\n\n  function updateActiveIndex(newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid,\n        snapGrid = swiper.snapGrid,\n        params = swiper.params,\n        previousIndex = swiper.activeIndex,\n        previousRealIndex = swiper.realIndex,\n        previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      } // Normalize slideIndex\n\n\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n      }\n    }\n\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n    }\n\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n\n      return;\n    } // Get real index\n\n\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n    extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n\n    if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n      swiper.emit('slideChange');\n    }\n  }\n\n  function updateClickedSlide(e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest(\".\" + params.slideClass)[0];\n    var slideFound = false;\n    var slideIndex;\n\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) {\n          slideFound = true;\n          slideIndex = i;\n          break;\n        }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = slideIndex;\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide\n  };\n\n  function getSwiperTranslate(axis) {\n    if (axis === void 0) {\n      axis = this.isHorizontal() ? 'x' : 'y';\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        rtl = swiper.rtlTranslate,\n        translate = swiper.translate,\n        $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    if (params.cssMode) {\n      return translate;\n    }\n\n    var currentTranslate = getTranslate($wrapperEl[0], axis);\n    if (rtl) currentTranslate = -currentTranslate;\n    return currentTranslate || 0;\n  }\n\n  function setTranslate(translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate,\n        params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        wrapperEl = swiper.wrapperEl,\n        progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (params.cssMode) {\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n    } else if (!params.virtualTranslate) {\n      $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\n    }\n\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate() {\n    return -this.snapGrid[0];\n  }\n\n  function maxTranslate() {\n    return -this.snapGrid[this.snapGrid.length - 1];\n  }\n\n  function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n    if (translate === void 0) {\n      translate = 0;\n    }\n\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    if (translateBounds === void 0) {\n      translateBounds = true;\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        wrapperEl = swiper.wrapperEl;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var minTranslate = swiper.minTranslate();\n    var maxTranslate = swiper.maxTranslate();\n    var newTranslate;\n    if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n    swiper.updateProgress(newTranslate);\n\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          var _wrapperEl$scrollTo;\n\n          wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? 'left' : 'top'] = -newTranslate, _wrapperEl$scrollTo.behavior = 'smooth', _wrapperEl$scrollTo));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n        }\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionEnd');\n      }\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionStart');\n      }\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onTranslateToWrapperTransitionEnd) {\n          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.onTranslateToWrapperTransitionEnd = null;\n            delete swiper.onTranslateToWrapperTransitionEnd;\n\n            if (runCallbacks) {\n              swiper.emit('transitionEnd');\n            }\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  var translate = {\n    getTranslate: getSwiperTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n    translateTo: translateTo\n  };\n\n  function setTransition(duration, byController) {\n    var swiper = this;\n\n    if (!swiper.params.cssMode) {\n      swiper.$wrapperEl.transition(duration);\n    }\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart(runCallbacks, direction) {\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex,\n        params = swiper.params,\n        previousIndex = swiper.previousIndex;\n    if (params.cssMode) return;\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n\n    if (!dir) {\n      if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n\n      swiper.emit('slideChangeTransitionStart');\n\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd(runCallbacks, direction) {\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex,\n        previousIndex = swiper.previousIndex,\n        params = swiper.params;\n    swiper.animating = false;\n    if (params.cssMode) return;\n    swiper.setTransition(0);\n    var dir = direction;\n\n    if (!dir) {\n      if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n\n      swiper.emit('slideChangeTransitionEnd');\n\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd\n  };\n\n  function slideTo(index, speed, runCallbacks, internal, initial) {\n    if (index === void 0) {\n      index = 0;\n    }\n\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    if (typeof index !== 'number' && typeof index !== 'string') {\n      throw new Error(\"The 'index' argument cannot have type other than 'number' or 'string'. [\" + typeof index + \"] given.\");\n    }\n\n    if (typeof index === 'string') {\n      /**\n       * The `index` argument converted from `string` to `number`.\n       * @type {number}\n       */\n      var indexAsNumber = parseInt(index, 10);\n      /**\n       * Determines whether the `index` argument is a valid `number`\n       * after being converted from the `string` type.\n       * @type {boolean}\n       */\n\n      var isValidNumber = isFinite(indexAsNumber);\n\n      if (!isValidNumber) {\n        throw new Error(\"The passed-in 'index' (string) couldn't be converted to 'number'. [\" + index + \"] given.\");\n      } // Knowing that the converted `index` is a valid number,\n      // we can update the original argument's value.\n\n\n      index = indexAsNumber;\n    }\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) slideIndex = 0;\n    var params = swiper.params,\n        snapGrid = swiper.snapGrid,\n        slidesGrid = swiper.slidesGrid,\n        previousIndex = swiper.previousIndex,\n        activeIndex = swiper.activeIndex,\n        rtl = swiper.rtlTranslate,\n        wrapperEl = swiper.wrapperEl,\n        enabled = swiper.enabled;\n\n    if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n      return false;\n    }\n\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n    var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex]; // Update progress\n\n    swiper.updateProgress(translate); // Normalize slideIndex\n\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        var normalizedTranslate = -Math.floor(translate * 100);\n        var normalizedGird = Math.floor(slidesGrid[i] * 100);\n        var normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (normalizedTranslate >= normalizedGird && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGird) / 2) {\n            slideIndex = i;\n          } else if (normalizedTranslate >= normalizedGird && normalizedTranslate < normalizedGridNext) {\n            slideIndex = i + 1;\n          }\n        } else if (normalizedTranslate >= normalizedGird) {\n          slideIndex = i;\n        }\n      }\n    } // Directions locks\n\n\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) return false;\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n      swiper.updateActiveIndex(slideIndex); // Update Height\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n\n      swiper.updateSlidesClasses();\n\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n\n      return false;\n    }\n\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n      var t = -translate;\n\n      if (rtl) {\n        t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\n      }\n\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          var _wrapperEl$scrollTo;\n\n          wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? 'left' : 'top'] = t, _wrapperEl$scrollTo.behavior = 'smooth', _wrapperEl$scrollTo));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        }\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop(index, speed, runCallbacks, internal) {\n    if (index === void 0) {\n      index = 0;\n    }\n\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var newIndex = index;\n\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        animating = swiper.animating,\n        enabled = swiper.enabled;\n    if (!enabled) return swiper;\n    var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n\n    if (params.loop) {\n      if (animating && params.loopPreventsSlide) return false;\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        animating = swiper.animating,\n        snapGrid = swiper.snapGrid,\n        slidesGrid = swiper.slidesGrid,\n        rtlTranslate = swiper.rtlTranslate,\n        enabled = swiper.enabled;\n    if (!enabled) return swiper;\n\n    if (params.loop) {\n      if (animating && params.loopPreventsSlide) return false;\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n    function normalize(val) {\n      if (val < 0) return -Math.floor(Math.abs(val));\n      return Math.floor(val);\n    }\n\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) {\n      return normalize(val);\n    });\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\n      snapGrid.forEach(function (snap) {\n        if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n      });\n    }\n\n    var prevIndex;\n\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    }\n\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest(speed, runCallbacks, internal, threshold) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    if (threshold === void 0) {\n      threshold = 0.5;\n    }\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n    var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    if (translate >= swiper.snapGrid[snapIndex]) {\n      // The current translate is on or after the current snap index, so the choice\n      // is between the current index and the one after it.\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n        index += swiper.params.slidesPerGroup;\n      }\n    } else {\n      // The current translate is before the current snap index, so the choice\n      // is between the current index and the one before it.\n      var prevSnap = swiper.snapGrid[snapIndex - 1];\n      var _currentSnap = swiper.snapGrid[snapIndex];\n\n      if (translate - prevSnap <= (_currentSnap - prevSnap) * threshold) {\n        index -= swiper.params.slidesPerGroup;\n      }\n    }\n\n    index = Math.max(index, 0);\n    index = Math.min(index, swiper.slidesGrid.length - 1);\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide() {\n    var swiper = this;\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl;\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n\n    if (params.loop) {\n      if (swiper.animating) return;\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n      if (params.centeredSlides) {\n        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n          nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n        nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide\n  };\n\n  function loopCreate() {\n    var swiper = this;\n    var document = getDocument();\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides\n\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\n    var slides = $wrapperEl.children(\".\" + params.slideClass);\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(document.createElement('div')).addClass(params.slideClass + \" \" + params.slideBlankClass);\n          $wrapperEl.append(blankNode);\n        }\n\n        slides = $wrapperEl.children(\".\" + params.slideClass);\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n    swiper.loopedSlides += params.loopAdditionalSlides;\n\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (el, index) {\n      var slide = $(el);\n\n      if (index < swiper.loopedSlides) {\n        appendSlides.push(el);\n      }\n\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n        prependSlides.push(el);\n      }\n\n      slide.attr('data-swiper-slide-index', index);\n    });\n\n    for (var _i = 0; _i < appendSlides.length; _i += 1) {\n      $wrapperEl.append($(appendSlides[_i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n\n    for (var _i2 = prependSlides.length - 1; _i2 >= 0; _i2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[_i2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix() {\n    var swiper = this;\n    swiper.emit('beforeLoopFix');\n    var activeIndex = swiper.activeIndex,\n        slides = swiper.slides,\n        loopedSlides = swiper.loopedSlides,\n        allowSlidePrev = swiper.allowSlidePrev,\n        allowSlideNext = swiper.allowSlideNext,\n        snapGrid = swiper.snapGrid,\n        rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n    if (activeIndex < loopedSlides) {\n      newIndex = slides.length - loopedSlides * 3 + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if (activeIndex >= slides.length - loopedSlides) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n\n      var _slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (_slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n  }\n\n  function loopDestroy() {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl,\n        params = swiper.params,\n        slides = swiper.slides;\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \",.\" + params.slideClass + \".\" + params.slideBlankClass).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy\n  };\n\n  function setGrabCursor(moving) {\n    var swiper = this;\n    if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor() {\n    var swiper = this;\n\n    if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n      return;\n    }\n\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor\n  };\n\n  function appendSlide(slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl,\n        params = swiper.params;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.append(slides[i]);\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide(slides) {\n    var swiper = this;\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    var newActiveIndex = activeIndex + 1;\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.prepend(slides[i]);\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide(index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl,\n        params = swiper.params,\n        activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n\n    var baseLength = swiper.slides.length;\n\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n    var slidesBuffer = [];\n\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var _i = 0; _i < slides.length; _i += 1) {\n        if (slides[_i]) $wrapperEl.append(slides[_i]);\n      }\n\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var _i2 = 0; _i2 < slidesBuffer.length; _i2 += 1) {\n      $wrapperEl.append(slidesBuffer[_i2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide(slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n      }\n\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides() {\n    var swiper = this;\n    var slidesIndexes = [];\n\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides\n  };\n\n  function closestElement(selector, base) {\n    if (base === void 0) {\n      base = this;\n    }\n\n    function __closestFrom(el) {\n      if (!el || el === getDocument() || el === getWindow()) return null;\n      if (el.assignedSlot) el = el.assignedSlot;\n      var found = el.closest(selector);\n      return found || __closestFrom(el.getRootNode().host);\n    }\n\n    return __closestFrom(base);\n  }\n\n  function onTouchStart(event) {\n    var swiper = this;\n    var document = getDocument();\n    var window = getWindow();\n    var data = swiper.touchEventsData;\n    var params = swiper.params,\n        touches = swiper.touches,\n        enabled = swiper.enabled;\n    if (!enabled) return;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    var $targetEl = $(e.target);\n\n    if (params.touchEventsTarget === 'wrapper') {\n      if (!$targetEl.closest(swiper.wrapperEl).length) return;\n    }\n\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n    if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n    var swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n\n    if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\n      $targetEl = $(event.path[0]);\n    }\n\n    var noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass;\n    var isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n    if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, e.target) : $targetEl.closest(noSwipingSelector)[0])) {\n      swiper.allowClick = true;\n      return;\n    }\n\n    if (params.swipeHandler) {\n      if (!$targetEl.closest(params.swipeHandler)[0]) return;\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n      if (edgeSwipeDetection === 'prevent') {\n        event.preventDefault();\n      } else {\n        return;\n      }\n    }\n\n    extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) data.allowThresholdMove = false;\n\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($targetEl.is(data.focusableElements)) preventDefault = false;\n\n      if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\n        document.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n        e.preventDefault();\n      }\n    }\n\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove(event) {\n    var document = getDocument();\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params,\n        touches = swiper.touches,\n        rtl = swiper.rtlTranslate,\n        enabled = swiper.enabled;\n    if (!enabled) return;\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && e.type !== 'touchmove') return;\n    var targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n    var pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n\n      if (data.isTouched) {\n        extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY\n        });\n        data.touchStartTime = now();\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n        return;\n      }\n    }\n\n    if (data.isTouchEvent && document.activeElement) {\n      if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n\n    if (e.targetTouches && e.targetTouches.length > 1) return;\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) return;\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n\n      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if (diffX * diffX + diffY * diffY >= 25) {\n          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n        }\n      }\n    }\n\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n\n    if (!data.startMoving) {\n      return;\n    }\n\n    swiper.allowClick = false;\n\n    if (!params.cssMode && e.cancelable) {\n      e.preventDefault();\n    }\n\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n\n      data.allowMomentumBounce = false; // Grab Cursor\n\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n\n      swiper.emit('sliderFirstMove', e);\n    }\n\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n    diff *= params.touchRatio;\n    if (rtl) diff = -diff;\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n\n    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    } // Directions locks\n\n\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n      data.currentTranslate = data.startTranslate;\n    } // Threshold\n\n\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime\n        });\n      }\n\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: now()\n      });\n    } // Update progress\n\n\n    swiper.updateProgress(data.currentTranslate); // Update translate\n\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd(event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params,\n        touches = swiper.touches,\n        rtl = swiper.rtlTranslate,\n        $wrapperEl = swiper.$wrapperEl,\n        slidesGrid = swiper.slidesGrid,\n        snapGrid = swiper.snapGrid,\n        enabled = swiper.enabled;\n    if (!enabled) return;\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n\n    data.allowTouchCallbacks = false;\n\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    } // Return Grab Cursor\n\n\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    } // Time diff\n\n\n    var touchEndTime = now();\n    var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap click', e);\n\n      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n        swiper.emit('doubleTap doubleClick', e);\n      }\n    }\n\n    data.lastClickTime = now();\n    nextTick(function () {\n      if (!swiper.destroyed) swiper.allowClick = true;\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    var currentPos;\n\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.cssMode) {\n      return;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          } // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n\n\n          if (time > 150 || now() - lastMoveEvent.time > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) newPosition = -newPosition;\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n\n          newPosition = -newPosition;\n        }\n\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        } // Fix duration\n\n\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n\n          if (params.freeModeSticky) {\n            // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n            // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n            // It's easy to see this when simulating touch with mouse events. To fix this,\n            // limit single-slide swipes to the default slide duration. This also has the\n            // nice side effect of matching slide speed if the user stopped moving before\n            // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n            // For faster swipes, also apply limits (albeit higher ones).\n            var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n            var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n            if (moveDistance < currentSlideSize) {\n              momentumDuration = params.speed;\n            } else if (moveDistance < 2 * currentSlideSize) {\n              momentumDuration = params.speed * 1.5;\n            } else {\n              momentumDuration = params.speed * 2.5;\n            }\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n            swiper.emit('momentumBounce');\n            swiper.setTransition(params.speed);\n            setTimeout(function () {\n              swiper.setTranslate(afterBouncePosition);\n              $wrapperEl.transitionEnd(function () {\n                if (!swiper || swiper.destroyed) return;\n                swiper.transitionEnd();\n              });\n            }, 0);\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.emit('_freeModeNoMomentumRelease');\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      } else if (params.freeMode) {\n        swiper.emit('_freeModeNoMomentumRelease');\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      return;\n    } // Find current slide\n\n\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n\n    for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n      var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n      if (typeof slidesGrid[i + _increment] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + _increment] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    } // Find current slide size\n\n\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n      if (!isNavButtonTarget) {\n        if (swiper.swipeDirection === 'next') {\n          swiper.slideTo(stopIndex + increment);\n        }\n\n        if (swiper.swipeDirection === 'prev') {\n          swiper.slideTo(stopIndex);\n        }\n      } else if (e.target === swiper.navigation.nextEl) {\n        swiper.slideTo(stopIndex + increment);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize() {\n    var swiper = this;\n    var params = swiper.params,\n        el = swiper.el;\n    if (el && el.offsetWidth === 0) return; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Save locks\n\n\n    var allowSlideNext = swiper.allowSlideNext,\n        allowSlidePrev = swiper.allowSlidePrev,\n        snapGrid = swiper.snapGrid; // Disable locks on resize\n\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateSlidesClasses();\n\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n      swiper.autoplay.run();\n    } // Return locks after resize\n\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick(e) {\n    var swiper = this;\n    if (!swiper.enabled) return;\n\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) e.preventDefault();\n\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function onScroll() {\n    var swiper = this;\n    var wrapperEl = swiper.wrapperEl,\n        rtlTranslate = swiper.rtlTranslate,\n        enabled = swiper.enabled;\n    if (!enabled) return;\n    swiper.previousTranslate = swiper.translate;\n\n    if (swiper.isHorizontal()) {\n      if (rtlTranslate) {\n        swiper.translate = wrapperEl.scrollWidth - wrapperEl.offsetWidth - wrapperEl.scrollLeft;\n      } else {\n        swiper.translate = -wrapperEl.scrollLeft;\n      }\n    } else {\n      swiper.translate = -wrapperEl.scrollTop;\n    } // eslint-disable-next-line\n\n\n    if (swiper.translate === -0) swiper.translate = 0;\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== swiper.progress) {\n      swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, false);\n  }\n\n  var dummyEventAttached = false;\n\n  function dummyEventListener() {}\n\n  function attachEvents() {\n    var swiper = this;\n    var document = getDocument();\n    var params = swiper.params,\n        touchEvents = swiper.touchEvents,\n        el = swiper.el,\n        wrapperEl = swiper.wrapperEl,\n        device = swiper.device,\n        support = swiper.support;\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n    if (params.cssMode) {\n      swiper.onScroll = onScroll.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n    var capture = !!params.nested; // Touch Events\n\n    if (!support.touch && support.pointerEvents) {\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (support.touch) {\n        var passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.addEventListener(touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n          passive: false,\n          capture: capture\n        } : capture);\n        el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n        if (touchEvents.cancel) {\n          el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n\n        if (!dummyEventAttached) {\n          document.addEventListener('touchstart', dummyEventListener);\n          dummyEventAttached = true;\n        }\n      }\n\n      if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {\n        el.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    } // Prevent Links Clicks\n\n\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.addEventListener('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl.addEventListener('scroll', swiper.onScroll);\n    } // Resize handler\n\n\n    if (params.updateOnWindowResize) {\n      swiper.on(device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n    } else {\n      swiper.on('observerUpdate', onResize, true);\n    }\n  }\n\n  function detachEvents() {\n    var swiper = this;\n    var document = getDocument();\n    var params = swiper.params,\n        touchEvents = swiper.touchEvents,\n        el = swiper.el,\n        wrapperEl = swiper.wrapperEl,\n        device = swiper.device,\n        support = swiper.support;\n    var capture = !!params.nested; // Touch Events\n\n    if (!support.touch && support.pointerEvents) {\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (support.touch) {\n        var passiveListener = touchEvents.start === 'onTouchStart' && support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n        if (touchEvents.cancel) {\n          el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n      }\n\n      if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {\n        el.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    } // Prevent Links Clicks\n\n\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.removeEventListener('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl.removeEventListener('scroll', swiper.onScroll);\n    } // Resize handler\n\n\n    swiper.off(device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents\n  };\n\n  function setBreakpoint() {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex,\n        initialized = swiper.initialized,\n        _swiper$loopedSlides = swiper.loopedSlides,\n        loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,\n        params = swiper.params,\n        $el = swiper.$el;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n    var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n    if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n    var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n        var paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    var wasMultiRow = params.slidesPerColumn > 1;\n    var isMultiRow = breakpointParams.slidesPerColumn > 1;\n    var wasEnabled = params.enabled;\n\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n      swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(params.containerModifierClass + \"multirow\");\n\n      if (breakpointParams.slidesPerColumnFill && breakpointParams.slidesPerColumnFill === 'column' || !breakpointParams.slidesPerColumnFill && params.slidesPerColumnFill === 'column') {\n        $el.addClass(params.containerModifierClass + \"multirow-column\");\n      }\n\n      swiper.emitContainerClasses();\n    }\n\n    var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    extend(swiper.params, breakpointParams);\n    var isEnabled = swiper.params.enabled;\n    extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev\n    });\n\n    if (wasEnabled && !isEnabled) {\n      swiper.disable();\n    } else if (!wasEnabled && isEnabled) {\n      swiper.enable();\n    }\n\n    swiper.currentBreakpoint = breakpoint;\n    swiper.emit('_beforeBreakpoint', breakpointParams);\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n\n  function getBreakpoint(breakpoints, base, containerEl) {\n    if (base === void 0) {\n      base = 'window';\n    }\n\n    if (!breakpoints || base === 'container' && !containerEl) return undefined;\n    var breakpoint = false;\n    var window = getWindow();\n    var currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n    var points = Object.keys(breakpoints).map(function (point) {\n      if (typeof point === 'string' && point.indexOf('@') === 0) {\n        var minRatio = parseFloat(point.substr(1));\n        var value = currentHeight * minRatio;\n        return {\n          value: value,\n          point: point\n        };\n      }\n\n      return {\n        value: point,\n        point: point\n      };\n    });\n    points.sort(function (a, b) {\n      return parseInt(a.value, 10) - parseInt(b.value, 10);\n    });\n\n    for (var i = 0; i < points.length; i += 1) {\n      var _points$i = points[i],\n          point = _points$i.point,\n          value = _points$i.value;\n\n      if (base === 'window') {\n        if (window.matchMedia(\"(min-width: \" + value + \"px)\").matches) {\n          breakpoint = point;\n        }\n      } else if (value <= containerEl.clientWidth) {\n        breakpoint = point;\n      }\n    }\n\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = {\n    setBreakpoint: setBreakpoint,\n    getBreakpoint: getBreakpoint\n  };\n\n  function prepareClasses(entries, prefix) {\n    var resultClasses = [];\n    entries.forEach(function (item) {\n      if (typeof item === 'object') {\n        Object.keys(item).forEach(function (classNames) {\n          if (item[classNames]) {\n            resultClasses.push(prefix + classNames);\n          }\n        });\n      } else if (typeof item === 'string') {\n        resultClasses.push(prefix + item);\n      }\n    });\n    return resultClasses;\n  }\n\n  function addClasses() {\n    var swiper = this;\n    var classNames = swiper.classNames,\n        params = swiper.params,\n        rtl = swiper.rtl,\n        $el = swiper.$el,\n        device = swiper.device,\n        support = swiper.support; // prettier-ignore\n\n    var suffixes = prepareClasses(['initialized', params.direction, {\n      'pointer-events': support.pointerEvents && !support.touch\n    }, {\n      'free-mode': params.freeMode\n    }, {\n      'autoheight': params.autoHeight\n    }, {\n      'rtl': rtl\n    }, {\n      'multirow': params.slidesPerColumn > 1\n    }, {\n      'multirow-column': params.slidesPerColumn > 1 && params.slidesPerColumnFill === 'column'\n    }, {\n      'android': device.android\n    }, {\n      'ios': device.ios\n    }, {\n      'css-mode': params.cssMode\n    }], params.containerModifierClass);\n    classNames.push.apply(classNames, suffixes);\n    $el.addClass([].concat(classNames).join(' '));\n    swiper.emitContainerClasses();\n  }\n\n  function removeClasses() {\n    var swiper = this;\n    var $el = swiper.$el,\n        classNames = swiper.classNames;\n    $el.removeClass(classNames.join(' '));\n    swiper.emitContainerClasses();\n  }\n\n  var classes = {\n    addClasses: addClasses,\n    removeClasses: removeClasses\n  };\n\n  function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var window = getWindow();\n    var image;\n\n    function onReady() {\n      if (callback) callback();\n    }\n\n    var isPicture = $(imageEl).parent('picture')[0];\n\n    if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n      if (src) {\n        image = new window.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n\n        if (sizes) {\n          image.sizes = sizes;\n        }\n\n        if (srcset) {\n          image.srcset = srcset;\n        }\n\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages() {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n      if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) swiper.update();\n        swiper.emit('imagesReady');\n      }\n    }\n\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var params = swiper.params;\n    var wasLocked = swiper.isLocked;\n    var lastSlidePosition = swiper.slides.length > 0 && params.slidesOffsetBefore + params.spaceBetween * (swiper.slides.length - 1) + swiper.slides[0].offsetWidth * swiper.slides.length;\n\n    if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n      swiper.isLocked = lastSlidePosition <= swiper.size;\n    } else {\n      swiper.isLocked = swiper.snapGrid.length === 1;\n    }\n\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked; // events\n\n    if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      if (swiper.navigation) swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = {\n    checkOverflow: checkOverflow\n  };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    updateOnWindowResize: true,\n    resizeObserver: false,\n    nested: false,\n    createElements: false,\n    enabled: true,\n    focusableElements: 'input, select, option, textarea, button, video, label',\n    // Overrides\n    width: null,\n    height: null,\n    //\n    preventInteractionOnTransition: false,\n    // ssr\n    userAgent: null,\n    url: null,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: 'slide',\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsBase: 'window',\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    centeredSlides: false,\n    centeredSlidesBounds: false,\n    slidesOffsetBefore: 0,\n    // in px\n    slidesOffsetAfter: 0,\n    // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n    loopPreventsSlide: true,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    // NS\n    containerModifierClass: 'swiper-container-',\n    // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n    // Callbacks\n    runCallbacksOnInit: true,\n    // Internals\n    _emitClasses: false\n  };\n\n  var prototypes = {\n    modular: modular,\n    eventsEmitter: eventsEmitter,\n    update: update,\n    translate: translate,\n    transition: transition,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images\n  };\n  var extendedDefaults = {};\n\n  var Swiper = /*#__PURE__*/function () {\n    function Swiper() {\n      var el;\n      var params;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n        params = args[0];\n      } else {\n        el = args[0];\n        params = args[1];\n      }\n\n      if (!params) params = {};\n      params = extend({}, params);\n      if (el && !params.el) params.el = el;\n\n      if (params.el && $(params.el).length > 1) {\n        var swipers = [];\n        $(params.el).each(function (containerEl) {\n          var newParams = extend({}, params, {\n            el: containerEl\n          });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      } // Swiper Instance\n\n\n      var swiper = this;\n      swiper.__swiper__ = true;\n      swiper.support = getSupport();\n      swiper.device = getDevice({\n        userAgent: params.userAgent\n      });\n      swiper.browser = getBrowser();\n      swiper.eventsListeners = {};\n      swiper.eventsAnyListeners = [];\n\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) return;\n\n          if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n            params[moduleParamName] = {\n              auto: true\n            };\n          }\n\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = {\n              enabled: true\n            };\n          }\n\n          if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n            params[moduleParamName].enabled = true;\n          }\n\n          if (!params[moduleParamName]) params[moduleParamName] = {\n            enabled: false\n          };\n        }\n      }); // Extend defaults with modules params\n\n      var swiperParams = extend({}, defaults);\n      swiper.useParams(swiperParams); // Extend defaults with passed params\n\n      swiper.params = extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = extend({}, swiper.params);\n      swiper.passedParams = extend({}, params); // add event listeners\n\n      if (swiper.params && swiper.params.on) {\n        Object.keys(swiper.params.on).forEach(function (eventName) {\n          swiper.on(eventName, swiper.params.on[eventName]);\n        });\n      }\n\n      if (swiper.params && swiper.params.onAny) {\n        swiper.onAny(swiper.params.onAny);\n      } // Save Dom lib\n\n\n      swiper.$ = $; // Extend Swiper\n\n      extend(swiper, {\n        enabled: swiper.params.enabled,\n        el: el,\n        // Classes\n        classNames: [],\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n        //\n        isBeginning: true,\n        isEnd: false,\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n        // Touch Events\n        touchEvents: function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n\n          if (swiper.support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          }\n\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n            cancel: touch[3]\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2]\n          };\n          return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }(),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          focusableElements: swiper.params.focusableElements,\n          // Last click time\n          lastClickTime: now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined\n        },\n        // Clicks\n        allowClick: true,\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0\n        },\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0\n      }); // Install Modules\n\n      swiper.useModules();\n      swiper.emit('_swiper'); // Init\n\n      if (swiper.params.init) {\n        swiper.init();\n      } // Return app instance\n\n\n      return swiper;\n    }\n\n    var _proto = Swiper.prototype;\n\n    _proto.enable = function enable() {\n      var swiper = this;\n      if (swiper.enabled) return;\n      swiper.enabled = true;\n\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      swiper.emit('enable');\n    };\n\n    _proto.disable = function disable() {\n      var swiper = this;\n      if (!swiper.enabled) return;\n      swiper.enabled = false;\n\n      if (swiper.params.grabCursor) {\n        swiper.unsetGrabCursor();\n      }\n\n      swiper.emit('disable');\n    };\n\n    _proto.setProgress = function setProgress(progress, speed) {\n      var swiper = this;\n      progress = Math.min(Math.max(progress, 0), 1);\n      var min = swiper.minTranslate();\n      var max = swiper.maxTranslate();\n      var current = (max - min) * progress + min;\n      swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    };\n\n    _proto.emitContainerClasses = function emitContainerClasses() {\n      var swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      var classes = swiper.el.className.split(' ').filter(function (className) {\n        return className.indexOf('swiper-container') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n      });\n      swiper.emit('_containerClasses', classes.join(' '));\n    };\n\n    _proto.getSlideClasses = function getSlideClasses(slideEl) {\n      var swiper = this;\n      return slideEl.className.split(' ').filter(function (className) {\n        return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n      }).join(' ');\n    };\n\n    _proto.emitSlidesClasses = function emitSlidesClasses() {\n      var swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      var updates = [];\n      swiper.slides.each(function (slideEl) {\n        var classNames = swiper.getSlideClasses(slideEl);\n        updates.push({\n          slideEl: slideEl,\n          classNames: classNames\n        });\n        swiper.emit('_slideClass', slideEl, classNames);\n      });\n      swiper.emit('_slideClasses', updates);\n    };\n\n    _proto.slidesPerViewDynamic = function slidesPerViewDynamic() {\n      var swiper = this;\n      var params = swiper.params,\n          slides = swiper.slides,\n          slidesGrid = swiper.slidesGrid,\n          swiperSize = swiper.size,\n          activeIndex = swiper.activeIndex;\n      var spv = 1;\n\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n\n        for (var _i = activeIndex - 1; _i >= 0; _i -= 1) {\n          if (slides[_i] && !breakLoop) {\n            slideSize += slides[_i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n      } else {\n        for (var _i2 = activeIndex + 1; _i2 < slides.length; _i2 += 1) {\n          if (slidesGrid[_i2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n\n      return spv;\n    };\n\n    _proto.update = function update() {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) return;\n      var snapGrid = swiper.snapGrid,\n          params = swiper.params; // Breakpoints\n\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      var translated;\n\n      if (swiper.params.freeMode) {\n        setTranslate();\n\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n\n        if (!translated) {\n          setTranslate();\n        }\n      }\n\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n\n      swiper.emit('update');\n    };\n\n    _proto.changeDirection = function changeDirection(newDirection, needUpdate) {\n      if (needUpdate === void 0) {\n        needUpdate = true;\n      }\n\n      var swiper = this;\n      var currentDirection = swiper.params.direction;\n\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n\n      if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n        return swiper;\n      }\n\n      swiper.$el.removeClass(\"\" + swiper.params.containerModifierClass + currentDirection).addClass(\"\" + swiper.params.containerModifierClass + newDirection);\n      swiper.emitContainerClasses();\n      swiper.params.direction = newDirection;\n      swiper.slides.each(function (slideEl) {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n      swiper.emit('changeDirection');\n      if (needUpdate) swiper.update();\n      return swiper;\n    };\n\n    _proto.mount = function mount(el) {\n      var swiper = this;\n      if (swiper.mounted) return true; // Find el\n\n      var $el = $(el || swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return false;\n      }\n\n      el.swiper = swiper;\n\n      var getWrapperSelector = function getWrapperSelector() {\n        return \".\" + (swiper.params.wrapperClass || '').trim().split(' ').join('.');\n      };\n\n      var getWrapper = function getWrapper() {\n        if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n          var res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n\n          res.children = function (options) {\n            return $el.children(options);\n          };\n\n          return res;\n        }\n\n        return $el.children(getWrapperSelector());\n      }; // Find Wrapper\n\n\n      var $wrapperEl = getWrapper();\n\n      if ($wrapperEl.length === 0 && swiper.params.createElements) {\n        var document = getDocument();\n        var wrapper = document.createElement('div');\n        $wrapperEl = $(wrapper);\n        wrapper.className = swiper.params.wrapperClass;\n        $el.append(wrapper);\n        $el.children(\".\" + swiper.params.slideClass).each(function (slideEl) {\n          $wrapperEl.append(slideEl);\n        });\n      }\n\n      extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n        mounted: true,\n        // RTL\n        rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n      });\n      return true;\n    };\n\n    _proto.init = function init(el) {\n      var swiper = this;\n      if (swiper.initialized) return swiper;\n      var mounted = swiper.mount(el);\n      if (mounted === false) return swiper;\n      swiper.emit('beforeInit'); // Set breakpoint\n\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      } // Add Classes\n\n\n      swiper.addClasses(); // Create loop\n\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      } // Update size\n\n\n      swiper.updateSize(); // Update slides\n\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      } // Set Grab Cursor\n\n\n      if (swiper.params.grabCursor && swiper.enabled) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      } // Slide To Initial Slide\n\n\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n      } // Attach events\n\n\n      swiper.attachEvents(); // Init Flag\n\n      swiper.initialized = true; // Emit\n\n      swiper.emit('init');\n      swiper.emit('afterInit');\n      return swiper;\n    };\n\n    _proto.destroy = function destroy(deleteInstance, cleanStyles) {\n      if (deleteInstance === void 0) {\n        deleteInstance = true;\n      }\n\n      if (cleanStyles === void 0) {\n        cleanStyles = true;\n      }\n\n      var swiper = this;\n      var params = swiper.params,\n          $el = swiper.$el,\n          $wrapperEl = swiper.$wrapperEl,\n          slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy'); // Init Flag\n\n      swiper.initialized = false; // Detach events\n\n      swiper.detachEvents(); // Destroy loop\n\n      if (params.loop) {\n        swiper.loopDestroy();\n      } // Cleanup styles\n\n\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n\n        if (slides && slides.length) {\n          slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n        }\n      }\n\n      swiper.emit('destroy'); // Detach emitter events\n\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        deleteProps(swiper);\n      }\n\n      swiper.destroyed = true;\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults(newDefaults) {\n      extend(extendedDefaults, newDefaults);\n    };\n\n    Swiper.installModule = function installModule(module) {\n      if (!Swiper.prototype.modules) Swiper.prototype.modules = {};\n      var name = module.name || Object.keys(Swiper.prototype.modules).length + \"_\" + now();\n      Swiper.prototype.modules[name] = module;\n    };\n\n    Swiper.use = function use(module) {\n      if (Array.isArray(module)) {\n        module.forEach(function (m) {\n          return Swiper.installModule(m);\n        });\n        return Swiper;\n      }\n\n      Swiper.installModule(module);\n      return Swiper;\n    };\n\n    _createClass(Swiper, null, [{\n      key: \"extendedDefaults\",\n      get: function get() {\n        return extendedDefaults;\n      }\n    }, {\n      key: \"defaults\",\n      get: function get() {\n        return defaults;\n      }\n    }]);\n\n    return Swiper;\n  }();\n\n  Object.keys(prototypes).forEach(function (prototypeGroup) {\n    Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n      Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n    });\n  });\n  Swiper.use([Resize, Observer$1]);\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var _swiper$params = swiper.params,\n          slidesPerView = _swiper$params.slidesPerView,\n          slidesPerGroup = _swiper$params.slidesPerGroup,\n          centeredSlides = _swiper$params.centeredSlides;\n      var _swiper$params$virtua = swiper.params.virtual,\n          addSlidesBefore = _swiper$params$virtua.addSlidesBefore,\n          addSlidesAfter = _swiper$params$virtua.addSlidesAfter;\n      var _swiper$virtual = swiper.virtual,\n          previousFrom = _swiper$virtual.from,\n          previousTo = _swiper$virtual.to,\n          slides = _swiper$virtual.slides,\n          previousSlidesGrid = _swiper$virtual.slidesGrid,\n          renderSlide = _swiper$virtual.renderSlide,\n          previousOffset = _swiper$virtual.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n      var offsetProp;\n      if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n      var slidesAfter;\n      var slidesBefore;\n\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n        slidesBefore = slidesPerGroup + addSlidesBefore;\n      }\n\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n      extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, offset + \"px\");\n        }\n\n        swiper.updateProgress();\n        return;\n      }\n\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: function getSlides() {\n            var slidesToRender = [];\n\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n\n            return slidesToRender;\n          }()\n        });\n\n        if (swiper.params.virtual.renderExternalUpdate) {\n          onRendered();\n        }\n\n        return;\n      }\n\n      var prependIndexes = [];\n      var appendIndexes = [];\n\n      if (force) {\n        swiper.$wrapperEl.find(\".\" + swiper.params.slideClass).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\").remove();\n          }\n        }\n      }\n\n      for (var _i = 0; _i < slides.length; _i += 1) {\n        if (_i >= from && _i <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(_i);\n          } else {\n            if (_i > previousTo) appendIndexes.push(_i);\n            if (_i < previousFrom) prependIndexes.push(_i);\n          }\n        }\n      }\n\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) {\n        return b - a;\n      }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, offset + \"px\");\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n\n      var $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(\"<div class=\\\"\" + swiper.params.slideClass + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\");\n      if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n      if (params.cache) swiper.virtual.cache[index] = $slideEl;\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slides) {\n      var swiper = this;\n\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) swiper.virtual.slides.push(slides[i]);\n        }\n      } else {\n        swiper.virtual.slides.push(slides);\n      }\n\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slides) {\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var newActiveIndex = activeIndex + 1;\n      var numberOfNewSlides = 1;\n\n      if (Array.isArray(slides)) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n        }\n\n        newActiveIndex = activeIndex + slides.length;\n        numberOfNewSlides = slides.length;\n      } else {\n        swiper.virtual.slides.unshift(slides);\n      }\n\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          var $cachedEl = cache[cachedIndex];\n          var cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n          if (cachedElIndex) {\n            $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n          }\n\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n        });\n        swiper.virtual.cache = newCache;\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(newActiveIndex, 0);\n    },\n    removeSlide: function removeSlide(slidesIndexes) {\n      var swiper = this;\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n      var activeIndex = swiper.activeIndex;\n\n      if (Array.isArray(slidesIndexes)) {\n        for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes[i]];\n          }\n\n          if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n          activeIndex = Math.max(activeIndex, 0);\n        }\n      } else {\n        swiper.virtual.slides.splice(slidesIndexes, 1);\n\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes];\n        }\n\n        if (slidesIndexes < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(activeIndex, 0);\n    },\n    removeAllSlides: function removeAllSlides() {\n      var swiper = this;\n      swiper.virtual.slides = [];\n\n      if (swiper.params.virtual.cache) {\n        swiper.virtual.cache = {};\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(0, 0);\n    }\n  };\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        renderExternalUpdate: true,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        virtual: _extends({}, Virtual, {\n          slides: swiper.params.virtual.slides,\n          cache: {}\n        })\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (!swiper.params.virtual.enabled) return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"virtual\");\n        var overwriteParams = {\n          watchSlidesProgress: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (!swiper.params.virtual.enabled) return;\n        swiper.virtual.update();\n      }\n    }\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      if (!swiper.enabled) return;\n      var window = getWindow();\n      var document = getDocument();\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n      var kc = e.keyCode || e.charCode;\n      var pageUpDown = swiper.params.keyboard.pageUpDown;\n      var isPageUp = pageUpDown && kc === 33;\n      var isPageDown = pageUpDown && kc === 34;\n      var isArrowLeft = kc === 37;\n      var isArrowRight = kc === 39;\n      var isArrowUp = kc === 38;\n      var isArrowDown = kc === 40; // Directions locks\n\n      if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n        return false;\n      }\n\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n\n      if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n\n      if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n        var inView = false; // Check that swiper should be inside of visible area of window\n\n        if (swiper.$el.parents(\".\" + swiper.params.slideClass).length > 0 && swiper.$el.parents(\".\" + swiper.params.slideActiveClass).length === 0) {\n          return undefined;\n        }\n\n        var $el = swiper.$el;\n        var swiperWidth = $el[0].clientWidth;\n        var swiperHeight = $el[0].clientHeight;\n        var windowWidth = window.innerWidth;\n        var windowHeight = window.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n        var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n\n          if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n            if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n            inView = true;\n          }\n        }\n\n        if (!inView) return undefined;\n      }\n\n      if (swiper.isHorizontal()) {\n        if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        }\n\n        if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n        if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n      } else {\n        if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        }\n\n        if (isPageDown || isArrowDown) swiper.slideNext();\n        if (isPageUp || isArrowUp) swiper.slidePrev();\n      }\n\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      var document = getDocument();\n      if (swiper.keyboard.enabled) return;\n      $(document).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      var document = getDocument();\n      if (!swiper.keyboard.enabled) return;\n      $(document).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    }\n  };\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n        pageUpDown: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        keyboard: _extends({\n          enabled: false\n        }, Keyboard)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      }\n    }\n  };\n\n  /* eslint-disable consistent-return */\n\n  function isEventSupported() {\n    var document = getDocument();\n    var eventName = 'onwheel';\n    var isSupported = (eventName in document);\n\n    if (!isSupported) {\n      var element = document.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported && document.implementation && document.implementation.hasFeature && // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n\n  var Mousewheel = {\n    lastScrollTime: now(),\n    lastEventBeforeSnap: undefined,\n    recentWheelEvents: [],\n    event: function event() {\n      var window = getWindow();\n      if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    },\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n      // Legacy\n\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      } // side scrolling on FF with DOMMouseScroll\n\n\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if (e.shiftKey && !pX) {\n        // if user scrolls with shift he wants horizontal scroll\n        pX = pY;\n        pY = 0;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) {\n          // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else {\n          // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      } // Fall-back if spin cannot be determined\n\n\n      if (pX && !sX) {\n        sX = pX < 1 ? -1 : 1;\n      }\n\n      if (pY && !sY) {\n        sY = pY < 1 ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      if (!swiper.enabled) return;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      if (!swiper.enabled) return;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var disableParentSwiper = true;\n      var swiper = this;\n      if (!swiper.enabled) return;\n      var params = swiper.params.mousewheel;\n\n      if (swiper.params.cssMode) {\n        e.preventDefault();\n      }\n\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) return true;\n      if (params.invert) delta = -delta; // Get the scroll positions\n\n      var positions = swiper.getTranslate() + delta * params.sensitivity;\n      if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n      if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n      //     the disableParentSwiper will be true.\n      // When loop is false:\n      //     if the scroll positions is not on edge,\n      //     then the disableParentSwiper will be true.\n      //     if the scroll on edge positions,\n      //     then the disableParentSwiper will be false.\n\n      disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n      if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n      if (!swiper.params.freeMode) {\n        // Register the new event in a variable which stores the relevant data\n        var newEvent = {\n          time: now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta),\n          raw: event\n        }; // Keep the most recent events\n\n        var recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n\n        if (recentWheelEvents.length >= 2) {\n          recentWheelEvents.shift(); // only store the last N events\n        }\n\n        var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n        recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n        //   If direction has changed or\n        //   if the scroll is quicker than the previous one:\n        //     Animate the slider.\n        // Else (this is the first time the wheel is moved):\n        //     Animate the slider.\n\n        if (prevEvent) {\n          if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n            swiper.mousewheel.animateSlider(newEvent);\n          }\n        } else {\n          swiper.mousewheel.animateSlider(newEvent);\n        } // If it's time to release the scroll:\n        //   Return now so you don't hit the preventDefault.\n\n\n        if (swiper.mousewheel.releaseScroll(newEvent)) {\n          return true;\n        }\n      } else {\n        // Freemode or scrollContainer:\n        // If we recently snapped after a momentum scroll, then ignore wheel events\n        // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n        // or if it's a new scroll (larger delta or inverse sign as last event before\n        // an end-of-momentum snap).\n        var _newEvent = {\n          time: now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta)\n        };\n        var lastEventBeforeSnap = swiper.mousewheel.lastEventBeforeSnap;\n        var ignoreWheelEvents = lastEventBeforeSnap && _newEvent.time < lastEventBeforeSnap.time + 500 && _newEvent.delta <= lastEventBeforeSnap.delta && _newEvent.direction === lastEventBeforeSnap.direction;\n\n        if (!ignoreWheelEvents) {\n          swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n          if (swiper.params.loop) {\n            swiper.loopFix();\n          }\n\n          var position = swiper.getTranslate() + delta * params.sensitivity;\n          var wasBeginning = swiper.isBeginning;\n          var wasEnd = swiper.isEnd;\n          if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n          if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n          swiper.setTransition(0);\n          swiper.setTranslate(position);\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n\n          if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n            swiper.updateSlidesClasses();\n          }\n\n          if (swiper.params.freeModeSticky) {\n            // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n            // the end of a momentum scroll by storing recent (N=15?) wheel events.\n            // 1. do all N events have decreasing or same (absolute value) delta?\n            // 2. did all N events arrive in the last M (M=500?) msecs?\n            // 3. does the earliest event have an (absolute value) delta that's\n            //    at least P (P=1?) larger than the most recent event's delta?\n            // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n            // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n            // Snap immediately and ignore remaining wheel events in this scroll.\n            // See comment above for \"remaining wheel events in this scroll\" determination.\n            // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n            clearTimeout(swiper.mousewheel.timeout);\n            swiper.mousewheel.timeout = undefined;\n            var _recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n\n            if (_recentWheelEvents.length >= 15) {\n              _recentWheelEvents.shift(); // only store the last N events\n\n            }\n\n            var _prevEvent = _recentWheelEvents.length ? _recentWheelEvents[_recentWheelEvents.length - 1] : undefined;\n\n            var firstEvent = _recentWheelEvents[0];\n\n            _recentWheelEvents.push(_newEvent);\n\n            if (_prevEvent && (_newEvent.delta > _prevEvent.delta || _newEvent.direction !== _prevEvent.direction)) {\n              // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n              _recentWheelEvents.splice(0);\n            } else if (_recentWheelEvents.length >= 15 && _newEvent.time - firstEvent.time < 500 && firstEvent.delta - _newEvent.delta >= 1 && _newEvent.delta <= 6) {\n              // We're at the end of the deceleration of a momentum scroll, so there's no need\n              // to wait for more events. Snap ASAP on the next tick.\n              // Also, because there's some remaining momentum we'll bias the snap in the\n              // direction of the ongoing scroll because it's better UX for the scroll to snap\n              // in the same direction as the scroll instead of reversing to snap.  Therefore,\n              // if it's already scrolled more than 20% in the current direction, keep going.\n              var snapToThreshold = delta > 0 ? 0.8 : 0.2;\n              swiper.mousewheel.lastEventBeforeSnap = _newEvent;\n\n              _recentWheelEvents.splice(0);\n\n              swiper.mousewheel.timeout = nextTick(function () {\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 0); // no delay; move on next tick\n            }\n\n            if (!swiper.mousewheel.timeout) {\n              // if we get here, then we haven't detected the end of a momentum scroll, so\n              // we'll consider a scroll \"complete\" when there haven't been any wheel events\n              // for 500ms.\n              swiper.mousewheel.timeout = nextTick(function () {\n                var snapToThreshold = 0.5;\n                swiper.mousewheel.lastEventBeforeSnap = _newEvent;\n\n                _recentWheelEvents.splice(0);\n\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 500);\n            }\n          } // Emit event\n\n\n          if (!ignoreWheelEvents) swiper.emit('scroll', e); // Stop autoplay\n\n          if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n\n          if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n        }\n      }\n\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      return false;\n    },\n    animateSlider: function animateSlider(newEvent) {\n      var swiper = this;\n      var window = getWindow();\n\n      if (this.params.mousewheel.thresholdDelta && newEvent.delta < this.params.mousewheel.thresholdDelta) {\n        // Prevent if delta of wheel scroll delta is below configured threshold\n        return false;\n      }\n\n      if (this.params.mousewheel.thresholdTime && now() - swiper.mousewheel.lastScrollTime < this.params.mousewheel.thresholdTime) {\n        // Prevent if time between scrolls is below configured threshold\n        return false;\n      } // If the movement is NOT big enough and\n      // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n      //   Don't go any further (avoid insignificant scroll movement).\n\n\n      if (newEvent.delta >= 6 && now() - swiper.mousewheel.lastScrollTime < 60) {\n        // Return false as a default\n        return true;\n      } // If user is scrolling towards the end:\n      //   If the slider hasn't hit the latest slide or\n      //   if the slider is a loop and\n      //   if the slider isn't moving right now:\n      //     Go to next slide and\n      //     emit a scroll event.\n      // Else (the user is scrolling towards the beginning) and\n      // if the slider hasn't hit the first slide or\n      // if the slider is a loop and\n      // if the slider isn't moving right now:\n      //   Go to prev slide and\n      //   emit a scroll event.\n\n\n      if (newEvent.direction < 0) {\n        if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n          swiper.slideNext();\n          swiper.emit('scroll', newEvent.raw);\n        }\n      } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n        swiper.slidePrev();\n        swiper.emit('scroll', newEvent.raw);\n      } // If you got here is because an animation has been triggered so store the current time\n\n\n      swiper.mousewheel.lastScrollTime = new window.Date().getTime(); // Return false as a default\n\n      return false;\n    },\n    releaseScroll: function releaseScroll(newEvent) {\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (newEvent.direction < 0) {\n        if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n      } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      var event = Mousewheel.event();\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n        return true;\n      }\n\n      if (!event) return false;\n      if (swiper.mousewheel.enabled) return false;\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      var event = Mousewheel.event();\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n        return true;\n      }\n\n      if (!event) return false;\n      if (!swiper.mousewheel.enabled) return false;\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      target.off(event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    }\n  };\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarget: 'container',\n        thresholdDelta: null,\n        thresholdTime: null\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        mousewheel: {\n          enabled: false,\n          lastScrollTime: now(),\n          lastEventBeforeSnap: undefined,\n          recentWheelEvents: [],\n          enable: Mousewheel.enable,\n          disable: Mousewheel.disable,\n          handle: Mousewheel.handle,\n          handleMouseEnter: Mousewheel.handleMouseEnter,\n          handleMouseLeave: Mousewheel.handleMouseLeave,\n          animateSlider: Mousewheel.animateSlider,\n          releaseScroll: Mousewheel.releaseScroll\n        }\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n          swiper.mousewheel.disable();\n        }\n\n        if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.params.cssMode) {\n          swiper.mousewheel.enable();\n        }\n\n        if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n      }\n    }\n  };\n\n  var Navigation = {\n    toggleEl: function toggleEl($el, disabled) {\n      $el[disabled ? 'addClass' : 'removeClass'](this.params.navigation.disabledClass);\n      if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n    },\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n      var toggleEl = swiper.navigation.toggleEl;\n      if (swiper.params.loop) return;\n      var _swiper$navigation = swiper.navigation,\n          $nextEl = _swiper$navigation.$nextEl,\n          $prevEl = _swiper$navigation.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          toggleEl($prevEl, true);\n        } else {\n          toggleEl($prevEl, false);\n        }\n\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          $prevEl[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          toggleEl($nextEl, true);\n        } else {\n          toggleEl($nextEl, false);\n        }\n\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          $nextEl[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n        }\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) return;\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) return;\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      swiper.params.navigation = createElementIfNotDefined(swiper.$el, swiper.params.navigation, swiper.params.createElements, {\n        nextEl: 'swiper-button-next',\n        prevEl: 'swiper-button-prev'\n      });\n      if (!(params.nextEl || params.prevEl)) return;\n      var $nextEl;\n      var $prevEl;\n\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n\n        if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n\n        if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0]\n      });\n\n      if (!swiper.enabled) {\n        if ($nextEl) $nextEl.addClass(params.lockClass);\n        if ($prevEl) $prevEl.addClass(params.lockClass);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var _swiper$navigation2 = swiper.navigation,\n          $nextEl = _swiper$navigation2.$nextEl,\n          $prevEl = _swiper$navigation2.$prevEl;\n\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    }\n  };\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        navigation: _extends({}, Navigation)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge(swiper) {\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge(swiper) {\n        swiper.navigation.update();\n      },\n      destroy: function destroy(swiper) {\n        swiper.navigation.destroy();\n      },\n      'enable disable': function enableDisable(swiper) {\n        var _swiper$navigation3 = swiper.navigation,\n            $nextEl = _swiper$navigation3.$nextEl,\n            $prevEl = _swiper$navigation3.$prevEl;\n\n        if ($nextEl) {\n          $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n        }\n\n        if ($prevEl) {\n          $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n        }\n      },\n      click: function click(swiper, e) {\n        var _swiper$navigation4 = swiper.navigation,\n            $nextEl = _swiper$navigation4.$nextEl,\n            $prevEl = _swiper$navigation4.$prevEl;\n        var targetEl = e.target;\n\n        if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n          if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n          var isHidden;\n\n          if ($nextEl) {\n            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n          } else if ($prevEl) {\n            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n          }\n\n          if (isHidden === true) {\n            swiper.emit('navigationShow');\n          } else {\n            swiper.emit('navigationHide');\n          }\n\n          if ($nextEl) {\n            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n\n          if ($prevEl) {\n            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n        }\n      }\n    }\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el; // Current/Total\n\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n        if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n          current -= slidesLength - swiper.loopedSlides * 2;\n        }\n\n        if (current > total - 1) current -= total;\n        if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      } // Types\n\n\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\n\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;\n\n            if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n\n        bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\n\n        if ($el.length > 1) {\n          bullets.each(function (bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(params.bulletActiveClass + \"-main\");\n              }\n\n              if (bulletIndex === firstIndex) {\n                $bullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n              }\n\n              if (bulletIndex === lastIndex) {\n                $bullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          var bulletIndex = $bullet.index();\n          $bullet.addClass(params.bulletActiveClass);\n\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\n            }\n\n            if (swiper.params.loop) {\n              if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n                for (var _i = params.dynamicMainBullets; _i >= 0; _i -= 1) {\n                  bullets.eq(bullets.length - _i).addClass(params.bulletActiveClass + \"-main\");\n                }\n\n                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(params.bulletActiveClass + \"-prev\");\n              } else {\n                $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n              }\n            } else {\n              $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n              $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n            }\n          }\n        }\n\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - midIndex * swiper.pagination.bulletSize;\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + \"px\");\n        }\n      }\n\n      if (params.type === 'fraction') {\n        $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n        $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n      }\n\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n\n        $el.find(classesToSelector(params.progressbarFillClass)).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\n      }\n\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', $el[0]);\n      }\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n        if (swiper.params.freeMode && !swiper.params.loop && numberOfBullets > slidesLength) {\n          numberOfBullets = slidesLength;\n        }\n\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + params.bulletElement + \" class=\\\"\" + params.bulletClass + \"\\\"></\" + params.bulletElement + \">\";\n          }\n        }\n\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n      }\n\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + params.currentClass + \"\\\"></span>\" + ' / ' + (\"<span class=\\\"\" + params.totalClass + \"\\\"></span>\");\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + params.progressbarFillClass + \"\\\"></span>\";\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      swiper.params.pagination = createElementIfNotDefined(swiper.$el, swiper.params.pagination, swiper.params.createElements, {\n        el: 'swiper-pagination'\n      });\n      var params = swiper.params.pagination;\n      if (!params.el) return;\n      var $el = $(params.el);\n      if ($el.length === 0) return;\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\n        swiper.pagination.dynamicBulletIndex = 0;\n\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) index += swiper.loopedSlides;\n          swiper.slideTo(index);\n        });\n      }\n\n      extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0]\n      });\n\n      if (!swiper.enabled) {\n        $el.addClass(params.lockClass);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n      var $el = swiper.pagination.$el;\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n\n      if (params.clickable) {\n        $el.off('click', classesToSelector(params.bulletClass));\n      }\n    }\n  };\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets',\n        // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function formatFractionCurrent(number) {\n          return number;\n        },\n        formatFractionTotal: function formatFractionTotal(number) {\n          return number;\n        },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-',\n        // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable',\n        // NEW\n        lockClass: 'swiper-pagination-lock'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        pagination: _extends({\n          dynamicBulletIndex: 0\n        }, Pagination)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange(swiper) {\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange(swiper) {\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange(swiper) {\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange(swiper) {\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy(swiper) {\n        swiper.pagination.destroy();\n      },\n      'enable disable': function enableDisable(swiper) {\n        var $el = swiper.pagination.$el;\n\n        if ($el) {\n          $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\n        }\n      },\n      click: function click(swiper, e) {\n        var targetEl = e.target;\n\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n          if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n          var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n\n          if (isHidden === true) {\n            swiper.emit('paginationShow');\n          } else {\n            swiper.emit('paginationHide');\n          }\n\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      }\n    }\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      var scrollbar = swiper.scrollbar,\n          rtl = swiper.rtlTranslate,\n          progress = swiper.progress;\n      var dragSize = scrollbar.dragSize,\n          trackSize = scrollbar.trackSize,\n          $dragEl = scrollbar.$dragEl,\n          $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n\n      if (rtl) {\n        newPos = -newPos;\n\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl,\n          $el = scrollbar.$el;\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n\n      if (swiper.params.scrollbar.hide) {\n        $el[0].style.opacity = 0;\n      }\n\n      extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize\n      });\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n      }\n    },\n    getPointerPosition: function getPointerPosition(e) {\n      var swiper = this;\n\n      if (swiper.isHorizontal()) {\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n      }\n\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar,\n          rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el,\n          dragSize = scrollbar.dragSize,\n          trackSize = scrollbar.trackSize,\n          dragStartPos = scrollbar.dragStartPos;\n      var positionRatio;\n      positionRatio = (scrollbar.getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar,\n          $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el,\n          $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      swiper.scrollbar.dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n      e.preventDefault();\n      e.stopPropagation();\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      $el.transition(0);\n\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', 'none');\n      }\n\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar,\n          $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el,\n          $dragEl = scrollbar.$dragEl;\n      if (!swiper.scrollbar.isTouched) return;\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar,\n          $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      if (!swiper.scrollbar.isTouched) return;\n      swiper.scrollbar.isTouched = false;\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', '');\n        $wrapperEl.transition('');\n      }\n\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n\n      swiper.emit('scrollbarDragEnd', e);\n\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) return;\n      var document = getDocument();\n      var scrollbar = swiper.scrollbar,\n          touchEventsTouch = swiper.touchEventsTouch,\n          touchEventsDesktop = swiper.touchEventsDesktop,\n          params = swiper.params,\n          support = swiper.support;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = support.passiveListener && params.passiveListeners ? {\n        passive: false,\n        capture: false\n      } : false;\n      var passiveListener = support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      if (!target) return;\n\n      if (!support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) return;\n      var document = getDocument();\n      var scrollbar = swiper.scrollbar,\n          touchEventsTouch = swiper.touchEventsTouch,\n          touchEventsDesktop = swiper.touchEventsDesktop,\n          params = swiper.params,\n          support = swiper.support;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = support.passiveListener && params.passiveListeners ? {\n        passive: false,\n        capture: false\n      } : false;\n      var passiveListener = support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      if (!target) return;\n\n      if (!support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar,\n          $swiperEl = swiper.$el;\n      swiper.params.scrollbar = createElementIfNotDefined($swiperEl, swiper.params.scrollbar, swiper.params.createElements, {\n        el: 'swiper-scrollbar'\n      });\n      var params = swiper.params.scrollbar;\n      if (!params.el) return;\n      var $el = $(params.el);\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\n\n      if ($dragEl.length === 0) {\n        $dragEl = $(\"<div class=\\\"\" + swiper.params.scrollbar.dragClass + \"\\\"></div>\");\n        $el.append($dragEl);\n      }\n\n      extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0]\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n\n      if ($el) {\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    }\n  };\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        scrollbar: _extends({\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null\n        }, Scrollbar)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update(swiper) {\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize(swiper) {\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate(swiper) {\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate(swiper) {\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        swiper.scrollbar.setTransition(duration);\n      },\n      'enable disable': function enableDisable(swiper) {\n        var $el = swiper.scrollbar.$el;\n\n        if ($el) {\n          $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n        }\n      },\n      destroy: function destroy(swiper) {\n        swiper.scrollbar.destroy();\n      }\n    }\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if (x.indexOf('%') >= 0) {\n        x = parseInt(x, 10) * progress * rtlFactor + \"%\";\n      } else {\n        x = x * progress * rtlFactor + \"px\";\n      }\n\n      if (y.indexOf('%') >= 0) {\n        y = parseInt(y, 10) * progress + \"%\";\n      } else {\n        y = y * progress + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n        $el[0].style.opacity = currentOpacity;\n      }\n\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px)\");\n      } else {\n        var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n        $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\");\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el,\n          slides = swiper.slides,\n          progress = swiper.progress,\n          snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (el) {\n        swiper.parallax.setTransform(el, progress);\n      });\n      slides.each(function (slideEl, slideIndex) {\n        var slideProgress = slideEl.progress;\n\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n        }\n\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (el) {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if (duration === void 0) {\n        duration = this.params.speed;\n      }\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (parallaxEl) {\n        var $parallaxEl = $(parallaxEl);\n        var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n    }\n  };\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        parallax: _extends({}, Parallax)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init(swiper) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.parallax.setTransition(duration);\n      }\n    }\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) return 1;\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var support = swiper.support;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n\n      if (!support.gestures) {\n        if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest(\".\" + swiper.params.slideClass);\n        if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transition(0);\n      }\n\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var support = swiper.support;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (!support.gestures) {\n        if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        if (e.type === 'gesturechange') zoom.onGestureStart(e);\n        return;\n      }\n\n      if (support.gestures) {\n        zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * zoom.currentScale;\n      }\n\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);\n      }\n\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);\n      }\n\n      gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var device = swiper.device;\n      var support = swiper.support;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (!support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n\n        if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\n          return;\n        }\n\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) gesture.$slideEl = undefined;\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var device = swiper.device;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      if (image.isTouched) return;\n      if (device.android && e.cancelable) e.preventDefault();\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image,\n          velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) return;\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n      } // Define if we need image drag\n\n\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n          image.isTouched = false;\n          return;\n        }\n\n        if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n          image.isTouched = false;\n          return;\n        }\n      }\n\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n\n      e.stopPropagation();\n      image.isMoved = true;\n      image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n      image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);\n      }\n\n      if (image.currentX > image.maxX) {\n        image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);\n      }\n\n      if (image.currentY > image.maxY) {\n        image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);\n      } // Velocity\n\n\n      if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n      if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n      if (!velocity.prevTime) velocity.prevTime = Date.now();\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n      gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image,\n          velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n      if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n      if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n      image.currentX = newPositionX;\n      image.currentY = newPositionY; // Define if we need image drag\n\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n      gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        if (gesture.$imageEl) {\n          gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        }\n\n        if (gesture.$imageWrapEl) {\n          gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        }\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function _in(e) {\n      var swiper = this;\n      var window = getWindow();\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        if (e && e.target) {\n          gesture.$slideEl = $(e.target).closest(\".\" + swiper.params.slideClass);\n        }\n\n        if (!gesture.$slideEl) {\n          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n            gesture.$slideEl = swiper.$wrapperEl.children(\".\" + swiper.params.slideActiveClass);\n          } else {\n            gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          }\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n      gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left + window.scrollX;\n        offsetY = gesture.$slideEl.offset().top + window.scrollY;\n        diffX = offsetX + slideWidth / 2 - touchX;\n        diffY = offsetY + slideHeight / 2 - touchY;\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n\n      gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\n      gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    out: function out() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(\".\" + swiper.params.slideActiveClass);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\n      gesture.$slideEl = undefined;\n    },\n    toggleGestures: function toggleGestures(method) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var selector = zoom.slideSelector,\n          passive = zoom.passiveListener;\n      swiper.$wrapperEl[method]('gesturestart', selector, zoom.onGestureStart, passive);\n      swiper.$wrapperEl[method]('gesturechange', selector, zoom.onGestureChange, passive);\n      swiper.$wrapperEl[method]('gestureend', selector, zoom.onGestureEnd, passive);\n    },\n    enableGestures: function enableGestures() {\n      if (this.zoom.gesturesEnabled) return;\n      this.zoom.gesturesEnabled = true;\n      this.zoom.toggleGestures('on');\n    },\n    disableGestures: function disableGestures() {\n      if (!this.zoom.gesturesEnabled) return;\n      this.zoom.gesturesEnabled = false;\n      this.zoom.toggleGestures('off');\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var support = swiper.support;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) return;\n      zoom.enabled = true;\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      var activeListenerWithCapture = support.passiveListener ? {\n        passive: false,\n        capture: true\n      } : true;\n      var slideSelector = \".\" + swiper.params.slideClass;\n      swiper.zoom.passiveListener = passiveListener;\n      swiper.zoom.slideSelector = slideSelector; // Scale image\n\n      if (support.gestures) {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) return;\n      var support = swiper.support;\n      swiper.zoom.enabled = false;\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      var activeListenerWithCapture = support.passiveListener ? {\n        passive: false,\n        capture: true\n      } : true;\n      var slideSelector = \".\" + swiper.params.slideClass; // Scale image\n\n      if (support.gestures) {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n    }\n  };\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        zoom: _extends({\n          enabled: false,\n          scale: 1,\n          currentScale: 1,\n          isScaling: false,\n          gesture: {\n            $slideEl: undefined,\n            slideWidth: undefined,\n            slideHeight: undefined,\n            $imageEl: undefined,\n            $imageWrapEl: undefined,\n            maxRatio: 3\n          },\n          image: {\n            isTouched: undefined,\n            isMoved: undefined,\n            currentX: undefined,\n            currentY: undefined,\n            minX: undefined,\n            minY: undefined,\n            maxX: undefined,\n            maxY: undefined,\n            width: undefined,\n            height: undefined,\n            startX: undefined,\n            startY: undefined,\n            touchesStart: {},\n            touchesCurrent: {}\n          },\n          velocity: {\n            x: undefined,\n            y: undefined,\n            prevPositionX: undefined,\n            prevPositionY: undefined,\n            prevTime: undefined\n          }\n        }, Zoom)\n      });\n      var scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get: function get() {\n          return scale;\n        },\n        set: function set(value) {\n          if (scale !== value) {\n            var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n            var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n            swiper.emit('zoomChange', value, imageEl, slideEl);\n          }\n\n          scale = value;\n        }\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy(swiper) {\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(swiper, e) {\n        if (!swiper.zoom.enabled) return;\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(swiper, e) {\n        if (!swiper.zoom.enabled) return;\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(swiper, e) {\n        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd(swiper) {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n          swiper.zoom.onTransitionEnd();\n        }\n      }\n    }\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if (loadInDuplicate === void 0) {\n        loadInDuplicate = true;\n      }\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') return;\n      if (swiper.slides.length === 0) return;\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var $slideEl = isVirtual ? swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\") : swiper.slides.eq(index);\n      var $images = $slideEl.find(\".\" + params.elementClass + \":not(.\" + params.loadedClass + \"):not(.\" + params.loadingClass + \")\");\n\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images.push($slideEl[0]);\n      }\n\n      if ($images.length === 0) return;\n      $images.each(function (imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n        var $pictureEl = $imageEl.parent('picture');\n        swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n\n          if (background) {\n            $imageEl.css('background-image', \"url(\\\"\" + background + \"\\\")\");\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n\n            if ($pictureEl.length) {\n              $pictureEl.children('source').each(function (sourceEl) {\n                var $source = $(sourceEl);\n\n                if ($source.attr('data-srcset')) {\n                  $source.attr('srcset', $source.attr('data-srcset'));\n                  $source.removeAttr('data-srcset');\n                }\n              });\n            }\n\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find(\".\" + params.preloaderClass).remove();\n\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + swiper.params.slideDuplicateClass + \")\");\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children(\".\" + swiper.params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\");\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n          if (swiper.params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        });\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl,\n          swiperParams = swiper.params,\n          slides = swiper.slides,\n          activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n      var slidesPerView = swiperParams.slidesPerView;\n\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children(\".\" + swiperParams.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\").length) {\n            return true;\n          }\n        } else if (slides[index]) return true;\n\n        return false;\n      }\n\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children(\".\" + swiperParams.slideVisibleClass).each(function (slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n          for (var _i = activeIndex + slidesPerView; _i < maxIndex; _i += 1) {\n            if (slideExist(_i)) swiper.lazy.loadInSlide(_i);\n          } // Prev Slides\n\n\n          for (var _i2 = minIndex; _i2 < activeIndex; _i2 += 1) {\n            if (slideExist(_i2)) swiper.lazy.loadInSlide(_i2);\n          }\n        } else {\n          var nextSlide = $wrapperEl.children(\".\" + swiperParams.slideNextClass);\n          if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n          var prevSlide = $wrapperEl.children(\".\" + swiperParams.slidePrevClass);\n          if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n        }\n      }\n    },\n    checkInViewOnLoad: function checkInViewOnLoad() {\n      var window = getWindow();\n      var swiper = this;\n      if (!swiper || swiper.destroyed) return;\n      var $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\n      var isWindow = $scrollElement[0] === window;\n      var scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n      var scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n      var swiperOffset = swiper.$el.offset();\n      var rtl = swiper.rtlTranslate;\n      var inView = false;\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n      for (var i = 0; i < swiperCoord.length; i += 1) {\n        var point = swiperCoord[i];\n\n        if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n          inView = true;\n        }\n      }\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n\n      if (inView) {\n        swiper.lazy.load();\n        $scrollElement.off('scroll', swiper.lazy.checkInViewOnLoad, passiveListener);\n      } else if (!swiper.lazy.scrollHandlerAttached) {\n        swiper.lazy.scrollHandlerAttached = true;\n        $scrollElement.on('scroll', swiper.lazy.checkInViewOnLoad, passiveListener);\n      }\n    }\n  };\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        checkInView: false,\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n        scrollingElement: '',\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        lazy: _extends({\n          initialImageLoaded: false\n        }, Lazy)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init(swiper) {\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          if (swiper.params.lazy.checkInView) {\n            swiper.lazy.checkInViewOnLoad();\n          } else {\n            swiper.lazy.load();\n          }\n        }\n      },\n      scroll: function scroll(swiper) {\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      'scrollbarDragMove resize _freeModeNoMomentumRelease': function lazyLoad(swiper) {\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart(swiper) {\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd(swiper) {\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        var _swiper$params = swiper.params,\n            lazy = _swiper$params.lazy,\n            cssMode = _swiper$params.cssMode,\n            watchSlidesVisibility = _swiper$params.watchSlidesVisibility,\n            watchSlidesProgress = _swiper$params.watchSlidesProgress,\n            touchReleaseOnEdges = _swiper$params.touchReleaseOnEdges,\n            resistanceRatio = _swiper$params.resistanceRatio;\n\n        if (lazy.enabled && (cssMode || (watchSlidesVisibility || watchSlidesProgress) && (touchReleaseOnEdges || resistanceRatio === 0))) {\n          swiper.lazy.load();\n        }\n      }\n    }\n  };\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n\n          return maxIndex;\n        };\n      }();\n\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n        return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n      };\n\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(_setTranslate, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      var Swiper = swiper.constructor;\n\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var Swiper = swiper.constructor;\n      var controlled = swiper.controller.control;\n      var i;\n\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n\n        if (duration !== 0) {\n          c.transitionStart();\n\n          if (c.params.autoHeight) {\n            nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) return;\n\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n\n            c.transitionEnd();\n          });\n        }\n      }\n\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    }\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide' // or 'container'\n\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        controller: _extends({\n          control: swiper.params.controller.control\n        }, Controller)\n      });\n    },\n    on: {\n      update: function update(swiper) {\n        if (!swiper.controller.control) return;\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize(swiper) {\n        if (!swiper.controller.control) return;\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate(swiper) {\n        if (!swiper.controller.control) return;\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(swiper, translate, byController) {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(swiper, duration, byController) {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTransition(duration, byController);\n      }\n    }\n  };\n\n  var A11y = {\n    getRandomNumber: function getRandomNumber(size) {\n      if (size === void 0) {\n        size = 16;\n      }\n\n      var randomChar = function randomChar() {\n        return Math.round(16 * Math.random()).toString(16);\n      };\n\n      return 'x'.repeat(size).replace(/x/g, randomChar);\n    },\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    makeElNotFocusable: function makeElNotFocusable($el) {\n      $el.attr('tabIndex', '-1');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElRoleDescription: function addElRoleDescription($el, description) {\n      $el.attr('aria-roledescription', description);\n      return $el;\n    },\n    addElControls: function addElControls($el, controls) {\n      $el.attr('aria-controls', controls);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    addElId: function addElId($el, id) {\n      $el.attr('id', id);\n      return $el;\n    },\n    addElLive: function addElLive($el, live) {\n      $el.attr('aria-live', live);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterOrSpaceKey: function onEnterOrSpaceKey(e) {\n      if (e.keyCode !== 13 && e.keyCode !== 32) return;\n      var swiper = this;\n      var params = swiper.params.a11y;\n      var $targetEl = $(e.target);\n\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n\n      if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) return;\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n      if (swiper.params.loop || !swiper.navigation) return;\n      var _swiper$navigation = swiper.navigation,\n          $nextEl = _swiper$navigation.$nextEl,\n          $prevEl = _swiper$navigation.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n          swiper.a11y.makeElNotFocusable($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n          swiper.a11y.makeElFocusable($prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n          swiper.a11y.makeElNotFocusable($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n          swiper.a11y.makeElFocusable($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n\n          if (!swiper.params.pagination.renderBullet) {\n            swiper.a11y.addElRole($bulletEl, 'button');\n            swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n          }\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      swiper.$el.append(swiper.a11y.liveRegion); // Container\n\n      var $containerEl = swiper.$el;\n\n      if (params.containerRoleDescriptionMessage) {\n        swiper.a11y.addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n      }\n\n      if (params.containerMessage) {\n        swiper.a11y.addElLabel($containerEl, params.containerMessage);\n      } // Wrapper\n\n\n      var $wrapperEl = swiper.$wrapperEl;\n      var wrapperId = $wrapperEl.attr('id') || \"swiper-wrapper-\" + swiper.a11y.getRandomNumber(16);\n      var live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n      swiper.a11y.addElId($wrapperEl, wrapperId);\n      swiper.a11y.addElLive($wrapperEl, live); // Slide\n\n      if (params.itemRoleDescriptionMessage) {\n        swiper.a11y.addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n      }\n\n      swiper.a11y.addElRole($(swiper.slides), params.slideRole);\n      var slidesLength = swiper.params.loop ? swiper.slides.filter(function (el) {\n        return !el.classList.contains(swiper.params.slideDuplicateClass);\n      }).length : swiper.slides.length;\n      swiper.slides.each(function (slideEl, index) {\n        var $slideEl = $(slideEl);\n        var slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;\n        var ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        swiper.a11y.addElLabel($slideEl, ariaLabelMessage);\n      }); // Navigation\n\n      var $nextEl;\n      var $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl && $nextEl.length) {\n        swiper.a11y.makeElFocusable($nextEl);\n\n        if ($nextEl[0].tagName !== 'BUTTON') {\n          swiper.a11y.addElRole($nextEl, 'button');\n          $nextEl.on('keydown', swiper.a11y.onEnterOrSpaceKey);\n        }\n\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        swiper.a11y.addElControls($nextEl, wrapperId);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        swiper.a11y.makeElFocusable($prevEl);\n\n        if ($prevEl[0].tagName !== 'BUTTON') {\n          swiper.a11y.addElRole($prevEl, 'button');\n          $prevEl.on('keydown', swiper.a11y.onEnterOrSpaceKey);\n        }\n\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        swiper.a11y.addElControls($prevEl, wrapperId);\n      } // Pagination\n\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), swiper.a11y.onEnterOrSpaceKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n      var $nextEl;\n      var $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterOrSpaceKey);\n      }\n\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterOrSpaceKey);\n      } // Pagination\n\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), swiper.a11y.onEnterOrSpaceKey);\n      }\n    }\n  };\n  var A11y$1 = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n        slideLabelMessage: '{{index}} / {{slidesLength}}',\n        containerMessage: null,\n        containerRoleDescriptionMessage: null,\n        itemRoleDescriptionMessage: null,\n        slideRole: 'group'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        a11y: _extends({}, A11y, {\n          liveRegion: $(\"<span class=\\\"\" + swiper.params.a11y.notificationClass + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")\n        })\n      });\n    },\n    on: {\n      afterInit: function afterInit(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.destroy();\n      }\n    }\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      var window = getWindow();\n      if (!swiper.params.history) return;\n\n      if (!window.history || !window.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues(swiper.params.url);\n      if (!history.paths.key && !history.paths.value) return;\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var window = getWindow();\n\n      if (!swiper.params.history.replaceState) {\n        window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues(swiper.params.url);\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues(urlOverride) {\n      var window = getWindow();\n      var location;\n\n      if (urlOverride) {\n        location = new URL(urlOverride);\n      } else {\n        location = window.location;\n      }\n\n      var pathArray = location.pathname.slice(1).split('/').filter(function (part) {\n        return part !== '';\n      });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return {\n        key: key,\n        value: value\n      };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      var window = getWindow();\n      if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n      var location;\n\n      if (swiper.params.url) {\n        location = new URL(swiper.params.url);\n      } else {\n        location = window.location;\n      }\n\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n\n      if (swiper.params.history.root.length > 0) {\n        var root = swiper.params.history.root;\n        if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n        value = root + \"/\" + key + \"/\" + value;\n      } else if (!location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n\n      var currentState = window.history.state;\n\n      if (currentState && currentState.value === value) {\n        return;\n      }\n\n      if (swiper.params.history.replaceState) {\n        window.history.replaceState({\n          value: value\n        }, null, value);\n      } else {\n        window.history.pushState({\n          value: value\n        }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    }\n  };\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        root: '',\n        replaceState: false,\n        key: 'slides'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        history: _extends({}, History)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      'transitionEnd _freeModeNoMomentumRelease': function transitionEnd_freeModeNoMomentumRelease(swiper) {\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.history.initialized && swiper.params.cssMode) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      }\n    }\n  };\n\n  var HashNavigation = {\n    onHashChange: function onHashChange() {\n      var swiper = this;\n      var document = getDocument();\n      swiper.emit('hashChange');\n      var newHash = document.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-hash=\\\"\" + newHash + \"\\\"]\").index();\n        if (typeof newIndex === 'undefined') return;\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      var window = getWindow();\n      var document = getDocument();\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n\n      if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n        window.history.replaceState(null, null, \"#\" + swiper.slides.eq(swiper.activeIndex).attr('data-hash') || '');\n        swiper.emit('hashSet');\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        document.location.hash = hash || '';\n        swiper.emit('hashSet');\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var document = getDocument();\n      var window = getWindow();\n      if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n      swiper.hashNavigation.initialized = true;\n      var hash = document.location.hash.replace('#', '');\n\n      if (hash) {\n        var speed = 0;\n\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n\n      if (swiper.params.hashNavigation.watchState) {\n        $(window).on('hashchange', swiper.hashNavigation.onHashChange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var window = getWindow();\n\n      if (swiper.params.hashNavigation.watchState) {\n        $(window).off('hashchange', swiper.hashNavigation.onHashChange);\n      }\n    }\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        hashNavigation: _extends({\n          initialized: false\n        }, HashNavigation)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      'transitionEnd _freeModeNoMomentumRelease': function transitionEnd_freeModeNoMomentumRelease(swiper) {\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n          swiper.hashNavigation.setHash();\n        }\n      }\n    }\n  };\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = nextTick(function () {\n        var autoplayResult;\n\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n\n        if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();else if (autoplayResult === false) {\n          swiper.autoplay.run();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n      if (swiper.autoplay.running) return false;\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) return false;\n      if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) return;\n      if (swiper.autoplay.paused) return;\n      if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.paused = true;\n\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        ['transitionend', 'webkitTransitionEnd'].forEach(function (event) {\n          swiper.$wrapperEl[0].addEventListener(event, swiper.autoplay.onTransitionEnd);\n        });\n      }\n    },\n    onVisibilityChange: function onVisibilityChange() {\n      var swiper = this;\n      var document = getDocument();\n\n      if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n        swiper.autoplay.pause();\n      }\n\n      if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n        swiper.autoplay.run();\n        swiper.autoplay.paused = false;\n      }\n    },\n    onTransitionEnd: function onTransitionEnd(e) {\n      var swiper = this;\n      if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n      if (e.target !== swiper.$wrapperEl[0]) return;\n      ['transitionend', 'webkitTransitionEnd'].forEach(function (event) {\n        swiper.$wrapperEl[0].removeEventListener(event, swiper.autoplay.onTransitionEnd);\n      });\n      swiper.autoplay.paused = false;\n\n      if (!swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      } else {\n        swiper.autoplay.run();\n      }\n    },\n    onMouseEnter: function onMouseEnter() {\n      var swiper = this;\n\n      if (swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.stop();\n      } else {\n        swiper.autoplay.pause();\n      }\n\n      ['transitionend', 'webkitTransitionEnd'].forEach(function (event) {\n        swiper.$wrapperEl[0].removeEventListener(event, swiper.autoplay.onTransitionEnd);\n      });\n    },\n    onMouseLeave: function onMouseLeave() {\n      var swiper = this;\n\n      if (swiper.params.autoplay.disableOnInteraction) {\n        return;\n      }\n\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    },\n    attachMouseEvents: function attachMouseEvents() {\n      var swiper = this;\n\n      if (swiper.params.autoplay.pauseOnMouseEnter) {\n        swiper.$el.on('mouseenter', swiper.autoplay.onMouseEnter);\n        swiper.$el.on('mouseleave', swiper.autoplay.onMouseLeave);\n      }\n    },\n    detachMouseEvents: function detachMouseEvents() {\n      var swiper = this;\n      swiper.$el.off('mouseenter', swiper.autoplay.onMouseEnter);\n      swiper.$el.off('mouseleave', swiper.autoplay.onMouseLeave);\n    }\n  };\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n        pauseOnMouseEnter: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        autoplay: _extends({}, Autoplay, {\n          running: false,\n          paused: false\n        })\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n          var document = getDocument();\n          document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n          swiper.autoplay.attachMouseEvents();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(swiper, speed, internal) {\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove(swiper) {\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      touchEnd: function touchEnd(swiper) {\n        if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.run();\n        }\n      },\n      destroy: function destroy(swiper) {\n        swiper.autoplay.detachMouseEvents();\n\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n\n        var document = getDocument();\n        document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    }\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n        var ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl.css({\n          opacity: slideOpacity\n        }).transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\");\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides,\n          $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) return;\n          if (!swiper || swiper.destroyed) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    }\n  };\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        fadeEffect: _extends({}, Fade)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'fade') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"fade\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'fade') return;\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'fade') return;\n        swiper.fadeEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el,\n          $wrapperEl = swiper.$wrapperEl,\n          slides = swiper.slides,\n          swiperWidth = swiper.width,\n          swiperHeight = swiper.height,\n          rtl = swiper.rtlTranslate,\n          swiperSize = swiper.size,\n          browser = swiper.browser;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n\n          $cubeShadowEl.css({\n            height: swiperWidth + \"px\"\n          });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + round * 4 * swiperSize;\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = 3 * swiperSize + swiperSize * 4 * round;\n        }\n\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = slideIndex * 90 + progress * 90;\n          if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n        }\n\n        $slideEl.transform(transform);\n\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append(shadowBefore);\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append(shadowAfter);\n          }\n\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n        }\n      }\n\n      $wrapperEl.css({\n        '-webkit-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        '-moz-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        '-ms-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        'transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\"\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform(\"translate3d(0px, \" + (swiperWidth / 2 + params.shadowOffset) + \"px, \" + -swiperWidth / 2 + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + params.shadowScale + \")\");\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n          var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform(\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + (swiperHeight / 2 + offset) + \"px, \" + -swiperHeight / 2 / scale2 + \"px) rotateX(-90deg)\");\n        }\n      }\n\n      var zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n      $wrapperEl.transform(\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\");\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el,\n          slides = swiper.slides;\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    }\n  };\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        cubeEffect: _extends({}, Cube)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'cube') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"cube\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'cube') return;\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'cube') return;\n        swiper.cubeEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides,\n          rtl = swiper.rtlTranslate;\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append(shadowBefore);\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append(shadowAfter);\n          }\n\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n        }\n\n        $slideEl.transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\");\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides,\n          activeIndex = swiper.activeIndex,\n          $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false; // eslint-disable-next-line\n\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) return;\n          if (!swiper || swiper.destroyed) return; // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    }\n  };\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        flipEffect: _extends({}, Flip)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'flip') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"flip\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'flip') return;\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'flip') return;\n        swiper.flipEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width,\n          swiperHeight = swiper.height,\n          slides = swiper.slides,\n          slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth; // Each slide offset from center\n\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n        var stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n        if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n          stretch = parseFloat(params.stretch) / 100 * slideSize;\n        }\n\n        var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n        var translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n        var scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n        if (Math.abs(translateX) < 0.001) translateX = 0;\n        if (Math.abs(translateY) < 0.001) translateY = 0;\n        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n        if (Math.abs(scale) < 0.001) scale = 0;\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg) scale(\" + scale + \")\";\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append($shadowBeforeEl);\n          }\n\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append($shadowAfterEl);\n          }\n\n          if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n          if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n        }\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    }\n  };\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        scale: 1,\n        modifier: 1,\n        slideShadows: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        coverflowEffect: _extends({}, Coverflow)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'coverflow') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"coverflow\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'coverflow') return;\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'coverflow') return;\n        swiper.coverflowEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var thumbsParams = swiper.params.thumbs;\n      if (swiper.thumbs.initialized) return false;\n      swiper.thumbs.initialized = true;\n      var SwiperClass = swiper.constructor;\n\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n        extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n      } else if (isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n      return true;\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n      var slideToIndex;\n\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix(); // eslint-disable-next-line\n\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n        if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\n      }\n\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n      var autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n      var useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n        var direction;\n\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          } // Find actual thumbs index to slide to\n\n\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n\n          if (typeof prevThumbsIndex === 'undefined') {\n            newThumbsIndex = nextThumbsIndex;\n          } else if (typeof nextThumbsIndex === 'undefined') {\n            newThumbsIndex = prevThumbsIndex;\n          } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n            newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n          } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n            newThumbsIndex = nextThumbsIndex;\n          } else {\n            newThumbsIndex = prevThumbsIndex;\n          }\n\n          direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n        } else {\n          newThumbsIndex = swiper.realIndex;\n          direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n        }\n\n        if (useOffset) {\n          newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n        }\n\n        if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;\n\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      } // Activate thumbs\n\n\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      if (!swiper.params.thumbs.multipleActiveThumbs) {\n        thumbsToActivate = 1;\n      }\n\n      thumbsToActivate = Math.floor(thumbsToActivate);\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n      if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\").addClass(thumbActiveClass);\n        }\n      } else {\n        for (var _i = 0; _i < thumbsToActivate; _i += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + _i).addClass(thumbActiveClass);\n        }\n      }\n    }\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        swiper: null,\n        multipleActiveThumbs: true,\n        autoScrollOffset: 0,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        thumbs: _extends({\n          swiper: null,\n          initialized: false\n        }, Thumbs)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        var thumbs = swiper.params.thumbs;\n        if (!thumbs || !thumbs.swiper) return;\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      update: function update(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      resize: function resize(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) return;\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy(swiper) {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) return;\n\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      }\n    }\n  };\n\n  // Swiper Class\n  var components = [Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y$1, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n//# sourceMappingURL=swiper-bundle.js.map\n","/**\n * SSR Window 3.0.0\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2020, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: November 9, 2020\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target, src) {\n    if (target === void 0) { target = {}; }\n    if (src === void 0) { src = {}; }\n    Object.keys(src).forEach(function (key) {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nvar ssrDocument = {\n    body: {},\n    addEventListener: function () { },\n    removeEventListener: function () { },\n    activeElement: {\n        blur: function () { },\n        nodeName: '',\n    },\n    querySelector: function () {\n        return null;\n    },\n    querySelectorAll: function () {\n        return [];\n    },\n    getElementById: function () {\n        return null;\n    },\n    createEvent: function () {\n        return {\n            initEvent: function () { },\n        };\n    },\n    createElement: function () {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute: function () { },\n            getElementsByTagName: function () {\n                return [];\n            },\n        };\n    },\n    createElementNS: function () {\n        return {};\n    },\n    importNode: function () {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    var doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nvar ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState: function () { },\n        pushState: function () { },\n        go: function () { },\n        back: function () { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener: function () { },\n    removeEventListener: function () { },\n    getComputedStyle: function () {\n        return {\n            getPropertyValue: function () {\n                return '';\n            },\n        };\n    },\n    Image: function () { },\n    Date: function () { },\n    screen: {},\n    setTimeout: function () { },\n    clearTimeout: function () { },\n    matchMedia: function () {\n        return {};\n    },\n    requestAnimationFrame: function (callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame: function (id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    var win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","/**\n * Dom7 3.0.0\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * https://framework7.io/docs/dom7.html\n *\n * Copyright 2020, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: November 9, 2020\n */\nimport { getWindow, getDocument } from 'ssr-window';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/* eslint-disable no-proto */\nfunction makeReactive(obj) {\n  var proto = obj.__proto__;\n  Object.defineProperty(obj, '__proto__', {\n    get: function get() {\n      return proto;\n    },\n    set: function set(value) {\n      proto.__proto__ = value;\n    }\n  });\n}\n\nvar Dom7 = /*#__PURE__*/function (_Array) {\n  _inheritsLoose(Dom7, _Array);\n\n  function Dom7(items) {\n    var _this;\n\n    _this = _Array.call.apply(_Array, [this].concat(items)) || this;\n    makeReactive(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  return Dom7;\n}( /*#__PURE__*/_wrapNativeSuper(Array));\n\nfunction arrayFlat(arr) {\n  if (arr === void 0) {\n    arr = [];\n  }\n\n  var res = [];\n  arr.forEach(function (el) {\n    if (Array.isArray(el)) {\n      res.push.apply(res, arrayFlat(el));\n    } else {\n      res.push(el);\n    }\n  });\n  return res;\n}\nfunction arrayFilter(arr, callback) {\n  return Array.prototype.filter.call(arr, callback);\n}\nfunction arrayUnique(arr) {\n  var uniqueArray = [];\n\n  for (var i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, function (match, group) {\n    return group.toUpperCase();\n  });\n}\n\nfunction qsa(selector, context) {\n  if (typeof selector !== 'string') {\n    return [selector];\n  }\n\n  var a = [];\n  var res = context.querySelectorAll(selector);\n\n  for (var i = 0; i < res.length; i += 1) {\n    a.push(res[i]);\n  }\n\n  return a;\n}\n\nfunction $(selector, context) {\n  var window = getWindow();\n  var document = getDocument();\n  var arr = [];\n\n  if (!context && selector instanceof Dom7) {\n    return selector;\n  }\n\n  if (!selector) {\n    return new Dom7(arr);\n  }\n\n  if (typeof selector === 'string') {\n    var html = selector.trim();\n\n    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n      var toCreate = 'div';\n      if (html.indexOf('<li') === 0) toCreate = 'ul';\n      if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n      if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n      if (html.indexOf('<tbody') === 0) toCreate = 'table';\n      if (html.indexOf('<option') === 0) toCreate = 'select';\n      var tempParent = document.createElement(toCreate);\n      tempParent.innerHTML = html;\n\n      for (var i = 0; i < tempParent.childNodes.length; i += 1) {\n        arr.push(tempParent.childNodes[i]);\n      }\n    } else {\n      arr = qsa(selector.trim(), context || document);\n    } // arr = qsa(selector, document);\n\n  } else if (selector.nodeType || selector === window || selector === document) {\n    arr.push(selector);\n  } else if (Array.isArray(selector)) {\n    if (selector instanceof Dom7) return selector;\n    arr = selector;\n  }\n\n  return new Dom7(arrayUnique(arr));\n}\n\n$.fn = Dom7.prototype;\n\nfunction addClass() {\n  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n    classes[_key] = arguments[_key];\n  }\n\n  var classNames = arrayFlat(classes.map(function (c) {\n    return c.split(' ');\n  }));\n  this.forEach(function (el) {\n    var _el$classList;\n\n    (_el$classList = el.classList).add.apply(_el$classList, classNames);\n  });\n  return this;\n}\n\nfunction removeClass() {\n  for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    classes[_key2] = arguments[_key2];\n  }\n\n  var classNames = arrayFlat(classes.map(function (c) {\n    return c.split(' ');\n  }));\n  this.forEach(function (el) {\n    var _el$classList2;\n\n    (_el$classList2 = el.classList).remove.apply(_el$classList2, classNames);\n  });\n  return this;\n}\n\nfunction toggleClass() {\n  for (var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    classes[_key3] = arguments[_key3];\n  }\n\n  var classNames = arrayFlat(classes.map(function (c) {\n    return c.split(' ');\n  }));\n  this.forEach(function (el) {\n    classNames.forEach(function (className) {\n      el.classList.toggle(className);\n    });\n  });\n}\n\nfunction hasClass() {\n  for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    classes[_key4] = arguments[_key4];\n  }\n\n  var classNames = arrayFlat(classes.map(function (c) {\n    return c.split(' ');\n  }));\n  return arrayFilter(this, function (el) {\n    return classNames.filter(function (className) {\n      return el.classList.contains(className);\n    }).length > 0;\n  }).length > 0;\n}\n\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  } // Set attrs\n\n\n  for (var i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      for (var attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction removeAttr(attr) {\n  for (var i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n\n  return this;\n}\n\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        for (var propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction data(key, value) {\n  var el;\n\n  if (typeof value === 'undefined') {\n    el = this[0];\n    if (!el) return undefined; // Get value\n\n    if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {\n      return el.dom7ElementDataStorage[key];\n    }\n\n    var dataKey = el.getAttribute(\"data-\" + key);\n\n    if (dataKey) {\n      return dataKey;\n    }\n\n    return undefined;\n  } // Set value\n\n\n  for (var i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n\n  return this;\n}\n\nfunction removeData(key) {\n  for (var i = 0; i < this.length; i += 1) {\n    var el = this[i];\n\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\n\nfunction dataset() {\n  var el = this[0];\n  if (!el) return undefined;\n  var dataset = {}; // eslint-disable-line\n\n  if (el.dataset) {\n    for (var dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (var i = 0; i < el.attributes.length; i += 1) {\n      var _attr = el.attributes[i];\n\n      if (_attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(_attr.name.split('data-')[1])] = _attr.value;\n      }\n    }\n  }\n\n  for (var key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;else if (dataset[key] === 'true') dataset[key] = true;else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n\n  return dataset;\n}\n\nfunction val(value) {\n  if (typeof value === 'undefined') {\n    // get value\n    var el = this[0];\n    if (!el) return undefined;\n\n    if (el.multiple && el.nodeName.toLowerCase() === 'select') {\n      var values = [];\n\n      for (var i = 0; i < el.selectedOptions.length; i += 1) {\n        values.push(el.selectedOptions[i].value);\n      }\n\n      return values;\n    }\n\n    return el.value;\n  } // set value\n\n\n  for (var _i = 0; _i < this.length; _i += 1) {\n    var _el = this[_i];\n\n    if (Array.isArray(value) && _el.multiple && _el.nodeName.toLowerCase() === 'select') {\n      for (var j = 0; j < _el.options.length; j += 1) {\n        _el.options[j].selected = value.indexOf(_el.options[j].value) >= 0;\n      }\n    } else {\n      _el.value = value;\n    }\n  }\n\n  return this;\n}\n\nfunction value(value) {\n  return this.val(value);\n}\n\nfunction transform(transform) {\n  for (var i = 0; i < this.length; i += 1) {\n    this[i].style.transform = transform;\n  }\n\n  return this;\n}\n\nfunction transition(duration) {\n  for (var i = 0; i < this.length; i += 1) {\n    this[i].style.transitionDuration = typeof duration !== 'string' ? duration + \"ms\" : duration;\n  }\n\n  return this;\n}\n\nfunction on() {\n  for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    args[_key5] = arguments[_key5];\n  }\n\n  var eventType = args[0],\n      targetSelector = args[1],\n      listener = args[2],\n      capture = args[3];\n\n  if (typeof args[1] === 'function') {\n    eventType = args[0];\n    listener = args[1];\n    capture = args[2];\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    var target = e.target;\n    if (!target) return;\n    var eventData = e.target.dom7EventData || [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n      var _parents = $(target).parents(); // eslint-disable-line\n\n\n      for (var k = 0; k < _parents.length; k += 1) {\n        if ($(_parents[k]).is(targetSelector)) listener.apply(_parents[k], eventData);\n      }\n    }\n  }\n\n  function handleEvent(e) {\n    var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    listener.apply(this, eventData);\n  }\n\n  var events = eventType.split(' ');\n  var j;\n\n  for (var i = 0; i < this.length; i += 1) {\n    var el = this[i];\n\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        var event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener: listener,\n          proxyListener: handleEvent\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        var _event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[_event]) el.dom7LiveListeners[_event] = [];\n\n        el.dom7LiveListeners[_event].push({\n          listener: listener,\n          proxyListener: handleLiveEvent\n        });\n\n        el.addEventListener(_event, handleLiveEvent, capture);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction off() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  var eventType = args[0],\n      targetSelector = args[1],\n      listener = args[2],\n      capture = args[3];\n\n  if (typeof args[1] === 'function') {\n    eventType = args[0];\n    listener = args[1];\n    capture = args[2];\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n  var events = eventType.split(' ');\n\n  for (var i = 0; i < events.length; i += 1) {\n    var event = events[i];\n\n    for (var j = 0; j < this.length; j += 1) {\n      var el = this[j];\n      var handlers = void 0;\n\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n\n      if (handlers && handlers.length) {\n        for (var k = handlers.length - 1; k >= 0; k -= 1) {\n          var handler = handlers[k];\n\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction once() {\n  var dom = this;\n\n  for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    args[_key7] = arguments[_key7];\n  }\n\n  var eventName = args[0],\n      targetSelector = args[1],\n      listener = args[2],\n      capture = args[3];\n\n  if (typeof args[1] === 'function') {\n    eventName = args[0];\n    listener = args[1];\n    capture = args[2];\n    targetSelector = undefined;\n  }\n\n  function onceHandler() {\n    for (var _len8 = arguments.length, eventArgs = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      eventArgs[_key8] = arguments[_key8];\n    }\n\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\n\nfunction trigger() {\n  var window = getWindow();\n\n  for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    args[_key9] = arguments[_key9];\n  }\n\n  var events = args[0].split(' ');\n  var eventData = args[1];\n\n  for (var i = 0; i < events.length; i += 1) {\n    var event = events[i];\n\n    for (var j = 0; j < this.length; j += 1) {\n      var el = this[j];\n\n      if (window.CustomEvent) {\n        var evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true\n        });\n        el.dom7EventData = args.filter(function (data, dataIndex) {\n          return dataIndex > 0;\n        });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction transitionEnd(callback) {\n  var dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('transitionend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('transitionend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction animationEnd(callback) {\n  var dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('animationend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('animationend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction width() {\n  var window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\n\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      var _styles = this.styles();\n\n      return this[0].offsetWidth + parseFloat(_styles.getPropertyValue('margin-right')) + parseFloat(_styles.getPropertyValue('margin-left'));\n    }\n\n    return this[0].offsetWidth;\n  }\n\n  return null;\n}\n\nfunction height() {\n  var window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\n\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      var _styles2 = this.styles();\n\n      return this[0].offsetHeight + parseFloat(_styles2.getPropertyValue('margin-top')) + parseFloat(_styles2.getPropertyValue('margin-bottom'));\n    }\n\n    return this[0].offsetHeight;\n  }\n\n  return null;\n}\n\nfunction offset() {\n  if (this.length > 0) {\n    var window = getWindow();\n    var document = getDocument();\n    var el = this[0];\n    var box = el.getBoundingClientRect();\n    var body = document.body;\n    var clientTop = el.clientTop || body.clientTop || 0;\n    var clientLeft = el.clientLeft || body.clientLeft || 0;\n    var scrollTop = el === window ? window.scrollY : el.scrollTop;\n    var scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: box.top + scrollTop - clientTop,\n      left: box.left + scrollLeft - clientLeft\n    };\n  }\n\n  return null;\n}\n\nfunction hide() {\n  for (var i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n\n  return this;\n}\n\nfunction show() {\n  var window = getWindow();\n\n  for (var i = 0; i < this.length; i += 1) {\n    var el = this[i];\n\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n\n  return this;\n}\n\nfunction styles() {\n  var window = getWindow();\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\n\nfunction css(props, value) {\n  var window = getWindow();\n  var i;\n\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      // .css('width')\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      // .css({ width: '100px' })\n      for (i = 0; i < this.length; i += 1) {\n        for (var _prop in props) {\n          this[i].style[_prop] = props[_prop];\n        }\n      }\n\n      return this;\n    }\n  }\n\n  if (arguments.length === 2 && typeof props === 'string') {\n    // .css('width', '100px')\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction each(callback) {\n  if (!callback) return this;\n  this.forEach(function (el, index) {\n    callback.apply(el, [el, index]);\n  });\n  return this;\n}\n\nfunction filter(callback) {\n  var result = arrayFilter(this, callback);\n  return $(result);\n}\n\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : null;\n  }\n\n  for (var i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n\n  return this;\n}\n\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    return this[0] ? this[0].textContent.trim() : null;\n  }\n\n  for (var i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n\n  return this;\n}\n\nfunction is(selector) {\n  var window = getWindow();\n  var document = getDocument();\n  var el = this[0];\n  var compareWith;\n  var i;\n  if (!el || typeof selector === 'undefined') return false;\n\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n    compareWith = $(selector);\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  if (selector === document) {\n    return el === document;\n  }\n\n  if (selector === window) {\n    return el === window;\n  }\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  return false;\n}\n\nfunction index() {\n  var child = this[0];\n  var i;\n\n  if (child) {\n    i = 0; // eslint-disable-next-line\n\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n\n    return i;\n  }\n\n  return undefined;\n}\n\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  var length = this.length;\n\n  if (index > length - 1) {\n    return $([]);\n  }\n\n  if (index < 0) {\n    var returnIndex = length + index;\n    if (returnIndex < 0) return $([]);\n    return $([this[returnIndex]]);\n  }\n\n  return $([this[index]]);\n}\n\nfunction append() {\n  var newChild;\n  var document = getDocument();\n\n  for (var k = 0; k < arguments.length; k += 1) {\n    newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (var j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\n\nfunction prepend(newChild) {\n  var document = getDocument();\n  var i;\n  var j;\n\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      var tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n\n  return this;\n}\n\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\n\nfunction insertBefore(selector) {\n  var before = $(selector);\n\n  for (var i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (var j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\n\nfunction insertAfter(selector) {\n  var after = $(selector);\n\n  for (var i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (var j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\n\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return $([this[0].nextElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction nextAll(selector) {\n  var nextEls = [];\n  var el = this[0];\n  if (!el) return $([]);\n\n  while (el.nextElementSibling) {\n    var _next = el.nextElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(_next).is(selector)) nextEls.push(_next);\n    } else nextEls.push(_next);\n\n    el = _next;\n  }\n\n  return $(nextEls);\n}\n\nfunction prev(selector) {\n  if (this.length > 0) {\n    var el = this[0];\n\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return $([el.previousElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (el.previousElementSibling) return $([el.previousElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction prevAll(selector) {\n  var prevEls = [];\n  var el = this[0];\n  if (!el) return $([]);\n\n  while (el.previousElementSibling) {\n    var _prev = el.previousElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(_prev).is(selector)) prevEls.push(_prev);\n    } else prevEls.push(_prev);\n\n    el = _prev;\n  }\n\n  return $(prevEls);\n}\n\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\n\nfunction parent(selector) {\n  var parents = []; // eslint-disable-line\n\n  for (var i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n\n  return $(parents);\n}\n\nfunction parents(selector) {\n  var parents = []; // eslint-disable-line\n\n  for (var i = 0; i < this.length; i += 1) {\n    var _parent = this[i].parentNode; // eslint-disable-line\n\n    while (_parent) {\n      if (selector) {\n        if ($(_parent).is(selector)) parents.push(_parent);\n      } else {\n        parents.push(_parent);\n      }\n\n      _parent = _parent.parentNode;\n    }\n  }\n\n  return $(parents);\n}\n\nfunction closest(selector) {\n  var closest = this; // eslint-disable-line\n\n  if (typeof selector === 'undefined') {\n    return $([]);\n  }\n\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n\n  return closest;\n}\n\nfunction find(selector) {\n  var foundElements = [];\n\n  for (var i = 0; i < this.length; i += 1) {\n    var found = this[i].querySelectorAll(selector);\n\n    for (var j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n\n  return $(foundElements);\n}\n\nfunction children(selector) {\n  var children = []; // eslint-disable-line\n\n  for (var i = 0; i < this.length; i += 1) {\n    var childNodes = this[i].children;\n\n    for (var j = 0; j < childNodes.length; j += 1) {\n      if (!selector || $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n\n  return $(children);\n}\n\nfunction remove() {\n  for (var i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n\n  return this;\n}\n\nfunction detach() {\n  return this.remove();\n}\n\nfunction add() {\n  var dom = this;\n  var i;\n  var j;\n\n  for (var _len10 = arguments.length, els = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    els[_key10] = arguments[_key10];\n  }\n\n  for (i = 0; i < els.length; i += 1) {\n    var toAdd = $(els[i]);\n\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom.push(toAdd[j]);\n    }\n  }\n\n  return dom;\n}\n\nfunction empty() {\n  for (var i = 0; i < this.length; i += 1) {\n    var el = this[i];\n\n    if (el.nodeType === 1) {\n      for (var j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n\n      el.textContent = '';\n    }\n  }\n\n  return this;\n}\n\nfunction scrollTo() {\n  var window = getWindow();\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var left = args[0],\n      top = args[1],\n      duration = args[2],\n      easing = args[3],\n      callback = args[4];\n\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    left = args[0];\n    top = args[1];\n    duration = args[2];\n    callback = args[3];\n    easing = args[4];\n  }\n\n  if (typeof easing === 'undefined') easing = 'swing';\n  return this.each(function animate() {\n    var el = this;\n    var currentTop;\n    var currentLeft;\n    var maxTop;\n    var maxLeft;\n    var newTop;\n    var newLeft;\n    var scrollTop; // eslint-disable-line\n\n    var scrollLeft; // eslint-disable-line\n\n    var animateTop = top > 0 || top === 0;\n    var animateLeft = left > 0 || left === 0;\n\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n\n    if (animateTop) {\n      currentTop = el.scrollTop;\n\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n\n    if (!duration) return;\n\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n\n    var startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n\n    function render(time) {\n      if (time === void 0) {\n        time = new Date().getTime();\n      }\n\n      if (startTime === null) {\n        startTime = time;\n      }\n\n      var progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      var easeProgress = easing === 'linear' ? progress : 0.5 - Math.cos(progress * Math.PI) / 2;\n      var done;\n      if (animateTop) scrollTop = currentTop + easeProgress * (newTop - currentTop);\n      if (animateLeft) scrollLeft = currentLeft + easeProgress * (newLeft - currentLeft);\n\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      window.requestAnimationFrame(render);\n    }\n\n    window.requestAnimationFrame(render);\n  });\n} // scrollTop(top, duration, easing, callback) {\n\n\nfunction scrollTop() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var top = args[0],\n      duration = args[1],\n      easing = args[2],\n      callback = args[3];\n\n  if (args.length === 3 && typeof easing === 'function') {\n    top = args[0];\n    duration = args[1];\n    callback = args[2];\n    easing = args[3];\n  }\n\n  var dom = this;\n\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\n\nfunction scrollLeft() {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  var left = args[0],\n      duration = args[1],\n      easing = args[2],\n      callback = args[3];\n\n  if (args.length === 3 && typeof easing === 'function') {\n    left = args[0];\n    duration = args[1];\n    callback = args[2];\n    easing = args[3];\n  }\n\n  var dom = this;\n\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  var window = getWindow();\n  var els = this;\n  var a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing' // or 'linear'\n\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n\n    }, initialParams),\n    elements: els,\n    animating: false,\n    que: [],\n    easingProgress: function easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - Math.cos(progress * Math.PI) / 2;\n      }\n\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n\n      return progress;\n    },\n    stop: function stop() {\n      if (a.frameId) {\n        window.cancelAnimationFrame(a.frameId);\n      }\n\n      a.animating = false;\n      a.elements.each(function (el) {\n        var element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done: function done(complete) {\n      a.animating = false;\n      a.elements.each(function (el) {\n        var element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n\n      if (a.que.length > 0) {\n        var que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate: function animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n\n      var elements = []; // Define & Cache Initials & Units\n\n      a.elements.each(function (el, index) {\n        var initialFullValue;\n        var initialValue;\n        var unit;\n        var finalValue;\n        var finalFullValue;\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n        elements[index] = {\n          container: el\n        };\n        Object.keys(props).forEach(function (prop) {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue: initialFullValue,\n            initialValue: initialValue,\n            unit: unit,\n            finalValue: finalValue,\n            finalFullValue: finalFullValue,\n            currentValue: initialValue\n          };\n        });\n      });\n      var startTime = null;\n      var time;\n      var elementsDone = 0;\n      var propsDone = 0;\n      var done;\n      var began = false;\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        var progress;\n        var easeProgress; // let el;\n\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n\n        if (startTime === null) {\n          startTime = time;\n        }\n\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), startTime + params.duration - time < 0 ? 0 : startTime + params.duration - time, startTime);\n        }\n\n        elements.forEach(function (element) {\n          var el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach(function (prop) {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            var _el$prop = el[prop],\n                initialValue = _el$prop.initialValue,\n                finalValue = _el$prop.finalValue,\n                unit = _el$prop.unit;\n            el[prop].currentValue = initialValue + easeProgress * (finalValue - initialValue);\n            var currentValue = el[prop].currentValue;\n\n            if (finalValue > initialValue && currentValue >= finalValue || finalValue < initialValue && currentValue <= finalValue) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return; // Then call\n\n        a.frameId = window.requestAnimationFrame(render);\n      }\n\n      a.frameId = window.requestAnimationFrame(render);\n      return a;\n    }\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  var animateInstance;\n\n  for (var i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  var els = this;\n\n  for (var i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nvar noTrigger = 'resize scroll'.split(' ');\n\nfunction shortcut(name) {\n  function eventHandler() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (typeof args[0] === 'undefined') {\n      for (var i = 0; i < this.length; i += 1) {\n        if (noTrigger.indexOf(name) < 0) {\n          if (name in this[i]) this[i][name]();else {\n            $(this[i]).trigger(name);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    return this.on.apply(this, [name].concat(args));\n  }\n\n  return eventHandler;\n}\n\nvar click = shortcut('click');\nvar blur = shortcut('blur');\nvar focus = shortcut('focus');\nvar focusin = shortcut('focusin');\nvar focusout = shortcut('focusout');\nvar keyup = shortcut('keyup');\nvar keydown = shortcut('keydown');\nvar keypress = shortcut('keypress');\nvar submit = shortcut('submit');\nvar change = shortcut('change');\nvar mousedown = shortcut('mousedown');\nvar mousemove = shortcut('mousemove');\nvar mouseup = shortcut('mouseup');\nvar mouseenter = shortcut('mouseenter');\nvar mouseleave = shortcut('mouseleave');\nvar mouseout = shortcut('mouseout');\nvar mouseover = shortcut('mouseover');\nvar touchstart = shortcut('touchstart');\nvar touchend = shortcut('touchend');\nvar touchmove = shortcut('touchmove');\nvar resize = shortcut('resize');\nvar scroll = shortcut('scroll');\n\nexport default $;\nexport { $, add, addClass, animate, animationEnd, append, appendTo, attr, blur, change, children, click, closest, css, data, dataset, detach, each, empty, eq, filter, find, focus, focusin, focusout, hasClass, height, hide, html, index, insertAfter, insertBefore, is, keydown, keypress, keyup, mousedown, mouseenter, mouseleave, mousemove, mouseout, mouseover, mouseup, next, nextAll, off, offset, on, once, outerHeight, outerWidth, parent, parents, prepend, prependTo, prev, prevAll, prop, remove, removeAttr, removeClass, removeData, resize, scroll, scrollLeft, scrollTo, scrollTop, show, siblings, stop, styles, submit, text, toggleClass, touchend, touchmove, touchstart, transform, transition, transitionEnd, trigger, val, value, width };\n","import {\n  $,\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  styles,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n} from 'dom7';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  styles,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  Object.defineProperty($.fn, methodName, { value: Methods[methodName], writable: true });\n});\n\nexport default $;\n","import { getDocument, getWindow } from 'ssr-window';\n\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach((key) => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n\n  const curStyle = getComputedStyle(el, null);\n\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform\n        .split(', ')\n        .map((a) => a.replace(',', '.'))\n        .join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix =\n      curStyle.MozTransform ||\n      curStyle.OTransform ||\n      curStyle.MsTransform ||\n      curStyle.msTransform ||\n      curStyle.transform ||\n      curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return (\n    typeof o === 'object' &&\n    o !== null &&\n    o.constructor &&\n    Object.prototype.toString.call(o).slice(8, -1) === 'Object'\n  );\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter((key) => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\n\nfunction bindModuleMethods(instance, obj) {\n  Object.keys(obj).forEach((key) => {\n    if (isObject(obj[key])) {\n      Object.keys(obj[key]).forEach((subKey) => {\n        if (typeof obj[key][subKey] === 'function') {\n          obj[key][subKey] = obj[key][subKey].bind(instance);\n        }\n      });\n    }\n    instance[key] = obj[key];\n  });\n}\n\nfunction classesToSelector(classes = '') {\n  return `.${classes\n    .trim()\n    .replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n    .replace(/ /g, '.')}`;\n}\n\nfunction createElementIfNotDefined($container, params, createElements, checkProps) {\n  const document = getDocument();\n  if (createElements) {\n    Object.keys(checkProps).forEach((key) => {\n      if (!params[key] && params.auto === true) {\n        const element = document.createElement('div');\n        element.className = checkProps[key];\n        $container.append(element);\n        params[key] = element;\n      }\n    });\n  }\n  return params;\n}\n\nexport {\n  deleteProps,\n  nextTick,\n  now,\n  getTranslate,\n  isObject,\n  extend,\n  bindModuleMethods,\n  getComputedStyle,\n  classesToSelector,\n  createElementIfNotDefined,\n};\n","import { getWindow, getDocument } from 'ssr-window';\n\nlet support;\n\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n\n  return {\n    touch: !!(\n      'ontouchstart' in window ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch)\n    ),\n\n    pointerEvents:\n      !!window.PointerEvent &&\n      'maxTouchPoints' in window.navigator &&\n      window.navigator.maxTouchPoints >= 0,\n\n    observer: (function checkObserver() {\n      return 'MutationObserver' in window || 'WebkitMutationObserver' in window;\n    })(),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    })(),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    })(),\n  };\n}\n\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\n\nexport { getSupport };\n","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support';\n\nlet device;\n\nfunction calcDevice({ userAgent } = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n  };\n\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = [\n    '1024x1366',\n    '1366x1024',\n    '834x1194',\n    '1194x834',\n    '834x1112',\n    '1112x834',\n    '768x1024',\n    '1024x768',\n    '820x1180',\n    '1180x820',\n    '810x1080',\n    '1080x810',\n  ];\n  if (\n    !ipad &&\n    macos &&\n    support.touch &&\n    iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0\n  ) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\n\nfunction getDevice(overrides = {}) {\n  if (!device) {\n    device = calcDevice(overrides);\n  }\n  return device;\n}\n\nexport { getDevice };\n","import { getWindow } from 'ssr-window';\n\nlet browser;\n\nfunction calcBrowser() {\n  const window = getWindow();\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  return {\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}\n\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\n\nexport { getBrowser };\n","import { getWindow } from 'ssr-window';\nimport { extend } from '../../utils/utils';\n\nconst supportsResizeObserver = () => {\n  const window = getWindow();\n  return typeof window.ResizeObserver !== 'undefined';\n};\n\nexport default {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    extend(swiper, {\n      resize: {\n        observer: null,\n        createObserver() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.resize.observer = new ResizeObserver((entries) => {\n            const { width, height } = swiper;\n            let newWidth = width;\n            let newHeight = height;\n            entries.forEach(({ contentBoxSize, contentRect, target }) => {\n              if (target && target !== swiper.el) return;\n              newWidth = contentRect\n                ? contentRect.width\n                : (contentBoxSize[0] || contentBoxSize).inlineSize;\n              newHeight = contentRect\n                ? contentRect.height\n                : (contentBoxSize[0] || contentBoxSize).blockSize;\n            });\n            if (newWidth !== width || newHeight !== height) {\n              swiper.resize.resizeHandler();\n            }\n          });\n          swiper.resize.observer.observe(swiper.el);\n        },\n        removeObserver() {\n          if (swiper.resize.observer && swiper.resize.observer.unobserve && swiper.el) {\n            swiper.resize.observer.unobserve(swiper.el);\n            swiper.resize.observer = null;\n          }\n        },\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      const window = getWindow();\n      if (swiper.params.resizeObserver && supportsResizeObserver()) {\n        swiper.resize.createObserver();\n        return;\n      }\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy(swiper) {\n      const window = getWindow();\n      swiper.resize.removeObserver();\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n","import { getWindow } from 'ssr-window';\nimport { bindModuleMethods } from '../../utils/utils';\n\nconst Observer = {\n  attach(target, options = {}) {\n    const window = getWindow();\n    const swiper = this;\n\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], {\n      childList: swiper.params.observeSlideChildren,\n    });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nexport default {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      observer: {\n        ...Observer,\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      swiper.observer.init();\n    },\n    destroy(swiper) {\n      swiper.observer.destroy();\n    },\n  },\n};\n","import { extend } from '../../utils/utils';\n\nexport default {\n  useParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        extend(instanceParams, module.params);\n      }\n    });\n  },\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  },\n};\n","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n\n  onAny(handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (\n            eventHandler === handler ||\n            (eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler)\n          ) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n\n    eventsArray.forEach((event) => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach((eventHandler) => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  },\n};\n","import { extend } from '../../../utils/utils';\n\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width =\n    width -\n    parseInt($el.css('padding-left') || 0, 10) -\n    parseInt($el.css('padding-right') || 0, 10);\n  height =\n    height -\n    parseInt($el.css('padding-top') || 0, 10) -\n    parseInt($el.css('padding-bottom') || 0, 10);\n\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n\n  extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n","import { extend } from '../../../utils/utils';\n\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom',\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n\n  const params = swiper.params;\n\n  const { $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginBottom: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '', marginTop: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (\n      Math.floor(slidesLength / params.slidesPerColumn) ===\n      slidesLength / swiper.params.slidesPerColumn\n    ) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows =\n        Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(\n        slidesNumberEvenToRows,\n        params.slidesPerView * params.slidesPerColumn,\n      );\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        const slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        const columnsInGroup =\n          groupIndex === 0\n            ? params.slidesPerGroup\n            : Math.min(\n                Math.ceil(\n                  (slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) /\n                    slidesPerColumn,\n                ),\n                params.slidesPerGroup,\n              );\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n\n        newSlideOrderIndex = column + (row * slidesNumberEvenToRows) / slidesPerColumn;\n        slide.css({\n          '-webkit-box-ordinal-group': newSlideOrderIndex,\n          '-moz-box-ordinal-group': newSlideOrderIndex,\n          '-ms-flex-order': newSlideOrderIndex,\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex,\n        });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - column * slidesPerColumn;\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n      slide.css(\n        getDirectionLabel('margin-top'),\n        row !== 0 ? params.spaceBetween && `${params.spaceBetween}px` : '',\n      );\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = getComputedStyle(slide[0]);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const { clientWidth, offsetWidth } = slide[0];\n          slideSize =\n            width +\n            paddingLeft +\n            paddingRight +\n            marginLeft +\n            marginRight +\n            (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0)\n        slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (\n        (index - Math.min(swiper.params.slidesPerGroupSkip, index)) %\n          swiper.params.slidesPerGroup ===\n        0\n      )\n        snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (params.setWrapperSize) {\n    $wrapperEl.css({\n      [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`,\n    });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize =\n      Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    $wrapperEl.css({\n      [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`,\n    });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n\n    if (\n      Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) >\n      1\n    ) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides\n      .filter((_, slideIndex) => {\n        if (!params.cssMode) return true;\n        if (slideIndex === slides.length - 1) {\n          return false;\n        }\n        return true;\n      })\n      .css({ [key]: `${spaceBetween}px` });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map((snap) => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n\n  const getSlideByIndex = (index) => {\n    if (isVirtual) {\n      return swiper.slides.filter(\n        (el) => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index,\n      )[0];\n    }\n    return swiper.slides.eq(index)[0];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      swiper.visibleSlides.each((slide) => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal()\n      ? slides[i].offsetLeft\n      : slides[i].offsetTop;\n  }\n}\n","import $ from '../../../utils/dom';\n\nexport default function updateSlidesProgress(translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress =\n      (offsetCenter +\n        (params.centeredSlides ? swiper.minTranslate() : 0) -\n        slide.swiperSlideOffset) /\n      (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible =\n        (slideBefore >= 0 && slideBefore < swiper.size - 1) ||\n        (slideAfter > 1 && slideAfter <= swiper.size) ||\n        (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n","import { extend } from '../../../utils/utils';\n\nexport default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = (swiper && swiper.translate && swiper.translate * multiplier) || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (\n    params.watchSlidesProgress ||\n    params.watchSlidesVisibility ||\n    (params.centeredSlides && params.autoHeight)\n  )\n    swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n","export default function updateSlidesClasses() {\n  const swiper = this;\n\n  const { slides, params, $wrapperEl, activeIndex, realIndex } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(\n    `${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`,\n  );\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(\n      `.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`,\n    );\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`,\n        )\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`,\n        )\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide\n    .nextAll(`.${params.slideClass}`)\n    .eq(0)\n    .addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide\n    .prevAll(`.${params.slideClass}`)\n    .eq(0)\n    .addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}:not(.${\n            params.slideDuplicateClass\n          })[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`,\n        )\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}.${\n            params.slideDuplicateClass\n          }[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`,\n        )\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}:not(.${\n            params.slideDuplicateClass\n          })[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`,\n        )\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}.${\n            params.slideDuplicateClass\n          }[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`,\n        )\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}\n","import { extend } from '../../../utils/utils';\n\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (\n          translate >= slidesGrid[i] &&\n          translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2\n        ) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(\n    swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex,\n    10,\n  );\n\n  extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n","import $ from '../../../utils/dom';\n\nexport default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  let slideIndex;\n\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (\n    params.slideToClickedSlide &&\n    swiper.clickedIndex !== undefined &&\n    swiper.clickedIndex !== swiper.activeIndex\n  ) {\n    swiper.slideToClickedSlide();\n  }\n}\n","import updateSize from './updateSize';\nimport updateSlides from './updateSlides';\nimport updateAutoHeight from './updateAutoHeight';\nimport updateSlidesOffset from './updateSlidesOffset';\nimport updateSlidesProgress from './updateSlidesProgress';\nimport updateProgress from './updateProgress';\nimport updateSlidesClasses from './updateSlidesClasses';\nimport updateActiveIndex from './updateActiveIndex';\nimport updateClickedSlide from './updateClickedSlide';\n\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n","import { getTranslate } from '../../../utils/utils';\n\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const { params, rtlTranslate: rtl, translate, $wrapperEl } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const { rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n","export default function minTranslate() {\n  return -this.snapGrid[0];\n}\n","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}\n","export default function translateTo(\n  translate = 0,\n  speed = this.params.speed,\n  runCallbacks = true,\n  translateBounds = true,\n  internal,\n) {\n  const swiper = this;\n\n  const { params, wrapperEl } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener(\n            'transitionend',\n            swiper.onTranslateToWrapperTransitionEnd,\n          );\n          swiper.$wrapperEl[0].removeEventListener(\n            'webkitTransitionEnd',\n            swiper.onTranslateToWrapperTransitionEnd,\n          );\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener(\n        'transitionend',\n        swiper.onTranslateToWrapperTransitionEnd,\n      );\n      swiper.$wrapperEl[0].addEventListener(\n        'webkitTransitionEnd',\n        swiper.onTranslateToWrapperTransitionEnd,\n      );\n    }\n  }\n\n  return true;\n}\n","import getTranslate from './getTranslate';\nimport setTranslate from './setTranslate';\nimport minTranslate from './minTranslate';\nimport maxTranslate from './maxTranslate';\nimport translateTo from './translateTo';\n\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo,\n};\n","export default function setTransition(duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n","export default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n","export default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex, params } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n","import setTransition from './setTransition';\nimport transitionStart from './transitionStart';\nimport transitionEnd from './transitionEnd';\n\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n","export default function slideTo(\n  index = 0,\n  speed = this.params.speed,\n  runCallbacks = true,\n  internal,\n  initial,\n) {\n  if (typeof index !== 'number' && typeof index !== 'string') {\n    throw new Error(\n      `The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`,\n    );\n  }\n\n  if (typeof index === 'string') {\n    /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */\n    const indexAsNumber = parseInt(index, 10);\n\n    /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */\n    const isValidNumber = isFinite(indexAsNumber);\n\n    if (!isValidNumber) {\n      throw new Error(\n        `The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`,\n      );\n    }\n\n    // Knowing that the converted `index` is a valid number,\n    // we can update the original argument's value.\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled,\n  } = swiper;\n\n  if (\n    (swiper.animating && params.preventInteractionOnTransition) ||\n    (!enabled && !internal && !initial)\n  ) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGird = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (\n          normalizedTranslate >= normalizedGird &&\n          normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGird) / 2\n        ) {\n          slideIndex = i;\n        } else if (\n          normalizedTranslate >= normalizedGird &&\n          normalizedTranslate < normalizedGridNext\n        ) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGird) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (\n      !swiper.allowSlideNext &&\n      translate < swiper.translate &&\n      translate < swiper.minTranslate()\n    ) {\n      return false;\n    }\n    if (\n      !swiper.allowSlidePrev &&\n      translate > swiper.translate &&\n      translate > swiper.maxTranslate()\n    ) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    let t = -translate;\n    if (rtl) {\n      t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\n    }\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: t,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener(\n            'transitionend',\n            swiper.onSlideToWrapperTransitionEnd,\n          );\n          swiper.$wrapperEl[0].removeEventListener(\n            'webkitTransitionEnd',\n            swiper.onSlideToWrapperTransitionEnd,\n          );\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener(\n        'webkitTransitionEnd',\n        swiper.onSlideToWrapperTransitionEnd,\n      );\n    }\n  }\n\n  return true;\n}\n","export default function slideToLoop(\n  index = 0,\n  speed = this.params.speed,\n  runCallbacks = true,\n  internal,\n) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating, enabled } = swiper;\n  if (!enabled) return swiper;\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating, snapGrid, slidesGrid, rtlTranslate, enabled } = swiper;\n  if (!enabled) return swiper;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach((snap) => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(\n  speed = this.params.speed,\n  runCallbacks = true,\n  internal,\n  threshold = 0.5,\n) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n","import $ from '../../../utils/dom';\nimport { nextTick } from '../../../utils/utils';\n\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView =\n    params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        slideToIndex < swiper.loopedSlides - slidesPerView / 2 ||\n        slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(\n            `.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`,\n          )\n          .eq(0)\n          .index();\n\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(\n          `.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`,\n        )\n        .eq(0)\n        .index();\n\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n","import slideTo from './slideTo';\nimport slideToLoop from './slideToLoop';\nimport slideNext from './slideNext';\nimport slidePrev from './slidePrev';\nimport slideReset from './slideReset';\nimport slideToClosest from './slideToClosest';\nimport slideToClickedSlide from './slideToClickedSlide';\n\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n","import { getDocument } from 'ssr-window';\nimport $ from '../../../utils/dom';\n\nexport default function loopCreate() {\n  const swiper = this;\n  const document = getDocument();\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(\n          `${params.slideClass} ${params.slideBlankClass}`,\n        );\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((el, index) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) {\n      appendSlides.push(el);\n    }\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n      prependSlides.push(el);\n    }\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n","export default function loopFix() {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex,\n    slides,\n    loopedSlides,\n    allowSlidePrev,\n    allowSlideNext,\n    snapGrid,\n    rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = slides.length - loopedSlides * 3 + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n","export default function loopDestroy() {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl\n    .children(\n      `.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`,\n    )\n    .remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n","import loopCreate from './loopCreate';\nimport loopFix from './loopFix';\nimport loopDestroy from './loopDestroy';\n\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (\n    swiper.support.touch ||\n    !swiper.params.simulateTouch ||\n    (swiper.params.watchOverflow && swiper.isLocked) ||\n    swiper.params.cssMode\n  )\n    return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (\n    swiper.support.touch ||\n    (swiper.params.watchOverflow && swiper.isLocked) ||\n    swiper.params.cssMode\n  ) {\n    return;\n  }\n  swiper.el.style.cursor = '';\n}\n","import setGrabCursor from './setGrabCursor';\nimport unsetGrabCursor from './unsetGrabCursor';\n\nexport default {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n","export default function appendSlide(slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && swiper.support.observer)) {\n    swiper.update();\n  }\n}\n","export default function prependSlide(slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && swiper.support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n","export default function addSlide(index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex =\n      activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && swiper.support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && swiper.support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n","export default function removeAllSlides() {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n","import appendSlide from './appendSlide';\nimport prependSlide from './prependSlide';\nimport addSlide from './addSlide';\nimport removeSlide from './removeSlide';\nimport removeAllSlides from './removeAllSlides';\n\nexport default {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../../utils/dom';\nimport { extend, now } from '../../../utils/utils';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\n\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n\n  const data = swiper.touchEventsData;\n  const { params, touches, enabled } = swiper;\n  if (!enabled) return;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\n    $targetEl = $(event.path[0]);\n  }\n\n  const noSwipingSelector = params.noSwipingSelector\n    ? params.noSwipingSelector\n    : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (\n    params.noSwiping &&\n    (isTargetShadow\n      ? closestElement(noSwipingSelector, e.target)\n      : $targetEl.closest(noSwipingSelector)[0])\n  ) {\n    swiper.allowClick = true;\n    return;\n  }\n\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection &&\n    (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)\n  ) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n\n  extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($targetEl.is(data.focusableElements)) preventDefault = false;\n    if (\n      document.activeElement &&\n      $(document.activeElement).is(data.focusableElements) &&\n      document.activeElement !== $targetEl[0]\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault =\n      preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (\n      (params.touchStartForcePreventDefault || shouldPreventDefault) &&\n      !$targetEl[0].isContentEditable\n    ) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n","import { getDocument } from 'ssr-window';\nimport $ from '../../../utils/dom';\nimport { extend, now } from '../../../utils/utils';\n\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl, enabled } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type !== 'touchmove') return;\n  const targetTouch =\n    e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate()) ||\n        (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) ||\n      (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold)\n    return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (\n      (swiper.isHorizontal() && touches.currentY === touches.startY) ||\n      (swiper.isVertical() && touches.currentX === touches.startX)\n    ) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal()\n          ? touchAngle > params.touchAngle\n          : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance)\n      data.currentTranslate =\n        swiper.minTranslate() -\n        1 +\n        (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance)\n      data.currentTranslate =\n        swiper.maxTranslate() +\n        1 -\n        (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (\n    !swiper.allowSlideNext &&\n    swiper.swipeDirection === 'next' &&\n    data.currentTranslate < data.startTranslate\n  ) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (\n    !swiper.allowSlidePrev &&\n    swiper.swipeDirection === 'prev' &&\n    data.currentTranslate > data.startTranslate\n  ) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal()\n          ? touches.currentX - touches.startX\n          : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n","import { now, nextTick } from '../../../utils/utils';\n\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const { params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid, enabled } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (\n    params.grabCursor &&\n    data.isMoved &&\n    data.isTouched &&\n    (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)\n  ) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (\n    !data.isTouched ||\n    !data.isMoved ||\n    !swiper.swipeDirection ||\n    touches.diff === 0 ||\n    data.currentTranslate === data.startTranslate\n  ) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (\n          Math.abs(snapGrid[nextSlide] - newPosition) <\n            Math.abs(snapGrid[nextSlide - 1] - newPosition) ||\n          swiper.swipeDirection === 'next'\n        ) {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      swiper.emit('_freeModeNoMomentumRelease');\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (\n    let i = 0;\n    i < slidesGrid.length;\n    i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup\n  ) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget =\n      swiper.navigation &&\n      (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n","export default function onResize() {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  swiper.updateSlidesClasses();\n  if (\n    (params.slidesPerView === 'auto' || params.slidesPerView > 1) &&\n    swiper.isEnd &&\n    !swiper.isBeginning &&\n    !swiper.params.centeredSlides\n  ) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n","export default function onScroll() {\n  const swiper = this;\n  const { wrapperEl, rtlTranslate, enabled } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    if (rtlTranslate) {\n      swiper.translate = wrapperEl.scrollWidth - wrapperEl.offsetWidth - wrapperEl.scrollLeft;\n    } else {\n      swiper.translate = -wrapperEl.scrollLeft;\n    }\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === -0) swiper.translate = 0;\n\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n","import { getDocument } from 'ssr-window';\n\nimport onTouchStart from './onTouchStart';\nimport onTouchMove from './onTouchMove';\nimport onTouchEnd from './onTouchEnd';\nimport onResize from './onResize';\nimport onClick from './onClick';\nimport onScroll from './onScroll';\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\n\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const { params, touchEvents, el, wrapperEl, device, support } = swiper;\n\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!support.touch && support.pointerEvents) {\n    el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (support.touch) {\n      const passiveListener =\n        touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners\n          ? { passive: true, capture: false }\n          : false;\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.addEventListener(\n        touchEvents.move,\n        swiper.onTouchMove,\n        support.passiveListener ? { passive: false, capture } : capture,\n      );\n      el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n      if (!dummyEventAttached) {\n        document.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n    }\n    if (\n      (params.simulateTouch && !device.ios && !device.android) ||\n      (params.simulateTouch && !support.touch && device.ios)\n    ) {\n      el.addEventListener('mousedown', swiper.onTouchStart, false);\n      document.addEventListener('mousemove', swiper.onTouchMove, capture);\n      document.addEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.addEventListener('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl.addEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper.on(\n      device.ios || device.android\n        ? 'resize orientationchange observerUpdate'\n        : 'resize observerUpdate',\n      onResize,\n      true,\n    );\n  } else {\n    swiper.on('observerUpdate', onResize, true);\n  }\n}\n\nfunction detachEvents() {\n  const swiper = this;\n  const document = getDocument();\n\n  const { params, touchEvents, el, wrapperEl, device, support } = swiper;\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!support.touch && support.pointerEvents) {\n    el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (support.touch) {\n      const passiveListener =\n        touchEvents.start === 'onTouchStart' && support.passiveListener && params.passiveListeners\n          ? { passive: true, capture: false }\n          : false;\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    }\n    if (\n      (params.simulateTouch && !device.ios && !device.android) ||\n      (params.simulateTouch && !support.touch && device.ios)\n    ) {\n      el.removeEventListener('mousedown', swiper.onTouchStart, false);\n      document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n      document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.removeEventListener('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl.removeEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  swiper.off(\n    device.ios || device.android\n      ? 'resize orientationchange observerUpdate'\n      : 'resize observerUpdate',\n    onResize,\n  );\n}\n\nexport default {\n  attachEvents,\n  detachEvents,\n};\n","import { extend } from '../../../utils/utils';\n\nexport default function setBreakpoint() {\n  const swiper = this;\n  const { activeIndex, initialized, loopedSlides = 0, params, $el } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  if (breakpointOnlyParams) {\n    [\n      'slidesPerView',\n      'spaceBetween',\n      'slidesPerGroup',\n      'slidesPerGroupSkip',\n      'slidesPerColumn',\n    ].forEach((param) => {\n      const paramValue = breakpointOnlyParams[param];\n      if (typeof paramValue === 'undefined') return;\n      if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n        breakpointOnlyParams[param] = 'auto';\n      } else if (param === 'slidesPerView') {\n        breakpointOnlyParams[param] = parseFloat(paramValue);\n      } else {\n        breakpointOnlyParams[param] = parseInt(paramValue, 10);\n      }\n    });\n  }\n\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = params.slidesPerColumn > 1;\n  const isMultiRow = breakpointParams.slidesPerColumn > 1;\n\n  const wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(\n      `${params.containerModifierClass}multirow ${params.containerModifierClass}multirow-column`,\n    );\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(`${params.containerModifierClass}multirow`);\n    if (\n      (breakpointParams.slidesPerColumnFill && breakpointParams.slidesPerColumnFill === 'column') ||\n      (!breakpointParams.slidesPerColumnFill && params.slidesPerColumnFill === 'column')\n    ) {\n      $el.addClass(`${params.containerModifierClass}multirow-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  const directionChanged =\n    breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop =\n    params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n\n  extend(swiper.params, breakpointParams);\n\n  const isEnabled = swiper.params.enabled;\n\n  extend(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev,\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}\n","import { getWindow } from 'ssr-window';\n\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || (base === 'container' && !containerEl)) return undefined;\n  let breakpoint = false;\n\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n\n  const points = Object.keys(breakpoints).map((point) => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return { value, point };\n    }\n    return { value: point, point };\n  });\n\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const { point, value } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n","import setBreakpoint from './setBreakpoint';\nimport getBreakpoint from './getBreakpoint';\n\nexport default { setBreakpoint, getBreakpoint };\n","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach((item) => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach((classNames) => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\n\nexport default function addClasses() {\n  const swiper = this;\n  const { classNames, params, rtl, $el, device, support } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses([\n    'initialized',\n    params.direction,\n    { 'pointer-events': support.pointerEvents && !support.touch },\n    { 'free-mode': params.freeMode },\n    { 'autoheight': params.autoHeight },\n    { 'rtl': rtl },\n    { 'multirow': params.slidesPerColumn > 1 },\n    { 'multirow-column': params.slidesPerColumn > 1 && params.slidesPerColumnFill === 'column' },\n    { 'android': device.android },\n    { 'ios': device.ios },\n    { 'css-mode': params.cssMode },\n  ], params.containerModifierClass);\n  classNames.push(...suffixes);\n  $el.addClass([...classNames].join(' '));\n  swiper.emitContainerClasses();\n}\n","export default function removeClasses() {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n  swiper.emitContainerClasses();\n}\n","import addClasses from './addClasses';\nimport removeClasses from './removeClasses';\n\nexport default { addClasses, removeClasses };\n","import { getWindow } from 'ssr-window';\nimport $ from '../../../utils/dom';\n\nexport default function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n  const window = getWindow();\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  const isPicture = $(imageEl).parent('picture')[0];\n\n  if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n","export default function preloadImages() {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady,\n    );\n  }\n}\n","import loadImage from './loadImage';\nimport preloadImages from './preloadImages';\n\nexport default {\n  loadImage,\n  preloadImages,\n};\n","function checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition =\n    swiper.slides.length > 0 &&\n    params.slidesOffsetBefore +\n      params.spaceBetween * (swiper.slides.length - 1) +\n      swiper.slides[0].offsetWidth * swiper.slides.length;\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    if (swiper.navigation) swiper.navigation.update();\n  }\n}\n\nexport default { checkOverflow };\n","export default {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: false,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n\n  // Overrides\n  width: null,\n  height: null,\n\n  //\n  preventInteractionOnTransition: false,\n\n  // ssr\n  userAgent: null,\n  url: null,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n  loopPreventsSlide: true,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n\n  // Internals\n  _emitClasses: false,\n};\n","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport $ from '../../utils/dom';\nimport { extend, now, deleteProps } from '../../utils/utils';\nimport { getSupport } from '../../utils/get-support';\nimport { getDevice } from '../../utils/get-device';\nimport { getBrowser } from '../../utils/get-browser';\n\nimport Resize from '../../modules/resize/resize';\nimport Observer from '../../modules/observer/observer';\n\nimport modular from './modular';\nimport eventsEmitter from './events-emitter';\n\nimport update from './update/index';\nimport translate from './translate/index';\nimport transition from './transition/index';\nimport slide from './slide/index';\nimport loop from './loop/index';\nimport grabCursor from './grab-cursor/index';\nimport manipulation from './manipulation/index';\nimport events from './events/index';\nimport breakpoints from './breakpoints/index';\nimport classes from './classes/index';\nimport images from './images/index';\nimport checkOverflow from './check-overflow/index';\n\nimport defaults from './defaults';\n\nconst prototypes = {\n  modular,\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (\n      args.length === 1 &&\n      args[0].constructor &&\n      Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object'\n    ) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    if (params.el && $(params.el).length > 1) {\n      const swipers = [];\n      $(params.el).each((containerEl) => {\n        const newParams = extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({ userAgent: params.userAgent });\n    swiper.browser = getBrowser();\n\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (\n          ['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 &&\n          params[moduleParamName] === true\n        ) {\n          params[moduleParamName] = { auto: true };\n        }\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object' &&\n          !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults);\n    swiper.useParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach((eventName) => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Extend Swiper\n    extend(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (swiper.support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return swiper.support.touch || !swiper.params.simulateTouch\n          ? swiper.touchEventsTouch\n          : swiper.touchEventsDesktop;\n      })(),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const classes = swiper.el.className.split(' ').filter((className) => {\n      return (\n        className.indexOf('swiper-container') === 0 ||\n        className.indexOf(swiper.params.containerModifierClass) === 0\n      );\n    });\n    swiper.emit('_containerClasses', classes.join(' '));\n  }\n\n  getSlideClasses(slideEl) {\n    const swiper = this;\n\n    return slideEl.className\n      .split(' ')\n      .filter((className) => {\n        return (\n          className.indexOf('swiper-slide') === 0 ||\n          className.indexOf(swiper.params.slideClass) === 0\n        );\n      })\n      .join(' ');\n  }\n\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.each((slideEl) => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({ slideEl, classNames });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const { params, slides, slidesGrid, size: swiperSize, activeIndex } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(\n        Math.max(translateValue, swiper.maxTranslate()),\n        swiper.minTranslate(),\n      );\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if (\n        (swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) &&\n        swiper.isEnd &&\n        !swiper.params.centeredSlides\n      ) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (\n      newDirection === currentDirection ||\n      (newDirection !== 'horizontal' && newDirection !== 'vertical')\n    ) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  mount(el) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    const $el = $(el || swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return false;\n    }\n\n    el.swiper = swiper;\n\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = $(el.shadowRoot.querySelector(getWrapperSelector()));\n        // Children needs to return slot items\n        res.children = (options) => $el.children(options);\n        return res;\n      }\n      return $el.children(getWrapperSelector());\n    };\n    // Find Wrapper\n    let $wrapperEl = getWrapper();\n    if ($wrapperEl.length === 0 && swiper.params.createElements) {\n      const document = getDocument();\n      const wrapper = document.createElement('div');\n      $wrapperEl = $(wrapper);\n      wrapper.className = swiper.params.wrapperClass;\n      $el.append(wrapper);\n      $el.children(`.${swiper.params.slideClass}`).each((slideEl) => {\n        $wrapperEl.append(slideEl);\n      });\n    }\n\n    extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n      mounted: true,\n\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n      rtlTranslate:\n        swiper.params.direction === 'horizontal' &&\n        (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n    });\n\n    return true;\n  }\n\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(\n        swiper.params.initialSlide + swiper.loopedSlides,\n        0,\n        swiper.params.runCallbacksOnInit,\n        false,\n        true,\n      );\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n\n    return swiper;\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const { params, $el, $wrapperEl, slides } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass(\n            [\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass,\n            ].join(' '),\n          )\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static installModule(module) {\n    if (!Swiper.prototype.modules) Swiper.prototype.modules = {};\n    const name = module.name || `${Object.keys(Swiper.prototype.modules).length}_${now()}`;\n    Swiper.prototype.modules[name] = module;\n  }\n\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach((m) => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\n\nObject.keys(prototypes).forEach((prototypeGroup) => {\n  Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\n\nSwiper.use([Resize, Observer]);\n\nexport default Swiper;\n","import $ from '../../utils/dom';\nimport { extend, bindModuleMethods } from '../../utils/utils';\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = slidesPerGroup + addSlidesBefore;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        })(),\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl\n            .find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`)\n            .remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes\n      .sort((a, b) => b - a)\n      .forEach((index) => {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(\n          `<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`,\n        );\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nexport default {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      virtual: {\n        ...Virtual,\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit(swiper) {\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      extend(swiper.params, overwriteParams);\n      extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate(swiper) {\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../utils/dom';\nimport { bindModuleMethods } from '../../utils/utils';\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    const window = getWindow();\n    const document = getDocument();\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (\n      !swiper.allowSlideNext &&\n      ((swiper.isHorizontal() && isArrowRight) ||\n        (swiper.isVertical() && isArrowDown) ||\n        isPageDown)\n    ) {\n      return false;\n    }\n    if (\n      !swiper.allowSlidePrev &&\n      ((swiper.isHorizontal() && isArrowLeft) || (swiper.isVertical() && isArrowUp) || isPageUp)\n    ) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (\n      document.activeElement &&\n      document.activeElement.nodeName &&\n      (document.activeElement.nodeName.toLowerCase() === 'input' ||\n        document.activeElement.nodeName.toLowerCase() === 'textarea')\n    ) {\n      return undefined;\n    }\n    if (\n      swiper.params.keyboard.onlyInViewport &&\n      (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)\n    ) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (\n        swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 &&\n        swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0\n      ) {\n        return undefined;\n      }\n\n      const $el = swiper.$el;\n      const swiperWidth = $el[0].clientWidth;\n      const swiperHeight = $el[0].clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiperWidth, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiperHeight],\n        [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((isPageDown || isArrowRight) && !rtl) || ((isPageUp || isArrowLeft) && rtl))\n        swiper.slideNext();\n      if (((isPageUp || isArrowLeft) && !rtl) || ((isPageDown || isArrowRight) && rtl))\n        swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    const document = getDocument();\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    const document = getDocument();\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nexport default {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      keyboard: {\n        enabled: false,\n        ...Keyboard,\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy(swiper) {\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../utils/dom';\nimport { now, nextTick, bindModuleMethods } from '../../utils/utils';\n\nfunction isEventSupported() {\n  const document = getDocument();\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (\n    !isSupported &&\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: now(),\n  lastEventBeforeSnap: undefined,\n  recentWheelEvents: [],\n  event() {\n    const window = getWindow();\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  },\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    const swiper = this;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges)\n      return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;\n      else return true;\n    } else {\n      delta =\n        Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop\n      ? true\n      : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n    if (!swiper.params.freeMode) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event,\n      };\n\n      // Keep the most recent events\n      const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n      const prevEvent = recentWheelEvents.length\n        ? recentWheelEvents[recentWheelEvents.length - 1]\n        : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (\n          newEvent.direction !== prevEvent.direction ||\n          newEvent.delta > prevEvent.delta ||\n          newEvent.time > prevEvent.time + 150\n        ) {\n          swiper.mousewheel.animateSlider(newEvent);\n        }\n      } else {\n        swiper.mousewheel.animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (swiper.mousewheel.releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n      };\n      const { lastEventBeforeSnap } = swiper.mousewheel;\n      const ignoreWheelEvents =\n        lastEventBeforeSnap &&\n        newEvent.time < lastEventBeforeSnap.time + 500 &&\n        newEvent.delta <= lastEventBeforeSnap.delta &&\n        newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = undefined;\n          const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n          const prevEvent = recentWheelEvents.length\n            ? recentWheelEvents[recentWheelEvents.length - 1]\n            : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (\n            prevEvent &&\n            (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)\n          ) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (\n            recentWheelEvents.length >= 15 &&\n            newEvent.time - firstEvent.time < 500 &&\n            firstEvent.delta - newEvent.delta >= 1 &&\n            newEvent.delta <= 6\n          ) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            swiper.mousewheel.lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            swiper.mousewheel.timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n          if (!swiper.mousewheel.timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            swiper.mousewheel.timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              swiper.mousewheel.lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction)\n          swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  animateSlider(newEvent) {\n    const swiper = this;\n    const window = getWindow();\n\n    if (\n      this.params.mousewheel.thresholdDelta &&\n      newEvent.delta < this.params.mousewheel.thresholdDelta\n    ) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n\n    if (\n      this.params.mousewheel.thresholdTime &&\n      now() - swiper.mousewheel.lastScrollTime < this.params.mousewheel.thresholdTime\n    ) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - swiper.mousewheel.lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        swiper.emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      swiper.emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    swiper.mousewheel.lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  },\n  releaseScroll(newEvent) {\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n    target.off(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nexport default {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null,\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      mousewheel: {\n        enabled: false,\n        lastScrollTime: now(),\n        lastEventBeforeSnap: undefined,\n        recentWheelEvents: [],\n\n        enable: Mousewheel.enable,\n        disable: Mousewheel.disable,\n        handle: Mousewheel.handle,\n        handleMouseEnter: Mousewheel.handleMouseEnter,\n        handleMouseLeave: Mousewheel.handleMouseLeave,\n        animateSlider: Mousewheel.animateSlider,\n        releaseScroll: Mousewheel.releaseScroll,\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        swiper.mousewheel.disable();\n      }\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy(swiper) {\n      if (swiper.params.cssMode) {\n        swiper.mousewheel.enable();\n      }\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n","import $ from '../../utils/dom';\nimport { extend, bindModuleMethods, createElementIfNotDefined } from '../../utils/utils';\n\nconst Navigation = {\n  toggleEl($el, disabled) {\n    $el[disabled ? 'addClass' : 'removeClass'](this.params.navigation.disabledClass);\n    if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n  },\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n    const toggleEl = swiper.navigation.toggleEl;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        toggleEl($prevEl, true);\n      } else {\n        toggleEl($prevEl, false);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $prevEl[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        toggleEl($nextEl, true);\n      } else {\n        toggleEl($nextEl, false);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $nextEl[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    swiper.params.navigation = createElementIfNotDefined(\n      swiper.$el,\n      swiper.params.navigation,\n      swiper.params.createElements,\n      {\n        nextEl: 'swiper-button-next',\n        prevEl: 'swiper-button-prev',\n      },\n    );\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.nextEl === 'string' &&\n        $nextEl.length > 1 &&\n        swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.prevEl === 'string' &&\n        $prevEl.length > 1 &&\n        swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n\n    if (!swiper.enabled) {\n      if ($nextEl) $nextEl.addClass(params.lockClass);\n      if ($prevEl) $prevEl.addClass(params.lockClass);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nexport default {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      navigation: {\n        ...Navigation,\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge(swiper) {\n      swiper.navigation.update();\n    },\n    fromEdge(swiper) {\n      swiper.navigation.update();\n    },\n    destroy(swiper) {\n      swiper.navigation.destroy();\n    },\n    'enable disable': (swiper) => {\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if ($nextEl) {\n        $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n      }\n      if ($prevEl) {\n        $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n      }\n    },\n    click(swiper, e) {\n      const { $nextEl, $prevEl } = swiper.navigation;\n      const targetEl = e.target;\n      if (\n        swiper.params.navigation.hideOnClick &&\n        !$(targetEl).is($prevEl) &&\n        !$(targetEl).is($nextEl)\n      ) {\n        if (\n          swiper.pagination &&\n          swiper.params.pagination &&\n          swiper.params.pagination.clickable &&\n          (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))\n        )\n          return;\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow');\n        } else {\n          swiper.emit('navigationHide');\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n","import $ from '../../utils/dom';\nimport {\n  extend,\n  bindModuleMethods,\n  classesToSelector,\n  createElementIfNotDefined,\n} from '../../utils/utils';\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (\n      !params.el ||\n      !swiper.pagination.el ||\n      !swiper.pagination.$el ||\n      swiper.pagination.$el.length === 0\n    )\n      return;\n    const slidesLength =\n      swiper.virtual && swiper.params.virtual.enabled\n        ? swiper.virtual.slides.length\n        : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop\n      ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup)\n      : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil(\n        (swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup,\n      );\n      if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n        current -= slidesLength - swiper.loopedSlides * 2;\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (\n      params.type === 'bullets' &&\n      swiper.pagination.bullets &&\n      swiper.pagination.bullets.length > 0\n    ) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets\n          .eq(0)\n          [swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(\n          swiper.isHorizontal() ? 'width' : 'height',\n          `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`,\n        );\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;\n          if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(\n        `${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`,\n      );\n      if ($el.length > 1) {\n        bullets.each((bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n              bullets\n                .eq(bullets.length - params.dynamicMainBullets - 1)\n                .addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              $firstDisplayedBullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n              $lastDisplayedBullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          } else {\n            $firstDisplayedBullet\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev`)\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev-prev`);\n            $lastDisplayedBullet\n              .next()\n              .addClass(`${params.bulletActiveClass}-next`)\n              .next()\n              .addClass(`${params.bulletActiveClass}-next-next`);\n          }\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset =\n          (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 -\n          midIndex * swiper.pagination.bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el\n        .find(classesToSelector(params.currentClass))\n        .text(params.formatFractionCurrent(current + 1));\n      $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el\n        .find(classesToSelector(params.progressbarFillClass))\n        .transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`)\n        .transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', $el[0]);\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (\n      !params.el ||\n      !swiper.pagination.el ||\n      !swiper.pagination.$el ||\n      swiper.pagination.$el.length === 0\n    )\n      return;\n    const slidesLength =\n      swiper.virtual && swiper.params.virtual.enabled\n        ? swiper.virtual.slides.length\n        : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop\n        ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup)\n        : swiper.snapGrid.length;\n      if (swiper.params.freeMode && !swiper.params.loop && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n\n      swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML =\n          `<span class=\"${params.currentClass}\"></span>` +\n          ' / ' +\n          `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    swiper.params.pagination = createElementIfNotDefined(\n      swiper.$el,\n      swiper.params.pagination,\n      swiper.params.createElements,\n      { el: 'swiper-pagination' },\n    );\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n\n    if (!swiper.enabled) {\n      $el.addClass(params.lockClass);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (\n      !params.el ||\n      !swiper.pagination.el ||\n      !swiper.pagination.$el ||\n      swiper.pagination.$el.length === 0\n    )\n      return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', classesToSelector(params.bulletClass));\n    }\n  },\n};\n\nexport default {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      pagination: {\n        dynamicBulletIndex: 0,\n        ...Pagination,\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange(swiper) {\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange(swiper) {\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange(swiper) {\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange(swiper) {\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy(swiper) {\n      swiper.pagination.destroy();\n    },\n    'enable disable': (swiper) => {\n      const { $el } = swiper.pagination;\n      if ($el) {\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\n      }\n    },\n    click(swiper, e) {\n      const targetEl = e.target;\n      if (\n        swiper.params.pagination.el &&\n        swiper.params.pagination.hideOnClick &&\n        swiper.pagination.$el.length > 0 &&\n        !$(targetEl).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        if (\n          swiper.navigation &&\n          ((swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) ||\n            (swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl))\n        )\n          return;\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow');\n        } else {\n          swiper.emit('paginationHide');\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n","import { getDocument } from 'ssr-window';\nimport $ from '../../utils/dom';\nimport { extend, nextTick, bindModuleMethods, createElementIfNotDefined } from '../../utils/utils';\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const { dragSize, trackSize, $dragEl, $el } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](\n        swiper.params.scrollbar.lockClass,\n      );\n    }\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return e.type === 'touchstart' || e.type === 'touchmove'\n        ? e.targetTouches[0].clientX\n        : e.clientX;\n    }\n    return e.type === 'touchstart' || e.type === 'touchmove'\n      ? e.targetTouches[0].clientY\n      : e.clientY;\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize, dragStartPos } = scrollbar;\n\n    let positionRatio;\n    positionRatio =\n      (scrollbar.getPointerPosition(e) -\n        $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] -\n        (dragStartPos !== null ? dragStartPos : dragSize / 2)) /\n      (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position =\n      swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos =\n      e.target === $dragEl[0] || e.target === $dragEl\n        ? scrollbar.getPointerPosition(e) -\n          e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top']\n        : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const document = getDocument();\n    const { scrollbar, touchEventsTouch, touchEventsDesktop, params, support } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener =\n      support.passiveListener && params.passiveListeners\n        ? { passive: false, capture: false }\n        : false;\n    const passiveListener =\n      support.passiveListener && params.passiveListeners\n        ? { passive: true, capture: false }\n        : false;\n    if (!target) return;\n    if (!support.touch) {\n      target.addEventListener(\n        touchEventsDesktop.start,\n        swiper.scrollbar.onDragStart,\n        activeListener,\n      );\n      document.addEventListener(\n        touchEventsDesktop.move,\n        swiper.scrollbar.onDragMove,\n        activeListener,\n      );\n      document.addEventListener(\n        touchEventsDesktop.end,\n        swiper.scrollbar.onDragEnd,\n        passiveListener,\n      );\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const document = getDocument();\n    const { scrollbar, touchEventsTouch, touchEventsDesktop, params, support } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener =\n      support.passiveListener && params.passiveListeners\n        ? { passive: false, capture: false }\n        : false;\n    const passiveListener =\n      support.passiveListener && params.passiveListeners\n        ? { passive: true, capture: false }\n        : false;\n    if (!target) return;\n    if (!support.touch) {\n      target.removeEventListener(\n        touchEventsDesktop.start,\n        swiper.scrollbar.onDragStart,\n        activeListener,\n      );\n      document.removeEventListener(\n        touchEventsDesktop.move,\n        swiper.scrollbar.onDragMove,\n        activeListener,\n      );\n      document.removeEventListener(\n        touchEventsDesktop.end,\n        swiper.scrollbar.onDragEnd,\n        passiveListener,\n      );\n    } else {\n      target.removeEventListener(\n        touchEventsTouch.start,\n        swiper.scrollbar.onDragStart,\n        activeListener,\n      );\n      target.removeEventListener(\n        touchEventsTouch.move,\n        swiper.scrollbar.onDragMove,\n        activeListener,\n      );\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(\n      $swiperEl,\n      swiper.params.scrollbar,\n      swiper.params.createElements,\n      { el: 'swiper-scrollbar' },\n    );\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if (\n      swiper.params.uniqueNavElements &&\n      typeof params.el === 'string' &&\n      $el.length > 1 &&\n      $swiperEl.find(params.el).length === 1\n    ) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nexport default {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      scrollbar: {\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n        ...Scrollbar,\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update(swiper) {\n      swiper.scrollbar.updateSize();\n    },\n    resize(swiper) {\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate(swiper) {\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate(swiper) {\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(swiper, duration) {\n      swiper.scrollbar.setTransition(duration);\n    },\n    'enable disable': (swiper) => {\n      const { $el } = swiper.scrollbar;\n      if ($el) {\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n      }\n    },\n    destroy(swiper) {\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n","import $ from '../../utils/dom';\nimport { bindModuleMethods } from '../../utils/utils';\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const { $el, slides, progress, snapGrid } = swiper;\n    $el\n      .children(\n        '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]',\n      )\n      .each((el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl)\n        .find(\n          '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]',\n        )\n        .each((el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el\n      .find(\n        '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]',\n      )\n      .each((parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration =\n          parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nexport default {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      parallax: {\n        ...Parallax,\n      },\n    });\n  },\n  on: {\n    beforeInit(swiper) {\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init(swiper) {\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate(swiper) {\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(swiper, duration) {\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n","import { getWindow } from 'ssr-window';\nimport $ from '../../utils/dom';\nimport { bindModuleMethods, getTranslate } from '../../utils/utils';\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    if (gesture.$imageEl) {\n      gesture.$imageEl.transition(0);\n    }\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const gesture = zoom.gesture;\n    if (!support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n      if (e.type === 'gesturechange') zoom.onGestureStart(e);\n      return;\n    }\n    if (support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const device = swiper.device;\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (\n        e.type !== 'touchend' ||\n        (e.type === 'touchend' && e.changedTouches.length < 2 && !device.android)\n      ) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl\n      .transition(swiper.params.speed)\n      .transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const device = swiper.device;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal() &&\n        ((Math.floor(image.minX) === Math.floor(image.startX) &&\n          image.touchesCurrent.x < image.touchesStart.x) ||\n          (Math.floor(image.maxX) === Math.floor(image.startX) &&\n            image.touchesCurrent.x > image.touchesStart.x))\n      ) {\n        image.isTouched = false;\n        return;\n      }\n      if (\n        !swiper.isHorizontal() &&\n        ((Math.floor(image.minY) === Math.floor(image.startY) &&\n          image.touchesCurrent.y < image.touchesStart.y) ||\n          (Math.floor(image.maxY) === Math.floor(image.startY) &&\n            image.touchesCurrent.y > image.touchesStart.y))\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x =\n      (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y =\n      (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0)\n      momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0)\n      momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl\n      .transition(momentumDuration)\n      .transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      }\n      if (gesture.$imageWrapEl) {\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n    const window = getWindow();\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      if (e && e.target) {\n        gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      }\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n      }\n\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (\n      !gesture.$imageEl ||\n      gesture.$imageEl.length === 0 ||\n      !gesture.$imageWrapEl ||\n      gesture.$imageWrapEl.length === 0\n    )\n      return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left + window.scrollX;\n      offsetY = gesture.$slideEl.offset().top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl\n      .transition(300)\n      .transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (\n      !gesture.$imageEl ||\n      gesture.$imageEl.length === 0 ||\n      !gesture.$imageWrapEl ||\n      gesture.$imageWrapEl.length === 0\n    )\n      return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n\n  toggleGestures(method) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { slideSelector: selector, passiveListener: passive } = zoom;\n    swiper.$wrapperEl[method]('gesturestart', selector, zoom.onGestureStart, passive);\n    swiper.$wrapperEl[method]('gesturechange', selector, zoom.onGestureChange, passive);\n    swiper.$wrapperEl[method]('gestureend', selector, zoom.onGestureEnd, passive);\n  },\n  enableGestures() {\n    if (this.zoom.gesturesEnabled) return;\n    this.zoom.gesturesEnabled = true;\n    this.zoom.toggleGestures('on');\n  },\n  disableGestures() {\n    if (!this.zoom.gesturesEnabled) return;\n    this.zoom.gesturesEnabled = false;\n    this.zoom.toggleGestures('off');\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const support = swiper.support;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener =\n      swiper.touchEvents.start === 'touchstart' &&\n      support.passiveListener &&\n      swiper.params.passiveListeners\n        ? { passive: true, capture: false }\n        : false;\n    const activeListenerWithCapture = support.passiveListener\n      ? { passive: false, capture: true }\n      : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    swiper.zoom.passiveListener = passiveListener;\n    swiper.zoom.slideSelector = slideSelector;\n\n    // Scale image\n    if (support.gestures) {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(\n        swiper.touchEvents.start,\n        slideSelector,\n        zoom.onGestureStart,\n        passiveListener,\n      );\n      swiper.$wrapperEl.on(\n        swiper.touchEvents.move,\n        slideSelector,\n        zoom.onGestureChange,\n        activeListenerWithCapture,\n      );\n      swiper.$wrapperEl.on(\n        swiper.touchEvents.end,\n        slideSelector,\n        zoom.onGestureEnd,\n        passiveListener,\n      );\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(\n          swiper.touchEvents.cancel,\n          slideSelector,\n          zoom.onGestureEnd,\n          passiveListener,\n        );\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(\n      swiper.touchEvents.move,\n      `.${swiper.params.zoom.containerClass}`,\n      zoom.onTouchMove,\n      activeListenerWithCapture,\n    );\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    const support = swiper.support;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener =\n      swiper.touchEvents.start === 'touchstart' &&\n      support.passiveListener &&\n      swiper.params.passiveListeners\n        ? { passive: true, capture: false }\n        : false;\n    const activeListenerWithCapture = support.passiveListener\n      ? { passive: false, capture: true }\n      : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (support.gestures) {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(\n        swiper.touchEvents.start,\n        slideSelector,\n        zoom.onGestureStart,\n        passiveListener,\n      );\n      swiper.$wrapperEl.off(\n        swiper.touchEvents.move,\n        slideSelector,\n        zoom.onGestureChange,\n        activeListenerWithCapture,\n      );\n      swiper.$wrapperEl.off(\n        swiper.touchEvents.end,\n        slideSelector,\n        zoom.onGestureEnd,\n        passiveListener,\n      );\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(\n          swiper.touchEvents.cancel,\n          slideSelector,\n          zoom.onGestureEnd,\n          passiveListener,\n        );\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(\n      swiper.touchEvents.move,\n      `.${swiper.params.zoom.containerClass}`,\n      zoom.onTouchMove,\n      activeListenerWithCapture,\n    );\n  },\n};\n\nexport default {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n\n    bindModuleMethods(swiper, {\n      zoom: {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n        ...Zoom,\n      },\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl\n            ? swiper.zoom.gesture.$imageEl[0]\n            : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl\n            ? swiper.zoom.gesture.$slideEl[0]\n            : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy(swiper) {\n      swiper.zoom.disable();\n    },\n    touchStart(swiper, e) {\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(swiper, e) {\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(swiper, e) {\n      if (\n        !swiper.animating &&\n        swiper.params.zoom.enabled &&\n        swiper.zoom.enabled &&\n        swiper.params.zoom.toggle\n      ) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd(swiper) {\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n    slideChange(swiper) {\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n","import { getWindow } from 'ssr-window';\nimport $ from '../../utils/dom';\nimport { bindModuleMethods } from '../../utils/utils';\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(\n          `.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`,\n        )\n      : swiper.slides.eq(index);\n\n    const $images = $slideEl.find(\n      `.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`,\n    );\n    if (\n      $slideEl.hasClass(params.elementClass) &&\n      !$slideEl.hasClass(params.loadedClass) &&\n      !$slideEl.hasClass(params.loadingClass)\n    ) {\n      $images.push($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n      const $pictureEl = $imageEl.parent('picture');\n\n      swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {\n        if (\n          typeof swiper === 'undefined' ||\n          swiper === null ||\n          !swiper ||\n          (swiper && !swiper.params) ||\n          swiper.destroyed\n        )\n          return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if ($pictureEl.length) {\n            $pictureEl.children('source').each((sourceEl) => {\n              const $source = $(sourceEl);\n\n              if ($source.attr('data-srcset')) {\n                $source.attr('srcset', $source.attr('data-srcset'));\n                $source.removeAttr('data-srcset');\n              }\n            });\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(\n              `[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`,\n            );\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(\n              `.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`,\n            );\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const { $wrapperEl, params: swiperParams, slides, activeIndex } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if (\n          $wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n            .length\n        ) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n  checkInViewOnLoad() {\n    const window = getWindow();\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const $scrollElement = swiper.params.lazy.scrollingElement\n      ? $(swiper.params.lazy.scrollingElement)\n      : $(window);\n    const isWindow = $scrollElement[0] === window;\n    const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n    const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n    const swiperOffset = swiper.$el.offset();\n    const { rtlTranslate: rtl } = swiper;\n\n    let inView = false;\n\n    if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n    const swiperCoord = [\n      [swiperOffset.left, swiperOffset.top],\n      [swiperOffset.left + swiper.width, swiperOffset.top],\n      [swiperOffset.left, swiperOffset.top + swiper.height],\n      [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n    ];\n    for (let i = 0; i < swiperCoord.length; i += 1) {\n      const point = swiperCoord[i];\n      if (\n        point[0] >= 0 &&\n        point[0] <= scrollElementWidth &&\n        point[1] >= 0 &&\n        point[1] <= scrollElementHeight\n      ) {\n        if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n        inView = true;\n      }\n    }\n\n    const passiveListener =\n      swiper.touchEvents.start === 'touchstart' &&\n      swiper.support.passiveListener &&\n      swiper.params.passiveListeners\n        ? { passive: true, capture: false }\n        : false;\n\n    if (inView) {\n      swiper.lazy.load();\n      $scrollElement.off('scroll', swiper.lazy.checkInViewOnLoad, passiveListener);\n    } else if (!swiper.lazy.scrollHandlerAttached) {\n      swiper.lazy.scrollHandlerAttached = true;\n      $scrollElement.on('scroll', swiper.lazy.checkInViewOnLoad, passiveListener);\n    }\n  },\n};\n\nexport default {\n  name: 'lazy',\n  params: {\n    lazy: {\n      checkInView: false,\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n      scrollingElement: '',\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        ...Lazy,\n      },\n    });\n  },\n  on: {\n    beforeInit(swiper) {\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init(swiper) {\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        if (swiper.params.lazy.checkInView) {\n          swiper.lazy.checkInViewOnLoad();\n        } else {\n          swiper.lazy.load();\n        }\n      }\n    },\n    scroll(swiper) {\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    'scrollbarDragMove resize _freeModeNoMomentumRelease': function lazyLoad(swiper) {\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart(swiper) {\n      if (swiper.params.lazy.enabled) {\n        if (\n          swiper.params.lazy.loadOnTransitionStart ||\n          (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)\n        ) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd(swiper) {\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n    slideChange(swiper) {\n      const {\n        lazy,\n        cssMode,\n        watchSlidesVisibility,\n        watchSlidesProgress,\n        touchReleaseOnEdges,\n        resistanceRatio,\n      } = swiper.params;\n      if (\n        lazy.enabled &&\n        (cssMode ||\n          ((watchSlidesVisibility || watchSlidesProgress) &&\n            (touchReleaseOnEdges || resistanceRatio === 0)))\n      ) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { nextTick, bindModuleMethods } from '../../utils/utils';\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = (maxIndex + minIndex) >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    })();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (\n        ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1]\n      );\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier =\n          (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nexport default {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        ...Controller,\n      },\n    });\n  },\n  on: {\n    update(swiper) {\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize(swiper) {\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate(swiper) {\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(swiper, translate, byController) {\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(swiper, duration, byController) {\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n","import $ from '../../utils/dom';\nimport { bindModuleMethods, classesToSelector } from '../../utils/utils';\n\nconst A11y = {\n  getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  },\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  makeElNotFocusable($el) {\n    $el.attr('tabIndex', '-1');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElRoleDescription($el, description) {\n    $el.attr('aria-roledescription', description);\n    return $el;\n  },\n  addElControls($el, controls) {\n    $el.attr('aria-controls', controls);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  addElId($el, id) {\n    $el.attr('id', id);\n    return $el;\n  },\n  addElLive($el, live) {\n    $el.attr('aria-live', live);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const swiper = this;\n    const params = swiper.params.a11y;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n\n    if (\n      swiper.pagination &&\n      $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))\n    ) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop || !swiper.navigation) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n        swiper.a11y.makeElNotFocusable($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n        swiper.a11y.makeElFocusable($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n        swiper.a11y.makeElNotFocusable($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n        swiper.a11y.makeElFocusable($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (\n      swiper.pagination &&\n      swiper.params.pagination.clickable &&\n      swiper.pagination.bullets &&\n      swiper.pagination.bullets.length\n    ) {\n      swiper.pagination.bullets.each((bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel(\n            $bulletEl,\n            params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1),\n          );\n        }\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Container\n    const $containerEl = swiper.$el;\n    if (params.containerRoleDescriptionMessage) {\n      swiper.a11y.addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      swiper.a11y.addElLabel($containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const $wrapperEl = swiper.$wrapperEl;\n    const wrapperId = $wrapperEl.attr('id') || `swiper-wrapper-${swiper.a11y.getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    swiper.a11y.addElId($wrapperEl, wrapperId);\n    swiper.a11y.addElLive($wrapperEl, live);\n\n    // Slide\n    if (params.itemRoleDescriptionMessage) {\n      swiper.a11y.addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n    }\n    swiper.a11y.addElRole($(swiper.slides), params.slideRole);\n\n    const slidesLength = swiper.params.loop\n      ? swiper.slides.filter((el) => !el.classList.contains(swiper.params.slideDuplicateClass))\n          .length\n      : swiper.slides.length;\n    swiper.slides.each((slideEl, index) => {\n      const $slideEl = $(slideEl);\n      const slideIndex = swiper.params.loop\n        ? parseInt($slideEl.attr('data-swiper-slide-index'), 10)\n        : index;\n      const ariaLabelMessage = params.slideLabelMessage\n        .replace(/\\{\\{index\\}\\}/, slideIndex + 1)\n        .replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n      swiper.a11y.addElLabel($slideEl, ariaLabelMessage);\n    });\n\n    // Navigation\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n\n    if ($nextEl && $nextEl.length) {\n      swiper.a11y.makeElFocusable($nextEl);\n      if ($nextEl[0].tagName !== 'BUTTON') {\n        swiper.a11y.addElRole($nextEl, 'button');\n        $nextEl.on('keydown', swiper.a11y.onEnterOrSpaceKey);\n      }\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      swiper.a11y.addElControls($nextEl, wrapperId);\n    }\n    if ($prevEl && $prevEl.length) {\n      swiper.a11y.makeElFocusable($prevEl);\n      if ($prevEl[0].tagName !== 'BUTTON') {\n        swiper.a11y.addElRole($prevEl, 'button');\n        $prevEl.on('keydown', swiper.a11y.onEnterOrSpaceKey);\n      }\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      swiper.a11y.addElControls($prevEl, wrapperId);\n    }\n\n    // Pagination\n    if (\n      swiper.pagination &&\n      swiper.params.pagination.clickable &&\n      swiper.pagination.bullets &&\n      swiper.pagination.bullets.length\n    ) {\n      swiper.pagination.$el.on(\n        'keydown',\n        classesToSelector(swiper.params.pagination.bulletClass),\n        swiper.a11y.onEnterOrSpaceKey,\n      );\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0)\n      swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterOrSpaceKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterOrSpaceKey);\n    }\n\n    // Pagination\n    if (\n      swiper.pagination &&\n      swiper.params.pagination.clickable &&\n      swiper.pagination.bullets &&\n      swiper.pagination.bullets.length\n    ) {\n      swiper.pagination.$el.off(\n        'keydown',\n        classesToSelector(swiper.params.pagination.bulletClass),\n        swiper.a11y.onEnterOrSpaceKey,\n      );\n    }\n  },\n};\nexport default {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      a11y: {\n        ...A11y,\n        liveRegion: $(\n          `<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`,\n        ),\n      },\n    });\n  },\n  on: {\n    afterInit(swiper) {\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge(swiper) {\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge(swiper) {\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate(swiper) {\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy(swiper) {\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n","import { getWindow } from 'ssr-window';\nimport { bindModuleMethods } from '../../utils/utils';\n\nconst History = {\n  init() {\n    const swiper = this;\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues(swiper.params.url);\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues(swiper.params.url);\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues(urlOverride) {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname\n      .slice(1)\n      .split('/')\n      .filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    const window = getWindow();\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key}/${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text\n      .toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nexport default {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      history: {\n        ...History,\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy(swiper) {\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    'transitionEnd _freeModeNoMomentumRelease': (swiper) => {\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n    slideChange(swiper) {\n      if (swiper.history.initialized && swiper.params.cssMode) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../utils/dom';\nimport { bindModuleMethods } from '../../utils/utils';\n\nconst HashNavigation = {\n  onHashChange() {\n    const swiper = this;\n    const document = getDocument();\n    swiper.emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl\n        .children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`)\n        .index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    const window = getWindow();\n    const document = getDocument();\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (\n      swiper.params.hashNavigation.replaceState &&\n      window.history &&\n      window.history.replaceState\n    ) {\n      window.history.replaceState(\n        null,\n        null,\n        `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '',\n      );\n      swiper.emit('hashSet');\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n      swiper.emit('hashSet');\n    }\n  },\n  init() {\n    const swiper = this;\n    const document = getDocument();\n    const window = getWindow();\n    if (\n      !swiper.params.hashNavigation.enabled ||\n      (swiper.params.history && swiper.params.history.enabled)\n    )\n      return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashChange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    const window = getWindow();\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashChange);\n    }\n  },\n};\nexport default {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      hashNavigation: {\n        initialized: false,\n        ...HashNavigation,\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy(swiper) {\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    'transitionEnd _freeModeNoMomentumRelease': (swiper) => {\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n    slideChange(swiper) {\n      if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n","/* eslint no-underscore-dangle: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { nextTick, bindModuleMethods } from '../../utils/utils';\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = nextTick(() => {\n      let autoplayResult;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(\n            swiper.slides.length - 1,\n            swiper.params.speed,\n            true,\n            true,\n          );\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n      if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\n      else if (autoplayResult === false) {\n        swiper.autoplay.run();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      ['transitionend', 'webkitTransitionEnd'].forEach((event) => {\n        swiper.$wrapperEl[0].addEventListener(event, swiper.autoplay.onTransitionEnd);\n      });\n    }\n  },\n  onVisibilityChange() {\n    const swiper = this;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n      swiper.autoplay.pause();\n    }\n    if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n      swiper.autoplay.run();\n      swiper.autoplay.paused = false;\n    }\n  },\n  onTransitionEnd(e) {\n    const swiper = this;\n    if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n    if (e.target !== swiper.$wrapperEl[0]) return;\n    ['transitionend', 'webkitTransitionEnd'].forEach((event) => {\n      swiper.$wrapperEl[0].removeEventListener(event, swiper.autoplay.onTransitionEnd);\n    });\n    swiper.autoplay.paused = false;\n    if (!swiper.autoplay.running) {\n      swiper.autoplay.stop();\n    } else {\n      swiper.autoplay.run();\n    }\n  },\n  onMouseEnter() {\n    const swiper = this;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      swiper.autoplay.stop();\n    } else {\n      swiper.autoplay.pause();\n    }\n\n    ['transitionend', 'webkitTransitionEnd'].forEach((event) => {\n      swiper.$wrapperEl[0].removeEventListener(event, swiper.autoplay.onTransitionEnd);\n    });\n  },\n  onMouseLeave() {\n    const swiper = this;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      return;\n    }\n    swiper.autoplay.paused = false;\n    swiper.autoplay.run();\n  },\n  attachMouseEvents() {\n    const swiper = this;\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.$el.on('mouseenter', swiper.autoplay.onMouseEnter);\n      swiper.$el.on('mouseleave', swiper.autoplay.onMouseLeave);\n    }\n  },\n  detachMouseEvents() {\n    const swiper = this;\n    swiper.$el.off('mouseenter', swiper.autoplay.onMouseEnter);\n    swiper.$el.off('mouseleave', swiper.autoplay.onMouseLeave);\n  },\n};\n\nexport default {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      autoplay: {\n        ...Autoplay,\n        running: false,\n        paused: false,\n      },\n    });\n  },\n  on: {\n    init(swiper) {\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n        const document = getDocument();\n        document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n        swiper.autoplay.attachMouseEvents();\n      }\n    },\n    beforeTransitionStart(swiper, speed, internal) {\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove(swiper) {\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    touchEnd(swiper) {\n      if (\n        swiper.params.cssMode &&\n        swiper.autoplay.paused &&\n        !swiper.params.autoplay.disableOnInteraction\n      ) {\n        swiper.autoplay.run();\n      }\n    },\n    destroy(swiper) {\n      swiper.autoplay.detachMouseEvents();\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n      const document = getDocument();\n      document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n    },\n  },\n};\n","import { extend, bindModuleMethods } from '../../utils/utils';\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nexport default {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      fadeEffect: {\n        ...Fade,\n      },\n    });\n  },\n  on: {\n    beforeInit(swiper) {\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      extend(swiper.params, overwriteParams);\n      extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate(swiper) {\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(swiper, duration) {\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n","import $ from '../../utils/dom';\nimport { extend, bindModuleMethods } from '../../utils/utils';\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el,\n      $wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${\n        isHorizontal ? slideAngle : 0\n      }deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal\n          ? $slideEl.find('.swiper-slide-shadow-left')\n          : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal\n          ? $slideEl.find('.swiper-slide-shadow-right')\n          : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(\n            `<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`,\n          );\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(\n            `<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`,\n          );\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(\n          `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${\n            -swiperWidth / 2\n          }px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`,\n        );\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier =\n          1.5 -\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2 +\n            Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(\n          `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${\n            -swiperHeight / 2 / scale2\n          }px) rotateX(-90deg)`,\n        );\n      }\n    }\n    const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n    $wrapperEl.transform(\n      `translate3d(0px,0,${zFactor}px) rotateX(${\n        swiper.isHorizontal() ? 0 : wrapperRotate\n      }deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`,\n    );\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find(\n        '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left',\n      )\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nexport default {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      cubeEffect: {\n        ...Cube,\n      },\n    });\n  },\n  on: {\n    beforeInit(swiper) {\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      extend(swiper.params, overwriteParams);\n      extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate(swiper) {\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(swiper, duration) {\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n","import $ from '../../utils/dom';\nimport { extend, bindModuleMethods } from '../../utils/utils';\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal()\n          ? $slideEl.find('.swiper-slide-shadow-left')\n          : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal()\n          ? $slideEl.find('.swiper-slide-shadow-right')\n          : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(\n            `<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`,\n          );\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(\n            `<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`,\n          );\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl.transform(\n        `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`,\n      );\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find(\n        '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left',\n      )\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nexport default {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      flipEffect: {\n        ...Flip,\n      },\n    });\n  },\n  on: {\n    beforeInit(swiper) {\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      extend(swiper.params, overwriteParams);\n      extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate(swiper) {\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(swiper, duration) {\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n","import $ from '../../utils/dom';\nimport { bindModuleMethods } from '../../utils/utils';\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const { width: swiperWidth, height: swiperHeight, slides, slidesSizesGrid } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier =\n        ((center - slideOffset - slideSize / 2) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = (parseFloat(params.stretch) / 100) * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal\n          ? $slideEl.find('.swiper-slide-shadow-left')\n          : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal\n          ? $slideEl.find('.swiper-slide-shadow-right')\n          : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(\n            `<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`,\n          );\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(\n            `<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`,\n          );\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length)\n          $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length)\n          $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find(\n        '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left',\n      )\n      .transition(duration);\n  },\n};\n\nexport default {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      coverflowEffect: {\n        ...Coverflow,\n      },\n    });\n  },\n  on: {\n    beforeInit(swiper) {\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate(swiper) {\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(swiper, duration) {\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n","import { extend, isObject, bindModuleMethods } from '../../utils/utils';\nimport $ from '../../utils/dom';\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    if (swiper.thumbs.initialized) return false;\n    swiper.thumbs.initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(\n        extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        }),\n      );\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n    return true;\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass))\n      return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides\n        .eq(currentIndex)\n        .prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`)\n        .eq(0)\n        .index();\n      const nextIndex = swiper.slides\n        .eq(currentIndex)\n        .nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`)\n        .eq(0)\n        .index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView =\n      thumbsSwiper.params.slidesPerView === 'auto'\n        ? thumbsSwiper.slidesPerViewDynamic()\n        : thumbsSwiper.params.slidesPerView;\n\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        if (\n          thumbsSwiper.slides\n            .eq(currentThumbsIndex)\n            .hasClass(thumbsSwiper.params.slideDuplicateClass)\n        ) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides\n          .eq(currentThumbsIndex)\n          .prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`)\n          .eq(0)\n          .index();\n        const nextThumbsIndex = thumbsSwiper.slides\n          .eq(currentThumbsIndex)\n          .nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`)\n          .eq(0)\n          .index();\n        if (typeof prevThumbsIndex === 'undefined') {\n          newThumbsIndex = nextThumbsIndex;\n        } else if (typeof nextThumbsIndex === 'undefined') {\n          newThumbsIndex = prevThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex =\n            thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex = nextThumbsIndex;\n        } else {\n          newThumbsIndex = prevThumbsIndex;\n        }\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n\n      if (\n        thumbsSwiper.visibleSlidesIndexes &&\n        thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0\n      ) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (\n          newThumbsIndex > currentThumbsIndex &&\n          thumbsSwiper.params.slidesPerGroup === 1\n        ) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (\n      thumbsSwiper.params.loop ||\n      (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)\n    ) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl\n          .children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`)\n          .addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nexport default {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    bindModuleMethods(swiper, {\n      thumbs: {\n        swiper: null,\n        initialized: false,\n        ...Thumbs,\n      },\n    });\n  },\n  on: {\n    beforeInit(swiper) {\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange(swiper) {\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update(swiper) {\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize(swiper) {\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate(swiper) {\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(swiper, duration) {\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy(swiper) {\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n","// Swiper Class\nimport Swiper from './components/core/core-class';\n\n//IMPORT_COMPONENTS\n\nconst components = [\n  //INSTALL_COMPONENTS\n];\n\nSwiper.use(components);\n\n//EXPORT\n"],"names":["a","window","onscroll","header","document","querySelector","headerOffsetTrigger","offsetHeight","pageOffset","pageYOffset","classList","add","remove","mobileMenu","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","toggle","scrollLockMethod","bodyScrollLock","body","addEventListener","matchMedia","e","matches","enableBodyScroll","factory","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","isObject$1","obj","constructor","extend$1","src","keys","forEach","support","device","browser","ssrDocument","removeEventListener","activeElement","blur","nodeName","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","getDocument","doc","ssrWindow","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","requestAnimationFrame","callback","cancelAnimationFrame","id","getWindow","win","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_construct","Parent","args","Class","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","toString","push","instance","Function","bind","_wrapNativeSuper","_cache","Map","undefined","indexOf","TypeError","has","get","set","Wrapper","create","value","enumerable","writable","configurable","Dom7","_Array","items","_this","proto","_assertThisInitialized","self","ReferenceError","concat","defineProperty","subClass","superClass","Array","arrayFlat","arr","res","el","isArray","arrayFilter","filter","$","selector","context","window1","document1","html","trim","toCreate","tempParent","innerHTML","qsa","nodeType","arrayUnique","uniqueArray","fn","Methods","addClass","_len","classes","_key","classNames","map","c","split","_el$classList","removeClass","_len2","_key2","_el$classList2","hasClass","_len4","_key4","className","contains","toggleClass","_len3","_key3","attr","attrs","attrName","removeAttr","removeAttribute","transform","transition","duration","transitionDuration","on","j","_len5","_key5","eventType","targetSelector","listener","capture","handleLiveEvent","eventData","dom7EventData","unshift","is","_parents","parents","k","handleEvent","events","_event","dom7LiveListeners","proxyListener","event","dom7Listeners","off","_len6","_key6","handlers","handler","splice","dom7proxy","trigger","_len9","_key9","evt","detail","bubbles","cancelable","data","dataIndex","dispatchEvent","transitionEnd","dom","fireCallBack","outerWidth","includeMargins","_styles","styles","offsetWidth","parseFloat","outerHeight","_styles2","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","_prop","each","index","text","textContent","compareWith","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","_next","prev","previousElementSibling","prevAll","prevEls","_prev","parent","parentNode","_parent","closest","find","foundElements","found","removeChild","nextTick","delay","now","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","currentStyle","WebKitCSSMatrix","webkitTransform","replace","join","MozTransform","OTransform","MsTransform","msTransform","m41","m42","isObject","slice","extend","to","noExtend","nextSource","HTMLElement","node","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","__swiper__","bindModuleMethods","subKey","classesToSelector","createElementIfNotDefined","$container","params","createElements","checkProps","auto","element","getSupport","touch","DocumentTouch","pointerEvents","PointerEvent","maxTouchPoints","observer","passiveListener","supportsPassive","opts","gestures","methodName","Observer","attach","options","swiper","MutationObserver","WebkitMutationObserver","mutations","emit","observerUpdate","observe","attributes","childList","characterData","observers","init","observeParents","containerParents","$el","observeSlideChildren","$wrapperEl","destroy","disconnect","onTouchStart","touchEventsData","touches","enabled","animating","preventInteractionOnTransition","originalEvent","$targetEl","touchEventsTarget","wrapperEl","isTouchEvent","type","which","button","isTouched","isMoved","noSwipingClass","shadowRoot","path","noSwipingSelector","isTargetShadow","noSwiping","closestElement","base","__closestFrom","assignedSlot","getRootNode","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","updateSize","swipeDirection","threshold","allowThresholdMove","focusableElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","onTouchMove","touchAngle","rtl","rtlTranslate","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","loop","isVertical","translate","maxTranslate","minTranslate","diffX","diffY","Math","sqrt","pow","isHorizontal","atan2","abs","PI","cssMode","touchMoveStopPropagation","nested","stopPropagation","loopFix","startTranslate","setTransition","allowMomentumBounce","grabCursor","allowSlideNext","allowSlidePrev","setGrabCursor","diff","touchRatio","currentTranslate","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","watchSlidesProgress","watchSlidesVisibility","updateActiveIndex","updateSlidesClasses","velocities","position","time","updateProgress","setTranslate","onTouchEnd","slidesGrid","snapGrid","touchEndTime","timeDiff","updateClickedSlide","lastClickTime","destroyed","currentPos","slideTo","activeIndex","slides","freeModeMomentum","afterBouncePosition","needsLoopFix","nextSlide","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","freeModeMomentumBounce","centeredSlides","freeModeSticky","once","moveDistance","currentSlideSize","slidesSizesGrid","speed","slideToClosest","transitionStart","longSwipesMs","stopIndex","groupSize","slidesPerGroupSkip","slidesPerGroup","_increment","ratio","increment","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","onResize","breakpoints","setBreakpoint","updateSlides","slidesPerView","isEnd","isBeginning","autoplay","running","paused","run","watchOverflow","checkOverflow","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","previousTranslate","scrollWidth","translatesDiff","progress","dummyEventAttached","dummyEventListener","defaults","direction","initialSlide","updateOnWindowResize","resizeObserver","width","height","url","autoHeight","setWrapperSize","virtualTranslate","effect","breakpointsBase","spaceBetween","slidesPerColumn","slidesPerColumnFill","centeredSlidesBounds","slidesOffsetBefore","slidesOffsetAfter","normalizeSlideIndex","centerInsufficientSlides","roundLengths","simulateTouch","uniqueNavElements","slideToClickedSlide","preloadImages","updateOnImagesReady","loopAdditionalSlides","loopedSlides","loopFillGroupWithBlank","loopPreventsSlide","passiveListeners","containerModifierClass","slideClass","slideBlankClass","slideActiveClass","slideDuplicateActiveClass","slideVisibleClass","slideDuplicateClass","slideNextClass","slideDuplicateNextClass","slidePrevClass","slideDuplicatePrevClass","wrapperClass","runCallbacksOnInit","_emitClasses","prototypes","modular","useParams","instanceParams","modules","moduleName","module1","useModules","modulesParams","moduleParams","moduleEventName","eventsEmitter","priority","method","eventsListeners","onceHandler","__emitterProxy","onAny","eventsAnyListeners","offAny","eventHandler","eventsArray","update","clientWidth","clientHeight","parseInt","Number","isNaN","size","getDirectionLabel","property","getDirectionPropertyValue","label","swiperSize","wrongRTL","isVirtual","virtual","previousSlidesLength","slidesLength","offsetBefore","offsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","marginRight","slidesNumberEvenToRows","floor","ceil","max","slidesPerRow","numFullColumns","slideSize","slide","newSlideOrderIndex","column","row","groupIndex","slideIndexInGroup","columnsInGroup","min","order","slideStyles","currentTransform","currentWebKitTransform","paddingLeft","paddingRight","boxSizing","_slide$","swiperSlideSize","_$wrapperEl$css","_$wrapperEl$css2","newSlidesGrid","_i","slidesGridItem","_i2","_slidesGridItem","_slides$filter$css","_","slideIndex","allSlidesSize","slideSizeValue","maxSnap","snap","_allSlidesSize","allSlidesOffset","snapIndex","updateSlidesOffset","updateAutoHeight","activeSlides","newHeight","getSlideByIndex","visibleSlides","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","offsetCenter","visibleSlidesIndexes","slideProgress","slideBefore","slideAfter","multiplier","wasBeginning","wasEnd","activeSlide","realIndex","prevSlide","emitSlidesClasses","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","skip","initialized","slideFound","clickedSlide","clickedIndex","byController","x","y","translateTo","runCallbacks","translateBounds","internal","newTranslate","_wrapperEl$scrollTo","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","dir","initial","Error","indexAsNumber","isFinite","normalizedTranslate","normalizedGird","normalizedGridNext","t","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","slideNext","_clientLeft","slidePrev","prevIndex","normalize","val","normalizedSnapGrid","prevSnap","slideReset","currentSnap","nextSnap","_currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","blankSlidesNum","blankNode","prependSlides","appendSlides","cloneNode","snapTranslate","loopDestroy","moving","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","attachEvents","touchEvents","start","move","end","passive","cancel","ios","android","detachEvents","_swiper$loopedSlides","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","param","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","directionChanged","needsReLoop","changeDirection","isEnabled","disable","enable","containerEl","currentHeight","innerHeight","points","point","substr","sort","b","_points$i","wasLocked","lastSlidePosition","addClasses","entries","prefix","resultClasses","suffixes","item","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","Swiper","desktop","swipers","newParams","getDevice","overrides","_temp","platform","ua","screenWidth","screenHeight","ipad","ipod","iphone","macos","_ref","match","iPadScreens","os","getBrowser","isEdge","isSafari","toLowerCase","isWebView","test","moduleParamName","swiperParams","passedParams","eventName","touchEventsTouch","touchEventsDesktop","clickTimeout","staticProps","_proto","setProgress","current","getSlideClasses","slideEl","updates","spv","breakLoop","newDirection","needUpdate","currentDirection","mount","mounted","getWrapperSelector","getWrapper","wrapper","deleteInstance","cleanStyles","deleteProps","object","extendDefaults","newDefaults","installModule","name","use","m","_defineProperties","descriptor","prototypeGroup","protoMethod","resize","createObserver","ResizeObserver","newWidth","contentBoxSize","contentRect","inlineSize","blockSize","resizeHandler","removeObserver","unobserve","orientationChangeHandler","Virtual","force","offsetProp","slidesAfter","slidesBefore","_swiper$params","_swiper$params$virtua","addSlidesBefore","addSlidesAfter","_swiper$virtual","previousFrom","from","previousTo","previousSlidesGrid","renderSlide","previousOffset","onRendered","lazy","load","renderExternal","slidesToRender","renderExternalUpdate","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","Keyboard","handle","kc","keyCode","charCode","pageUpDown","keyboard","isPageUp","isPageDown","isArrowLeft","isArrowRight","isArrowUp","isArrowDown","shiftKey","altKey","ctrlKey","metaKey","onlyInViewport","inView","swiperWidth","swiperHeight","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","isEventSupported","isSupported","implementation","hasFeature","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","eventsTarget","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","positions","sensitivity","_newEvent","sign","ignoreWheelEvents","timeout","_recentWheelEvents","shift","_prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","newEvent","raw","prevEvent","animateSlider","releaseScroll","thresholdDelta","thresholdTime","getTime","Navigation","toggleEl","disabled","disabledClass","tagName","_swiper$navigation","$nextEl","$prevEl","lockClass","onPrevClick","onNextClick","_swiper$navigation2","Pagination","pagination","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","getPointerPosition","clientX","clientY","setDragPosition","positionRatio","dragStartPos","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragClass","dragEl","draggable","Parallax","setTransform","currentOpacity","currentScale","parallax","parallaxEl","$parallaxEl","parallaxDuration","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","onGestureChange","scaleMove","minRatio","onGestureEnd","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","toggleGestures","slideSelector","enableGestures","gesturesEnabled","disableGestures","activeListenerWithCapture","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","background","$pictureEl","sourceEl","$source","preloaderClass","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","checkInViewOnLoad","$scrollElement","scrollingElement","isWindow","scrollElementWidth","scrollElementHeight","scrollHandlerAttached","Controller","LinearSpline","guess","i1","i3","binarySearch","array","interpolate","getInterpolateFunction","controller","spline","_setTranslate","controlledTranslate","controlled","control","setControlledTranslate","by","inverse","setControlledTransition","A11y","getRandomNumber","repeat","round","random","makeElFocusable","makeElNotFocusable","addElRole","role","addElRoleDescription","description","addElControls","controls","addElLabel","addElId","addElLive","live","disableEl","enableEl","onEnterOrSpaceKey","a11y","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","$containerEl","containerRoleDescriptionMessage","containerMessage","wrapperId","itemRoleDescriptionMessage","slideRole","ariaLabelMessage","slideLabelMessage","History","hashNavigation","paths","getPathValues","scrollToSlide","setHistoryPopState","urlOverride","pathArray","URL","part","setHistory","slugify","root","includes","currentState","state","slideHistory","HashNavigation","onHashChange","newHash","setHash","slideHash","watchState","Autoplay","$activeSlideEl","autoplayResult","reverseDirection","stopOnLastSlide","pause","waitForTransition","onVisibilityChange","visibilityState","onMouseEnter","disableOnInteraction","onMouseLeave","attachMouseEvents","pauseOnMouseEnter","detachMouseEvents","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","$cubeShadowEl","cubeEffect","wrapperRotate","shadow","slideAngle","tz","slideShadows","shadowBefore","shadowAfter","shadowOffset","shadowScale","shadowAngle","scale1","scale2","sin","cos","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","Thumbs","thumbsParams","thumbs","SwiperClass","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","autoScrollOffset","useOffset","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","components","beforeInit","overwriteParams","hideOnClick","toEdge","fromEdge","_swiper$navigation3","isHidden","_swiper$navigation4","targetEl","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","touchStart","touchEnd","doubleTap","slideChange","checkInView","loadOnTransitionStart","scroll","notificationClass","afterInit","paginationUpdate","beforeTransitionStart","sliderFirstMove","beforeDestroy","__esModule","default","_inheritsLoose","Constructor","_isNativeFunction","makeReactive","result","isNode","calcSupport","checkObserver","checkPassiveListener","checkGestures","calcDevice","windows","calcBrowser","supportsResizeObserver","ObserverFunc","module","isVisible","getSwiperTranslate","z","newProgress","isValidNumber","slideChanged","swipingClassHasValue","isNavButtonTarget","prepareClasses","isPicture","translateValue","translated","Resize","getSlides","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","lazyLoad","randomChar","activeSlideHash","slideOffset"],"version":3,"file":"index.7ad0fd9a.js.map"}